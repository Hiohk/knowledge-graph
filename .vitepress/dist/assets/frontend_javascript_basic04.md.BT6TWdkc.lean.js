import{$ as k,ac as l,U as p,a5 as i,G as s,c as t,Z as h,av as a,S as e}from"./chunks/framework.DpMkwoNM.js";const v=JSON.parse('{"title":"4. 强制类型转换","description":"","frontmatter":{"prev":{"text":"原生函数","link":"/frontend/javascript/basic03"},"next":{"text":"语法","link":"/frontend/javascript/basic05"}},"headers":[],"relativePath":"frontend/javascript/basic04.md","filePath":"frontend/javascript/basic04.md","lastUpdated":1710908861000}'),E={name:"frontend/javascript/basic04.md"},r=a("",11),d=a("",4),g=i("code",null,"replacer",-1),y=i("code",null,"space",-1),o=a("",24);function F(c,u,C,A,D,B){const n=l("Badge");return e(),p("div",null,[r,i("blockquote",null,[d,i("p",null,[g,s(),t(n,null,{default:h(()=>[s("可选")]),_:1}),s(": 如果该参数是一个函数，则在序列化过程中，被序列化的值的每个属性都会经过该函数的转换和处理；如果该参数是一个数组，则只有包含在这个数组中的属性名才会被序列化到最终的 JSON 字符串中；如果该参数为 null 或者未提供，则对象所有的属性都会被序列化。")]),i("p",null,[y,s(),t(n,null,{default:h(()=>[s("可选")]),_:1}),s(": 指定缩进用的空白字符串，用于美化输出（pretty-print）；如果参数是个数字，它代表有多少的空格；上限为 10。该值若小于 1，则意味着没有空格；如果该参数为字符串（当字符串长度超过 10 个字母，取其前 10 个字母），该字符串将被作为空格；如果该参数没有提供（或者> 为 null），将没有空格。")])]),o])}const q=k(E,[["render",F]]);export{v as __pageData,q as default};
