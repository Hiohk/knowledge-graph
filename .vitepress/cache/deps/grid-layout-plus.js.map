{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/isWindow.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/window.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/is.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/actions/drag/plugin.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/domObjects.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/browser.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/domUtils.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/extend.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/rect.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/getOriginXY.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/normalizeListeners.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/hypot.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/pointerExtend.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/pointerUtils.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/core/BaseEvent.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/arr.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/actions/drop/DropEvent.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/actions/drop/plugin.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/actions/gesture/plugin.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/actions/resize/plugin.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/raf.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/actions/plugin.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/auto-scroll/plugin.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/misc.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/auto-start/InteractableMethods.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/auto-start/base.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/auto-start/dragAxis.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/auto-start/hold.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/auto-start/plugin.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/core/interactablePreventDefault.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/isNonNativeEvent.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/utils/clone.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/modifiers/Modification.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/modifiers/base.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/core/options.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/core/InteractEvent.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/core/PointerInfo.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/core/Interaction.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/offset/plugin.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/inertia/plugin.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/core/Eventable.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/core/events.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/core/interactionFinder.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/core/interactions.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/core/Interactable.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/core/InteractableSet.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/core/scope.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/core/InteractStatic.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/interact/index.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/snappers/edgeTarget.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/snappers/elements.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/snappers/grid.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/snappers/plugin.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/modifiers/aspectRatio.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/modifiers/noop.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/modifiers/restrict/pointer.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/modifiers/restrict/edges.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/modifiers/restrict/rect.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/modifiers/restrict/size.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/modifiers/snap/pointer.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/modifiers/snap/size.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/modifiers/snap/edges.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/modifiers/all.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/modifiers/plugin.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/pointer-events/PointerEvent.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/pointer-events/base.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/pointer-events/holdRepeat.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/pointer-events/interactableTargets.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/pointer-events/plugin.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/reflow/plugin.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/interactjs/index.ts", "../../../node_modules/.pnpm/interactjs@1.10.26/node_modules/@interactjs/interactjs/index.ts", "../../../node_modules/.pnpm/@vexip-ui+utils@2.13.1/node_modules/@vexip-ui/utils/src/common.ts", "../../../node_modules/.pnpm/@vexip-ui+utils@2.13.1/node_modules/@vexip-ui/utils/src/clipboard.ts", "../../../node_modules/.pnpm/@vexip-ui+utils@2.13.1/node_modules/@vexip-ui/utils/src/color.ts", "../../../node_modules/.pnpm/@vexip-ui+utils@2.13.1/node_modules/@vexip-ui/utils/src/data.ts", "../../../node_modules/.pnpm/@vexip-ui+utils@2.13.1/node_modules/@vexip-ui/utils/src/number.ts", "../../../node_modules/.pnpm/@vexip-ui+utils@2.13.1/node_modules/@vexip-ui/utils/src/date.ts", "../../../node_modules/.pnpm/@vexip-ui+utils@2.13.1/node_modules/@vexip-ui/utils/src/deep-clone.ts", "../../../node_modules/.pnpm/@vexip-ui+utils@2.13.1/node_modules/@vexip-ui/utils/src/destroy-object.ts", "../../../node_modules/.pnpm/@vexip-ui+utils@2.13.1/node_modules/@vexip-ui/utils/src/dom-event.ts", "../../../node_modules/.pnpm/@vexip-ui+utils@2.13.1/node_modules/@vexip-ui/utils/src/dom.ts", "../../../node_modules/.pnpm/@vexip-ui+utils@2.13.1/node_modules/@vexip-ui/utils/src/escape-html.ts", "../../../node_modules/.pnpm/@vexip-ui+utils@2.13.1/node_modules/@vexip-ui/utils/src/event-emitter.ts", "../../../node_modules/.pnpm/@vexip-ui+utils@2.13.1/node_modules/@vexip-ui/utils/src/log.ts", "../../../node_modules/.pnpm/@vexip-ui+utils@2.13.1/node_modules/@vexip-ui/utils/src/performance.ts", "../../../node_modules/.pnpm/@vexip-ui+utils@2.13.1/node_modules/@vexip-ui/utils/src/support.ts", "../../../node_modules/.pnpm/@vexip-ui+utils@2.13.1/node_modules/@vexip-ui/utils/src/transform.ts", "../../../node_modules/.pnpm/@vexip-ui+utils@2.13.1/node_modules/@vexip-ui/utils/src/word-case.ts", "../../../node_modules/.pnpm/grid-layout-plus@1.0.4_vue@3.4.15/node_modules/grid-layout-plus/src/helpers/common.ts", "../../../node_modules/.pnpm/grid-layout-plus@1.0.4_vue@3.4.15/node_modules/grid-layout-plus/src/helpers/draggable.ts", "../../../node_modules/.pnpm/grid-layout-plus@1.0.4_vue@3.4.15/node_modules/grid-layout-plus/src/helpers/responsive.ts", "../../../node_modules/.pnpm/grid-layout-plus@1.0.4_vue@3.4.15/node_modules/grid-layout-plus/src/helpers/dom.ts", "../../../node_modules/.pnpm/grid-layout-plus@1.0.4_vue@3.4.15/node_modules/grid-layout-plus/src/components/grid-item.vue", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/utils/dist/index.mjs", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/listener.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/clickoutside.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/display.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/shared/utils.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/full-screen.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/hover.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/intersection.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/manual-ref.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/modifier.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/mounted.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/moving.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/pointer.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@floating-ui+utils@0.1.6/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@floating-ui+core@1.5.1/node_modules/@floating-ui/core/dist/floating-ui.core.mjs", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@floating-ui+utils@0.1.6/node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@floating-ui+dom@1.5.3/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/utils/freeze.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/utils/element.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/utils/global.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/utils/process.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/utils/scheduler.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/ResizeObservation.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/ResizeObserverController.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/node_modules/.pnpm/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/ResizeObserver.js", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/resize.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/rtl.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/popper.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/theme.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/timer-record.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/trigger-handler.ts", "../../../node_modules/.pnpm/@vexip-ui+hooks@2.4.1_vue@3.4.15/node_modules/@vexip-ui/hooks/src/virtual.ts", "../../../node_modules/.pnpm/grid-layout-plus@1.0.4_vue@3.4.15/node_modules/grid-layout-plus/src/components/grid-layout.vue", "../../../node_modules/.pnpm/grid-layout-plus@1.0.4_vue@3.4.15/node_modules/grid-layout-plus/es/index.mjs"],
  "sourcesContent": ["export default (thing: any) => !!(thing && thing.Window) && thing instanceof thing.Window\n", "import isWindow from './isWindow'\n\nexport let realWindow = undefined as Window\n\nlet win = undefined as Window\nexport { win as window }\n\nexport function init(window: Window & { wrap?: (...args: any[]) => any }) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  realWindow = window\n\n  // create a TextNode\n  const el = window.document.createTextNode('')\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document && typeof window.wrap === 'function' && window.wrap(el) === el) {\n    // use wrapped window\n    window = window.wrap(window)\n  }\n\n  win = window\n}\n\nif (typeof window !== 'undefined' && !!window) {\n  init(window)\n}\n\nexport function getWindow(node: any) {\n  if (isWindow(node)) {\n    return node\n  }\n\n  const rootNode = node.ownerDocument || node\n\n  return rootNode.defaultView || win.window\n}\n", "import isWindow from './isWindow'\nimport * as win from './window'\n\nconst window = (thing: any): thing is Window => thing === win.window || isWindow(thing)\n\nconst docFrag = (thing: any): thing is DocumentFragment => object(thing) && thing.nodeType === 11\n\nconst object = (thing: any): thing is { [index: string]: any } => !!thing && typeof thing === 'object'\n\nconst func = (thing: any): thing is (...args: any[]) => any => typeof thing === 'function'\n\nconst number = (thing: any): thing is number => typeof thing === 'number'\n\nconst bool = (thing: any): thing is boolean => typeof thing === 'boolean'\n\nconst string = (thing: any): thing is string => typeof thing === 'string'\n\nconst element = (thing: any): thing is HTMLElement | SVGElement => {\n  if (!thing || typeof thing !== 'object') {\n    return false\n  }\n\n  const _window = win.getWindow(thing) || win.window\n\n  return /object|function/.test(typeof Element)\n    ? thing instanceof Element || thing instanceof _window.Element\n    : thing.nodeType === 1 && typeof thing.nodeName === 'string'\n}\n\nconst plainObject: typeof object = (thing: any): thing is { [index: string]: any } =>\n  object(thing) && !!thing.constructor && /function Object\\b/.test(thing.constructor.toString())\n\nconst array = <T extends unknown>(thing: any): thing is T[] =>\n  object(thing) && typeof thing.length !== 'undefined' && func(thing.splice)\n\nexport default {\n  window,\n  docFrag,\n  object,\n  func,\n  number,\n  bool,\n  string,\n  element,\n  plainObject,\n  array,\n}\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ListenersArg, OrBoolean } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    draggable(options: Partial<OrBoolean<DraggableOptions>> | boolean): this\n    draggable(): DraggableOptions\n    /**\n     * ```js\n     * interact(element).draggable({\n     *     onstart: function (event) {},\n     *     onmove : function (event) {},\n     *     onend  : function (event) {},\n     *\n     *     // the axis in which the first movement must be\n     *     // for the drag sequence to start\n     *     // 'xy' by default - any direction\n     *     startAxis: 'x' || 'y' || 'xy',\n     *\n     *     // 'xy' by default - don't restrict to one axis (move in any direction)\n     *     // 'x' or 'y' to restrict movement to either axis\n     *     // 'start' to restrict movement to the axis the drag started in\n     *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n     *\n     *     // max number of drags that can happen concurrently\n     *     // with elements of this Interactable. Infinity by default\n     *     max: Infinity,\n     *\n     *     // max number of drags that can target the same element+Interactable\n     *     // 1 by default\n     *     maxPerElement: 2\n     * })\n     *\n     * var isDraggable = interact('element').draggable(); // true\n     * ```\n     *\n     * Get or set whether drag actions can be performed on the target\n     *\n     * @param options - true/false or An object with event\n     * listeners to be fired on drag events (object makes the Interactable\n     * draggable)\n     */\n    draggable(options?: Partial<OrBoolean<DraggableOptions>> | boolean): this | DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drag: DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    drag?: typeof drag\n  }\n}\n\nexport type DragEvent = InteractEvent<'drag'>\n\nexport interface DraggableOptions extends PerActionDefaults {\n  startAxis?: 'x' | 'y' | 'xy'\n  lockAxis?: 'x' | 'y' | 'xy' | 'start'\n  oninertiastart?: ListenersArg\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nfunction install(scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  Interactable.prototype.draggable = drag.draggable\n\n  actions.map.drag = drag\n  actions.methodDict.drag = 'draggable'\n\n  defaults.actions.drag = drag.defaults\n}\n\nfunction beforeMove({ interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x') {\n    interaction.coords.cur.page.y = interaction.coords.start.page.y\n    interaction.coords.cur.client.y = interaction.coords.start.client.y\n\n    interaction.coords.velocity.client.y = 0\n    interaction.coords.velocity.page.y = 0\n  } else if (axis === 'y') {\n    interaction.coords.cur.page.x = interaction.coords.start.page.x\n    interaction.coords.cur.client.x = interaction.coords.start.client.x\n\n    interaction.coords.velocity.client.x = 0\n    interaction.coords.velocity.page.x = 0\n  }\n}\n\nfunction move({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x' || axis === 'y') {\n    const opposite = axis === 'x' ? 'y' : 'x'\n\n    iEvent.page[opposite] = interaction.coords.start.page[opposite]\n    iEvent.client[opposite] = interaction.coords.start.client[opposite]\n    iEvent.delta[opposite] = 0\n  }\n}\n\nconst draggable: Interactable['draggable'] = function draggable(\n  this: Interactable,\n  options?: DraggableOptions | boolean,\n): any {\n  if (is.object(options)) {\n    this.options.drag.enabled = options.enabled !== false\n    this.setPerAction('drag', options)\n    this.setOnEvents('drag', options)\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis\n    }\n\n    return this\n  }\n\n  if (is.bool(options)) {\n    this.options.drag.enabled = options\n\n    return this\n  }\n\n  return this.options.drag as DraggableOptions\n}\n\nconst drag: Plugin = {\n  id: 'actions/drag',\n  install,\n  listeners: {\n    'interactions:before-action-move': beforeMove,\n    'interactions:action-resume': beforeMove,\n\n    // dragmove\n    'interactions:action-move': move,\n    'auto-start:check': (arg) => {\n      const { interaction, interactable, buttons } = arg\n      const dragOptions = interactable.options.drag\n\n      if (\n        !(dragOptions && dragOptions.enabled) ||\n        // check mouseButton setting if the pointer is down\n        (interaction.pointerIsDown &&\n          /mouse|pointer/.test(interaction.pointerType) &&\n          (buttons & interactable.options.drag.mouseButtons) === 0)\n      ) {\n        return undefined\n      }\n\n      arg.action = {\n        name: 'drag',\n        axis: dragOptions.lockAxis === 'start' ? dragOptions.startAxis : dragOptions.lockAxis,\n      }\n\n      return false\n    },\n  },\n  draggable,\n  beforeMove,\n  move,\n  defaults: {\n    startAxis: 'xy',\n    lockAxis: 'xy',\n  } as DraggableOptions,\n\n  getCursor() {\n    return 'move'\n  },\n\n  filterEventType: (type: string) => type.search('drag') === 0,\n}\n\nexport default drag\n", "const domObjects: {\n  init: any\n  document: Document\n  DocumentFragment: typeof DocumentFragment\n  SVGElement: typeof SVGElement\n  SVGSVGElement: typeof SVGSVGElement\n  SVGElementInstance: any\n  Element: typeof Element\n  HTMLElement: typeof HTMLElement\n  Event: typeof Event\n  Touch: typeof Touch\n  PointerEvent: typeof PointerEvent\n} = {\n  init,\n  document: null,\n  DocumentFragment: null,\n  SVGElement: null,\n  SVGSVGElement: null,\n  SVGElementInstance: null,\n  Element: null,\n  HTMLElement: null,\n  Event: null,\n  Touch: null,\n  PointerEvent: null,\n}\n\nfunction blank() {}\n\nexport default domObjects\n\nfunction init(window: Window) {\n  const win = window as any\n\n  domObjects.document = win.document\n  domObjects.DocumentFragment = win.DocumentFragment || blank\n  domObjects.SVGElement = win.SVGElement || blank\n  domObjects.SVGSVGElement = win.SVGSVGElement || blank\n  domObjects.SVGElementInstance = win.SVGElementInstance || blank\n  domObjects.Element = win.Element || blank\n  domObjects.HTMLElement = win.HTMLElement || domObjects.Element\n\n  domObjects.Event = win.Event\n  domObjects.Touch = win.Touch || blank\n  domObjects.PointerEvent = win.PointerEvent || win.MSPointerEvent\n}\n", "import domObjects from './domObjects'\nimport is from './is'\n\nconst browser = {\n  init,\n  supportsTouch: null as boolean,\n  supportsPointerEvent: null as boolean,\n  isIOS7: null as boolean,\n  isIOS: null as boolean,\n  isIe9: null as boolean,\n  isOperaMobile: null as boolean,\n  prefixedMatchesSelector: null as 'matches',\n  pEventTypes: null as {\n    up: string\n    down: string\n    over: string\n    out: string\n    move: string\n    cancel: string\n  },\n  wheelEvent: null as string,\n}\n\nfunction init(window: any) {\n  const Element = domObjects.Element\n  const navigator: Partial<Navigator> = window.navigator || {}\n\n  // Does the browser support touch input?\n  browser.supportsTouch =\n    'ontouchstart' in window ||\n    (is.func(window.DocumentTouch) && domObjects.document instanceof window.DocumentTouch)\n\n  // Does the browser support PointerEvents\n  // https://github.com/taye/interact.js/issues/703#issuecomment-471570492\n  browser.supportsPointerEvent = (navigator as any).pointerEnabled !== false && !!domObjects.PointerEvent\n\n  browser.isIOS = /iP(hone|od|ad)/.test(navigator.platform)\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  browser.isIOS7 = /iP(hone|od|ad)/.test(navigator.platform) && /OS 7[^\\d]/.test(navigator.appVersion)\n\n  browser.isIe9 = /MSIE 9/.test(navigator.userAgent)\n\n  // Opera Mobile must be handled differently\n  browser.isOperaMobile =\n    navigator.appName === 'Opera' && browser.supportsTouch && /Presto/.test(navigator.userAgent)\n\n  // prefix matchesSelector\n  browser.prefixedMatchesSelector = (\n    'matches' in Element.prototype\n      ? 'matches'\n      : 'webkitMatchesSelector' in Element.prototype\n        ? 'webkitMatchesSelector'\n        : 'mozMatchesSelector' in Element.prototype\n          ? 'mozMatchesSelector'\n          : 'oMatchesSelector' in Element.prototype\n            ? 'oMatchesSelector'\n            : 'msMatchesSelector'\n  ) as 'matches'\n\n  browser.pEventTypes = browser.supportsPointerEvent\n    ? domObjects.PointerEvent === window.MSPointerEvent\n      ? {\n          up: 'MSPointerUp',\n          down: 'MSPointerDown',\n          over: 'mouseover',\n          out: 'mouseout',\n          move: 'MSPointerMove',\n          cancel: 'MSPointerCancel',\n        }\n      : {\n          up: 'pointerup',\n          down: 'pointerdown',\n          over: 'pointerover',\n          out: 'pointerout',\n          move: 'pointermove',\n          cancel: 'pointercancel',\n        }\n    : null\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  browser.wheelEvent = domObjects.document && 'onmousewheel' in domObjects.document ? 'mousewheel' : 'wheel'\n}\n\nexport default browser\n", "import type { Rect, Target, Element } from '@interactjs/core/types'\n\nimport browser from './browser'\nimport domObjects from './domObjects'\nimport is from './is'\nimport * as win from './window'\n\nexport function nodeContains(parent: Node, child: Node) {\n  if (parent.contains) {\n    return parent.contains(child as Node)\n  }\n\n  while (child) {\n    if (child === parent) {\n      return true\n    }\n\n    child = (child as Node).parentNode\n  }\n\n  return false\n}\n\nexport function closest(element: Node, selector: string) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return element\n    }\n\n    element = parentNode(element)\n  }\n\n  return null\n}\n\nexport function parentNode(node: Node | Document) {\n  let parent = node.parentNode\n\n  if (is.docFrag(parent)) {\n    // skip past #shado-root fragments\n    // tslint:disable-next-line\n    while ((parent = (parent as any).host) && is.docFrag(parent)) {\n      continue\n    }\n\n    return parent\n  }\n\n  return parent\n}\n\nexport function matchesSelector(element: Element, selector: string) {\n  // remove /deep/ from selectors if shadowDOM polyfill is used\n  if (win.window !== win.realWindow) {\n    selector = selector.replace(/\\/deep\\//g, ' ')\n  }\n\n  return element[browser.prefixedMatchesSelector](selector)\n}\n\nconst getParent = (el: Node | Document | ShadowRoot) => el.parentNode || (el as ShadowRoot).host\n\n// Test for the element that's \"above\" all other qualifiers\nexport function indexOfDeepestElement(elements: Element[] | NodeListOf<globalThis.Element>) {\n  let deepestNodeParents: Node[] = []\n  let deepestNodeIndex: number\n\n  for (let i = 0; i < elements.length; i++) {\n    const currentNode = elements[i]\n    const deepestNode: Node = elements[deepestNodeIndex]\n\n    // node may appear in elements array multiple times\n    if (!currentNode || i === deepestNodeIndex) {\n      continue\n    }\n\n    if (!deepestNode) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    const currentNodeParent = getParent(currentNode)\n    const deepestNodeParent = getParent(deepestNode)\n\n    // check if the deepest or current are document.documentElement/rootElement\n    // - if the current node is, do nothing and continue\n    if (currentNodeParent === currentNode.ownerDocument) {\n      continue\n    }\n    // - if deepest is, update with the current node and continue to next\n    else if (deepestNodeParent === currentNode.ownerDocument) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    // compare zIndex of siblings\n    if (currentNodeParent === deepestNodeParent) {\n      if (zIndexIsHigherThan(currentNode, deepestNode)) {\n        deepestNodeIndex = i\n      }\n\n      continue\n    }\n\n    // populate the ancestry array for the latest deepest node\n    deepestNodeParents = deepestNodeParents.length ? deepestNodeParents : getNodeParents(deepestNode)\n\n    let ancestryStart: Node\n\n    // if the deepest node is an HTMLElement and the current node is a non root svg element\n    if (\n      deepestNode instanceof domObjects.HTMLElement &&\n      currentNode instanceof domObjects.SVGElement &&\n      !(currentNode instanceof domObjects.SVGSVGElement)\n    ) {\n      // TODO: is this check necessary? Was this for HTML elements embedded in SVG?\n      if (currentNode === deepestNodeParent) {\n        continue\n      }\n\n      ancestryStart = currentNode.ownerSVGElement\n    } else {\n      ancestryStart = currentNode\n    }\n\n    const currentNodeParents = getNodeParents(ancestryStart, deepestNode.ownerDocument)\n    let commonIndex = 0\n\n    // get (position of closest common ancestor) + 1\n    while (\n      currentNodeParents[commonIndex] &&\n      currentNodeParents[commonIndex] === deepestNodeParents[commonIndex]\n    ) {\n      commonIndex++\n    }\n\n    const parents = [\n      currentNodeParents[commonIndex - 1],\n      currentNodeParents[commonIndex],\n      deepestNodeParents[commonIndex],\n    ]\n\n    if (parents[0]) {\n      let child = parents[0].lastChild\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestNodeIndex = i\n          deepestNodeParents = currentNodeParents\n\n          break\n        } else if (child === parents[2]) {\n          break\n        }\n\n        child = child.previousSibling\n      }\n    }\n  }\n\n  return deepestNodeIndex\n}\n\nfunction getNodeParents(node: Node, limit?: Node) {\n  const parents: Node[] = []\n  let parent: Node = node\n  let parentParent: Node\n\n  while ((parentParent = getParent(parent)) && parent !== limit && parentParent !== parent.ownerDocument) {\n    parents.unshift(parent)\n    parent = parentParent\n  }\n\n  return parents\n}\n\nfunction zIndexIsHigherThan(higherNode: Node, lowerNode: Node) {\n  const higherIndex = parseInt(win.getWindow(higherNode).getComputedStyle(higherNode).zIndex, 10) || 0\n  const lowerIndex = parseInt(win.getWindow(lowerNode).getComputedStyle(lowerNode).zIndex, 10) || 0\n\n  return higherIndex >= lowerIndex\n}\n\nexport function matchesUpTo(element: Element, selector: string, limit: Node) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return true\n    }\n\n    element = parentNode(element) as Element\n\n    if (element === limit) {\n      return matchesSelector(element, selector)\n    }\n  }\n\n  return false\n}\n\nexport function getActualElement(element: Element) {\n  return (element as any).correspondingUseElement || element\n}\n\nexport function getScrollXY(relevantWindow?: Window) {\n  relevantWindow = relevantWindow || win.window\n  return {\n    x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n    y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n  }\n}\n\nexport function getElementClientRect(element: Element): Required<Rect> {\n  const clientRect =\n    element instanceof domObjects.SVGElement ? element.getBoundingClientRect() : element.getClientRects()[0]\n\n  return (\n    clientRect && {\n      left: clientRect.left,\n      right: clientRect.right,\n      top: clientRect.top,\n      bottom: clientRect.bottom,\n      width: clientRect.width || clientRect.right - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top,\n    }\n  )\n}\n\nexport function getElementRect(element: Element) {\n  const clientRect = getElementClientRect(element)\n\n  if (!browser.isIOS7 && clientRect) {\n    const scroll = getScrollXY(win.getWindow(element))\n\n    clientRect.left += scroll.x\n    clientRect.right += scroll.x\n    clientRect.top += scroll.y\n    clientRect.bottom += scroll.y\n  }\n\n  return clientRect\n}\n\nexport function getPath(node: Node | Document) {\n  const path = []\n\n  while (node) {\n    path.push(node)\n    node = parentNode(node)\n  }\n\n  return path\n}\n\nexport function trySelector(value: Target) {\n  if (!is.string(value)) {\n    return false\n  }\n\n  // an exception will be raised if it is invalid\n  domObjects.document.querySelector(value)\n  return true\n}\n", "export default function extend<T, U extends object>(dest: U & Partial<T>, source: T): T & U {\n  for (const prop in source) {\n    ;(dest as unknown as T)[prop] = source[prop]\n  }\n\n  const ret = dest as T & U\n\n  return ret\n}\n", "import type {\n  HasGetRect,\n  RectResolvable,\n  Rect,\n  Element,\n  Point,\n  FullRect,\n  EdgeOptions,\n} from '@interactjs/core/types'\n\nimport { closest, getElementRect, parentNode } from './domUtils'\nimport extend from './extend'\nimport is from './is'\n\nexport function getStringOptionResult(value: any, target: HasGetRect, element: Node) {\n  if (value === 'parent') {\n    return parentNode(element)\n  }\n\n  if (value === 'self') {\n    return target.getRect(element as Element)\n  }\n\n  return closest(element, value)\n}\n\nexport function resolveRectLike<T extends any[]>(\n  value: RectResolvable<T>,\n  target?: HasGetRect,\n  element?: Node,\n  functionArgs?: T,\n) {\n  let returnValue: any = value\n  if (is.string(returnValue)) {\n    returnValue = getStringOptionResult(returnValue, target, element)\n  } else if (is.func(returnValue)) {\n    returnValue = returnValue(...functionArgs)\n  }\n\n  if (is.element(returnValue)) {\n    returnValue = getElementRect(returnValue)\n  }\n\n  return returnValue as Rect\n}\n\nexport function toFullRect(rect: Rect): FullRect {\n  const { top, left, bottom, right } = rect\n  const width = rect.width ?? rect.right - rect.left\n  const height = rect.height ?? rect.bottom - rect.top\n\n  return { top, left, bottom, right, width, height }\n}\n\nexport function rectToXY(rect: Rect | Point) {\n  return (\n    rect && {\n      x: 'x' in rect ? rect.x : rect.left,\n      y: 'y' in rect ? rect.y : rect.top,\n    }\n  )\n}\n\nexport function xywhToTlbr<T extends Partial<Rect & Point>>(rect: T) {\n  if (rect && !('left' in rect && 'top' in rect)) {\n    rect = extend({}, rect)\n\n    rect.left = rect.x || 0\n    rect.top = rect.y || 0\n    rect.right = rect.right || rect.left + rect.width\n    rect.bottom = rect.bottom || rect.top + rect.height\n  }\n\n  return rect as Rect & T\n}\n\nexport function tlbrToXywh(rect: Rect & Partial<Point>) {\n  if (rect && !('x' in rect && 'y' in rect)) {\n    rect = extend({}, rect)\n\n    rect.x = rect.left || 0\n    rect.y = rect.top || 0\n    rect.width = rect.width || (rect.right || 0) - rect.x\n    rect.height = rect.height || (rect.bottom || 0) - rect.y\n  }\n\n  return rect as FullRect & Point\n}\n\nexport function addEdges(edges: EdgeOptions, rect: Rect, delta: Point) {\n  if (edges.left) {\n    rect.left += delta.x\n  }\n  if (edges.right) {\n    rect.right += delta.x\n  }\n  if (edges.top) {\n    rect.top += delta.y\n  }\n  if (edges.bottom) {\n    rect.bottom += delta.y\n  }\n\n  rect.width = rect.right - rect.left\n  rect.height = rect.bottom - rect.top\n}\n", "import type { PerActionDefaults } from '@interactjs/core/options'\nimport type { ActionName, HasGetRect } from '@interactjs/core/types'\n\nimport { rectToXY, resolveRectLike } from './rect'\n\nexport default function getOriginXY(\n  target: HasGetRect & { options: PerActionDefaults },\n  element: Node,\n  actionName?: ActionName,\n) {\n  const actionOptions = actionName && (target.options as any)[actionName]\n  const actionOrigin = actionOptions && actionOptions.origin\n  const origin = actionOrigin || target.options.origin\n\n  const originRect = resolveRectLike(origin, target, element, [target && element])\n\n  return rectToXY(originRect) || { x: 0, y: 0 }\n}\n", "import type { EventTypes, Listener, ListenersArg } from '@interactjs/core/types'\n\nimport is from './is'\n\nexport interface NormalizedListeners {\n  [type: string]: Listener[]\n}\n\nexport default function normalize(\n  type: EventTypes,\n  listeners?: ListenersArg | ListenersArg[] | null,\n  filter = (_typeOrPrefix: string) => true,\n  result?: NormalizedListeners,\n): NormalizedListeners {\n  result = result || {}\n\n  if (is.string(type) && type.search(' ') !== -1) {\n    type = split(type)\n  }\n\n  if (is.array(type)) {\n    type.forEach((t) => normalize(t, listeners, filter, result))\n    return result\n  }\n\n  // before:  type = [{ drag: () => {} }], listeners = undefined\n  // after:   type = ''                  , listeners = [{ drag: () => {} }]\n  if (is.object(type)) {\n    listeners = type\n    type = ''\n  }\n\n  if (is.func(listeners) && filter(type)) {\n    result[type] = result[type] || []\n    result[type].push(listeners)\n  } else if (is.array(listeners)) {\n    for (const l of listeners) {\n      normalize(type, l, filter, result)\n    }\n  } else if (is.object(listeners)) {\n    for (const prefix in listeners) {\n      const combinedTypes = split(prefix).map((p) => `${type}${p}`)\n\n      normalize(combinedTypes, listeners[prefix], filter, result)\n    }\n  }\n\n  return result as NormalizedListeners\n}\n\nfunction split(type: string) {\n  return type.trim().split(/ +/)\n}\n", "export default (x: number, y: number) => Math.sqrt(x * x + y * y)\n", "const VENDOR_PREFIXES = ['webkit', 'moz']\n\nexport default function pointerExtend<T>(dest: Partial<T & { __set?: Partial<T> }>, source: T) {\n  dest.__set ||= {} as any\n\n  for (const prop in source) {\n    // skip deprecated prefixed properties\n    if (VENDOR_PREFIXES.some((prefix) => prop.indexOf(prefix) === 0)) continue\n\n    if (typeof dest[prop] !== 'function' && prop !== '__set') {\n      Object.defineProperty(dest, prop, {\n        get() {\n          if (prop in dest.__set) return dest.__set[prop]\n\n          return (dest.__set[prop] = source[prop] as any)\n        },\n        set(value: any) {\n          dest.__set[prop] = value\n        },\n        configurable: true,\n      })\n    }\n  }\n  return dest\n}\n", "import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { CoordsSetMember, PointerType, Point, PointerEventType, Element } from '@interactjs/core/types'\n\nimport browser from './browser'\nimport dom from './domObjects'\nimport * as domUtils from './domUtils'\nimport hypot from './hypot'\nimport is from './is'\nimport pointerExtend from './pointerExtend'\n\nexport function copyCoords(dest: CoordsSetMember, src: CoordsSetMember) {\n  dest.page = dest.page || ({} as any)\n  dest.page.x = src.page.x\n  dest.page.y = src.page.y\n\n  dest.client = dest.client || ({} as any)\n  dest.client.x = src.client.x\n  dest.client.y = src.client.y\n\n  dest.timeStamp = src.timeStamp\n}\n\nexport function setCoordDeltas(targetObj: CoordsSetMember, prev: CoordsSetMember, cur: CoordsSetMember) {\n  targetObj.page.x = cur.page.x - prev.page.x\n  targetObj.page.y = cur.page.y - prev.page.y\n  targetObj.client.x = cur.client.x - prev.client.x\n  targetObj.client.y = cur.client.y - prev.client.y\n  targetObj.timeStamp = cur.timeStamp - prev.timeStamp\n}\n\nexport function setCoordVelocity(targetObj: CoordsSetMember, delta: CoordsSetMember) {\n  const dt = Math.max(delta.timeStamp / 1000, 0.001)\n\n  targetObj.page.x = delta.page.x / dt\n  targetObj.page.y = delta.page.y / dt\n  targetObj.client.x = delta.client.x / dt\n  targetObj.client.y = delta.client.y / dt\n  targetObj.timeStamp = dt\n}\n\nexport function setZeroCoords(targetObj: CoordsSetMember) {\n  targetObj.page.x = 0\n  targetObj.page.y = 0\n  targetObj.client.x = 0\n  targetObj.client.y = 0\n}\n\nexport function isNativePointer(pointer: any) {\n  return pointer instanceof dom.Event || pointer instanceof dom.Touch\n}\n\n// Get specified X/Y coords for mouse or event.touches[0]\nexport function getXY(type: string, pointer: PointerType | InteractEvent, xy: Point) {\n  xy = xy || ({} as Point)\n  type = type || 'page'\n\n  xy.x = pointer[(type + 'X') as 'pageX']\n  xy.y = pointer[(type + 'Y') as 'pageY']\n\n  return xy\n}\n\nexport function getPageXY(pointer: PointerType | InteractEvent, page?: Point) {\n  page = page || { x: 0, y: 0 }\n\n  // Opera Mobile handles the viewport and scrolling oddly\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    getXY('screen', pointer, page)\n\n    page.x += window.scrollX\n    page.y += window.scrollY\n  } else {\n    getXY('page', pointer, page)\n  }\n\n  return page\n}\n\nexport function getClientXY(pointer: PointerType, client: Point) {\n  client = client || ({} as any)\n\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    // Opera Mobile handles the viewport and scrolling oddly\n    getXY('screen', pointer, client)\n  } else {\n    getXY('client', pointer, client)\n  }\n\n  return client\n}\n\nexport function getPointerId(pointer: { pointerId?: number; identifier?: number; type?: string }) {\n  return is.number(pointer.pointerId) ? pointer.pointerId! : pointer.identifier!\n}\n\nexport function setCoords(dest: CoordsSetMember, pointers: any[], timeStamp: number) {\n  const pointer = pointers.length > 1 ? pointerAverage(pointers) : pointers[0]\n\n  getPageXY(pointer, dest.page)\n  getClientXY(pointer, dest.client)\n\n  dest.timeStamp = timeStamp\n}\n\nexport function getTouchPair(event: TouchEvent | PointerType[]) {\n  const touches: PointerType[] = []\n\n  // array of touches is supplied\n  if (is.array(event)) {\n    touches[0] = event[0]\n    touches[1] = event[1]\n  }\n  // an event\n  else {\n    if (event.type === 'touchend') {\n      if (event.touches.length === 1) {\n        touches[0] = event.touches[0]\n        touches[1] = event.changedTouches[0]\n      } else if (event.touches.length === 0) {\n        touches[0] = event.changedTouches[0]\n        touches[1] = event.changedTouches[1]\n      }\n    } else {\n      touches[0] = event.touches[0]\n      touches[1] = event.touches[1]\n    }\n  }\n\n  return touches\n}\n\nexport function pointerAverage(pointers: PointerType[]) {\n  const average = {\n    pageX: 0,\n    pageY: 0,\n    clientX: 0,\n    clientY: 0,\n    screenX: 0,\n    screenY: 0,\n  }\n\n  type CoordKeys = keyof typeof average\n\n  for (const pointer of pointers) {\n    for (const prop in average) {\n      average[prop as CoordKeys] += pointer[prop as CoordKeys]\n    }\n  }\n  for (const prop in average) {\n    average[prop as CoordKeys] /= pointers.length\n  }\n\n  return average\n}\n\nexport function touchBBox(event: PointerType[]) {\n  if (!event.length) {\n    return null\n  }\n\n  const touches = getTouchPair(event)\n  const minX = Math.min(touches[0].pageX, touches[1].pageX)\n  const minY = Math.min(touches[0].pageY, touches[1].pageY)\n  const maxX = Math.max(touches[0].pageX, touches[1].pageX)\n  const maxY = Math.max(touches[0].pageY, touches[1].pageY)\n\n  return {\n    x: minX,\n    y: minY,\n    left: minX,\n    top: minY,\n    right: maxX,\n    bottom: maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n  }\n}\n\nexport function touchDistance(event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n\n  const dx = touches[0][sourceX] - touches[1][sourceX]\n  const dy = touches[0][sourceY] - touches[1][sourceY]\n\n  return hypot(dx, dy)\n}\n\nexport function touchAngle(event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n  const dx = touches[1][sourceX] - touches[0][sourceX]\n  const dy = touches[1][sourceY] - touches[0][sourceY]\n  const angle = (180 * Math.atan2(dy, dx)) / Math.PI\n\n  return angle\n}\n\nexport function getPointerType(pointer: { pointerType?: string; identifier?: number; type?: string }) {\n  return is.string(pointer.pointerType)\n    ? pointer.pointerType\n    : is.number(pointer.pointerType)\n      ? [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType]!\n      : // if the PointerEvent API isn't available, then the \"pointer\" must\n        // be either a MouseEvent, TouchEvent, or Touch object\n        /touch/.test(pointer.type || '') || pointer instanceof dom.Touch\n        ? 'touch'\n        : 'mouse'\n}\n\n// [ event.target, event.currentTarget ]\nexport function getEventTargets(event: Event) {\n  const path = is.func(event.composedPath)\n    ? (event.composedPath() as Element[])\n    : (event as unknown as { path: Element[] }).path\n\n  return [\n    domUtils.getActualElement(path ? path[0] : (event.target as Element)),\n    domUtils.getActualElement(event.currentTarget as Element),\n  ]\n}\n\nexport function newCoords(): CoordsSetMember {\n  return {\n    page: { x: 0, y: 0 },\n    client: { x: 0, y: 0 },\n    timeStamp: 0,\n  }\n}\n\nexport function coordsToEvent(coords: MockCoords) {\n  const event = {\n    coords,\n    get page() {\n      return this.coords.page\n    },\n    get client() {\n      return this.coords.client\n    },\n    get timeStamp() {\n      return this.coords.timeStamp\n    },\n    get pageX() {\n      return this.coords.page.x\n    },\n    get pageY() {\n      return this.coords.page.y\n    },\n    get clientX() {\n      return this.coords.client.x\n    },\n    get clientY() {\n      return this.coords.client.y\n    },\n    get pointerId() {\n      return this.coords.pointerId\n    },\n    get target() {\n      return this.coords.target\n    },\n    get type() {\n      return this.coords.type\n    },\n    get pointerType() {\n      return this.coords.pointerType\n    },\n    get buttons() {\n      return this.coords.buttons\n    },\n    preventDefault() {},\n  }\n\n  return event as typeof event & PointerType & PointerEventType\n}\n\nexport interface MockCoords {\n  page: Point\n  client: Point\n  timeStamp?: number\n  pointerId?: any\n  target?: any\n  type?: string\n  pointerType?: string\n  buttons?: number\n}\n\nexport { pointerExtend }\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName } from '@interactjs/core/types'\n\nexport class BaseEvent<T extends ActionName | null = never> {\n  declare type: string\n  declare target: EventTarget\n  declare currentTarget: Node\n  declare interactable: Interactable\n  /** @internal */\n  declare _interaction: Interaction<T>\n  declare timeStamp: number\n  immediatePropagationStopped = false\n  propagationStopped = false\n\n  constructor(interaction: Interaction<T>) {\n    this._interaction = interaction\n  }\n\n  preventDefault() {}\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation() {\n    this.propagationStopped = true\n  }\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface BaseEvent<T extends ActionName> {\n  interaction: InteractionProxy<T>\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperty(BaseEvent.prototype, 'interaction', {\n  get(this: BaseEvent) {\n    return this._interaction._proxy\n  },\n  set(this: BaseEvent) {},\n})\n", "type Filter<T> = (element: T, index: number, array: T[]) => boolean\n\nexport const contains = <T>(array: T[], target: T) => array.indexOf(target) !== -1\n\nexport const remove = <T>(array: T[], target: T) => array.splice(array.indexOf(target), 1)\n\nexport const merge = <T, U>(target: Array<T | U>, source: U[]) => {\n  for (const item of source) {\n    target.push(item)\n  }\n\n  return target\n}\n\nexport const from = <T = any>(source: ArrayLike<T>) => merge([] as T[], source as T[])\n\nexport const findIndex = <T>(array: T[], func: Filter<T>) => {\n  for (let i = 0; i < array.length; i++) {\n    if (func(array[i], i, array)) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nexport const find = <T = any>(array: T[], func: Filter<T>): T | undefined => array[findIndex(array, func)]\n", "import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Element } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\n\nimport type { DropState } from './plugin'\n\nexport class DropEvent extends BaseEvent<'drag'> {\n  declare target: Element\n  dropzone: Interactable\n  dragEvent: InteractEvent<'drag'>\n  relatedTarget: Element\n  draggable: Interactable\n  propagationStopped = false\n  immediatePropagationStopped = false\n\n  /**\n   * Class of events fired on dropzones during drags with acceptable targets.\n   */\n  constructor(dropState: DropState, dragEvent: InteractEvent<'drag'>, type: string) {\n    super(dragEvent._interaction)\n\n    const { element, dropzone } = type === 'dragleave' ? dropState.prev : dropState.cur\n\n    this.type = type\n    this.target = element\n    this.currentTarget = element\n    this.dropzone = dropzone\n    this.dragEvent = dragEvent\n    this.relatedTarget = dragEvent.target\n    this.draggable = dragEvent.interactable\n    this.timeStamp = dragEvent.timeStamp\n  }\n\n  /**\n   * If this is a `dropactivate` event, the dropzone element will be\n   * deactivated.\n   *\n   * If this is a `dragmove` or `dragenter`, a `dragleave` will be fired on the\n   * dropzone element and more.\n   */\n  reject() {\n    const { dropState } = this._interaction\n\n    if (\n      this.type !== 'dropactivate' &&\n      (!this.dropzone || dropState.cur.dropzone !== this.dropzone || dropState.cur.element !== this.target)\n    ) {\n      return\n    }\n\n    dropState.prev.dropzone = this.dropzone\n    dropState.prev.element = this.target\n\n    dropState.rejected = true\n    dropState.events.enter = null\n\n    this.stopImmediatePropagation()\n\n    if (this.type === 'dropactivate') {\n      const activeDrops = dropState.activeDrops\n      const index = arr.findIndex(\n        activeDrops,\n        ({ dropzone, element }) => dropzone === this.dropzone && element === this.target,\n      )\n\n      dropState.activeDrops.splice(index, 1)\n\n      const deactivateEvent = new DropEvent(dropState, this.dragEvent, 'dropdeactivate')\n\n      deactivateEvent.dropzone = this.dropzone\n      deactivateEvent.target = this.target\n\n      this.dropzone.fire(deactivateEvent)\n    } else {\n      this.dropzone.fire(new DropEvent(dropState, this.dragEvent, 'dragleave'))\n    }\n  }\n\n  preventDefault() {}\n\n  stopPropagation() {\n    this.propagationStopped = true\n  }\n\n  stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element, PointerEventType, Rect, ListenersArg } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '../drag/plugin'\n\nimport type { DragEvent } from '../drag/plugin'\nimport drag from '../drag/plugin'\n/* eslint-enable import/no-duplicates */\n\nimport { DropEvent } from './DropEvent'\n\nexport type DropFunctionChecker = (\n  dragEvent: any, // related drag operation\n  event: any, // touch or mouse EventEmitter\n  dropped: boolean, // default checker result\n  dropzone: Interactable, // dropzone interactable\n  dropElement: Element, // drop zone element\n  draggable: Interactable, // draggable's Interactable\n  draggableElement: Element, // dragged element\n) => boolean\n\nexport interface DropzoneOptions extends PerActionDefaults {\n  accept?:\n    | string\n    | Element\n    | (({ dropzone, draggableElement }: { dropzone: Interactable; draggableElement: Element }) => boolean)\n  // How the overlap is checked on the drop zone\n  overlap?: 'pointer' | 'center' | number\n  checker?: DropFunctionChecker\n\n  ondropactivate?: ListenersArg\n  ondropdeactivate?: ListenersArg\n  ondragenter?: ListenersArg\n  ondragleave?: ListenersArg\n  ondropmove?: ListenersArg\n  ondrop?: ListenersArg\n}\n\nexport interface DropzoneMethod {\n  (this: Interactable, options: DropzoneOptions | boolean): Interactable\n  (): DropzoneOptions\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    /**\n     *\n     * ```js\n     * interact('.drop').dropzone({\n     *   accept: '.can-drop' || document.getElementById('single-drop'),\n     *   overlap: 'pointer' || 'center' || zeroToOne\n     * }\n     * ```\n     *\n     * Returns or sets whether draggables can be dropped onto this target to\n     * trigger drop events\n     *\n     * Dropzones can receive the following events:\n     *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n     *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n     *  - `dragmove` when a draggable that has entered the dropzone is moved\n     *  - `drop` when a draggable is dropped into this dropzone\n     *\n     * Use the `accept` option to allow only elements that match the given CSS\n     * selector or element. The value can be:\n     *\n     *  - **an Element** - only that element can be dropped into this dropzone.\n     *  - **a string**, - the element being dragged must match it as a CSS selector.\n     *  - **`null`** - accept options is cleared - it accepts any element.\n     *\n     * Use the `overlap` option to set how drops are checked for. The allowed\n     * values are:\n     *\n     *   - `'pointer'`, the pointer must be over the dropzone (default)\n     *   - `'center'`, the draggable element's center must be over the dropzone\n     *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n     *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n     *   over the dropzone\n     *\n     * Use the `checker` option to specify a function to check if a dragged element\n     * is over this Interactable.\n     *\n     * @param options - The new options to be set\n     */\n    dropzone(options: DropzoneOptions | boolean): Interactable\n    /** @returns The current setting */\n    dropzone(): DropzoneOptions\n\n    /**\n     * ```js\n     * interact(target)\n     * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n     *                       event,             // TouchEvent/PointerEvent/MouseEvent\n     *                       dropped,           // bool result of the default checker\n     *                       dropzone,          // dropzone Interactable\n     *                       dropElement,       // dropzone elemnt\n     *                       draggable,         // draggable Interactable\n     *                       draggableElement) {// draggable element\n     *\n     *   return dropped && event.target.hasAttribute('allow-drop')\n     * }\n     * ```\n     */\n    dropCheck(\n      dragEvent: InteractEvent,\n      event: PointerEventType,\n      draggable: Interactable,\n      draggableElement: Element,\n      dropElemen: Element,\n      rect: any,\n    ): boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    dropState?: DropState\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    /** @internal */\n    prevDropzone?: Interactable\n    dropzone?: Interactable\n    dragEnter?: Element\n    dragLeave?: Element\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drop: DropzoneOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    dynamicDrop?: boolean\n  }\n\n  interface SignalArgs {\n    'actions/drop:start': DropSignalArg\n    'actions/drop:move': DropSignalArg\n    'actions/drop:end': DropSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    drop?: typeof drop\n  }\n}\n\ndeclare module '@interactjs/core/InteractStatic' {\n  interface InteractStatic {\n    /**\n     * Returns or sets whether the dimensions of dropzone elements are calculated\n     * on every dragmove or only on dragstart for the default dropChecker\n     *\n     * @param {boolean} [newValue] True to check on each move. False to check only\n     * before start\n     * @return {boolean | interact} The current setting or interact\n     */\n    dynamicDrop: (newValue?: boolean) => boolean | this\n  }\n}\n\ninterface DropSignalArg {\n  interaction: Interaction<'drag'>\n  dragEvent: DragEvent\n}\n\nexport interface ActiveDrop {\n  dropzone: Interactable\n  element: Element\n  rect: Rect\n}\n\nexport interface DropState {\n  cur: {\n    // the dropzone a drag target might be dropped into\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  prev: {\n    // the dropzone that was recently dragged away from\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  // wheather the potential drop was rejected from a listener\n  rejected: boolean\n  // the drop events related to the current drag event\n  events: FiredDropEvents\n  activeDrops: ActiveDrop[]\n}\n\nfunction install(scope: Scope) {\n  const { actions, interactStatic: interact, Interactable, defaults } = scope\n\n  scope.usePlugin(drag)\n\n  Interactable.prototype.dropzone = function (this: Interactable, options) {\n    return dropzoneMethod(this, options)\n  } as Interactable['dropzone']\n\n  Interactable.prototype.dropCheck = function (\n    this: Interactable,\n    dragEvent,\n    event,\n    draggable,\n    draggableElement,\n    dropElement,\n    rect,\n  ) {\n    return dropCheckMethod(this, dragEvent, event, draggable, draggableElement, dropElement, rect)\n  }\n\n  interact.dynamicDrop = function (newValue?: boolean) {\n    if (is.bool(newValue)) {\n      // if (dragging && scope.dynamicDrop !== newValue && !newValue) {\n      //  calcRects(dropzones)\n      // }\n\n      scope.dynamicDrop = newValue\n\n      return interact\n    }\n    return scope.dynamicDrop!\n  }\n\n  extend(actions.phaselessTypes, {\n    dragenter: true,\n    dragleave: true,\n    dropactivate: true,\n    dropdeactivate: true,\n    dropmove: true,\n    drop: true,\n  })\n  actions.methodDict.drop = 'dropzone'\n\n  scope.dynamicDrop = false\n\n  defaults.actions.drop = drop.defaults\n}\n\nfunction collectDropzones({ interactables }: Scope, draggableElement: Element) {\n  const drops: ActiveDrop[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const dropzone of interactables.list) {\n    if (!dropzone.options.drop.enabled) {\n      continue\n    }\n\n    const accept = dropzone.options.drop.accept\n\n    // test the draggable draggableElement against the dropzone's accept setting\n    if (\n      (is.element(accept) && accept !== draggableElement) ||\n      (is.string(accept) && !domUtils.matchesSelector(draggableElement, accept)) ||\n      (is.func(accept) && !accept({ dropzone, draggableElement }))\n    ) {\n      continue\n    }\n\n    for (const dropzoneElement of dropzone.getAllElements()) {\n      if (dropzoneElement !== draggableElement) {\n        drops.push({\n          dropzone,\n          element: dropzoneElement,\n          rect: dropzone.getRect(dropzoneElement),\n        })\n      }\n    }\n  }\n\n  return drops\n}\n\nfunction fireActivationEvents(activeDrops: ActiveDrop[], event: DropEvent) {\n  // loop through all active dropzones and trigger event\n  for (const { dropzone, element } of activeDrops.slice()) {\n    event.dropzone = dropzone\n\n    // set current element as event target\n    event.target = element\n    dropzone.fire(event)\n    event.propagationStopped = event.immediatePropagationStopped = false\n  }\n}\n\n// return a new array of possible drops. getActiveDrops should always be\n// called when a drag has just started or a drag event happens while\n// dynamicDrop is true\nfunction getActiveDrops(scope: Scope, dragElement: Element) {\n  // get dropzones and their elements that could receive the draggable\n  const activeDrops = collectDropzones(scope, dragElement)\n\n  for (const activeDrop of activeDrops) {\n    activeDrop.rect = activeDrop.dropzone.getRect(activeDrop.element)\n  }\n\n  return activeDrops\n}\n\nfunction getDrop(\n  { dropState, interactable: draggable, element: dragElement }: Interaction,\n  dragEvent,\n  pointerEvent,\n) {\n  const validDrops: Element[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const { dropzone, element: dropzoneElement, rect } of dropState.activeDrops) {\n    const isValid = dropzone.dropCheck(\n      dragEvent,\n      pointerEvent,\n      draggable!,\n      dragElement!,\n      dropzoneElement,\n      rect,\n    )\n    validDrops.push(isValid ? dropzoneElement : null)\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = domUtils.indexOfDeepestElement(validDrops)\n\n  return dropState!.activeDrops[dropIndex] || null\n}\n\nfunction getDropEvents(interaction: Interaction, _pointerEvent, dragEvent: DragEvent) {\n  const dropState = interaction.dropState!\n  const dropEvents: Record<string, DropEvent | null> = {\n    enter: null,\n    leave: null,\n    activate: null,\n    deactivate: null,\n    move: null,\n    drop: null,\n  }\n\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = new DropEvent(dropState, dragEvent, 'dropactivate')\n\n    dropEvents.activate.target = null as never\n    dropEvents.activate.dropzone = null as never\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = new DropEvent(dropState, dragEvent, 'dropdeactivate')\n\n    dropEvents.deactivate.target = null as never\n    dropEvents.deactivate.dropzone = null as never\n  }\n\n  if (dropState.rejected) {\n    return dropEvents\n  }\n\n  if (dropState.cur.element !== dropState.prev.element) {\n    // if there was a previous dropzone, create a dragleave event\n    if (dropState.prev.dropzone) {\n      dropEvents.leave = new DropEvent(dropState, dragEvent, 'dragleave')\n\n      dragEvent.dragLeave = dropEvents.leave.target = dropState.prev.element\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = dropState.prev.dropzone\n    }\n    // if dropzone is not null, create a dragenter event\n    if (dropState.cur.dropzone) {\n      dropEvents.enter = new DropEvent(dropState, dragEvent, 'dragenter')\n\n      dragEvent.dragEnter = dropState.cur.element\n      dragEvent.dropzone = dropState.cur.dropzone\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && dropState.cur.dropzone) {\n    dropEvents.drop = new DropEvent(dropState, dragEvent, 'drop')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n    dragEvent.relatedTarget = dropState.cur.element\n  }\n  if (dragEvent.type === 'dragmove' && dropState.cur.dropzone) {\n    dropEvents.move = new DropEvent(dropState, dragEvent, 'dropmove')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n  }\n\n  return dropEvents\n}\n\ntype FiredDropEvents = Partial<\n  Record<'leave' | 'enter' | 'move' | 'drop' | 'activate' | 'deactivate', DropEvent>\n>\n\nfunction fireDropEvents(interaction: Interaction, events: FiredDropEvents) {\n  const dropState = interaction.dropState!\n  const { activeDrops, cur, prev } = dropState\n\n  if (events.leave) {\n    prev.dropzone.fire(events.leave)\n  }\n  if (events.enter) {\n    cur.dropzone.fire(events.enter)\n  }\n  if (events.move) {\n    cur.dropzone.fire(events.move)\n  }\n  if (events.drop) {\n    cur.dropzone.fire(events.drop)\n  }\n\n  if (events.deactivate) {\n    fireActivationEvents(activeDrops, events.deactivate)\n  }\n\n  dropState.prev.dropzone = cur.dropzone\n  dropState.prev.element = cur.element\n}\n\nfunction onEventCreated({ interaction, iEvent, event }: DoPhaseArg<'drag', EventPhase>, scope: Scope) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') {\n    return\n  }\n\n  const dropState = interaction.dropState!\n\n  if (scope.dynamicDrop) {\n    dropState.activeDrops = getActiveDrops(scope, interaction.element!)\n  }\n\n  const dragEvent = iEvent\n  const dropResult = getDrop(interaction, dragEvent, event)\n\n  // update rejected status\n  dropState.rejected =\n    dropState.rejected &&\n    !!dropResult &&\n    dropResult.dropzone === dropState.cur.dropzone &&\n    dropResult.element === dropState.cur.element\n\n  dropState.cur.dropzone = dropResult && dropResult.dropzone\n  dropState.cur.element = dropResult && dropResult.element\n\n  dropState.events = getDropEvents(interaction, event, dragEvent)\n}\n\nfunction dropzoneMethod(interactable: Interactable): DropzoneOptions\nfunction dropzoneMethod(interactable: Interactable, options: DropzoneOptions | boolean): Interactable\nfunction dropzoneMethod(interactable: Interactable, options?: DropzoneOptions | boolean) {\n  if (is.object(options)) {\n    interactable.options.drop.enabled = options.enabled !== false\n\n    if (options.listeners) {\n      const normalized = normalizeListeners(options.listeners)\n      // rename 'drop' to '' as it will be prefixed with 'drop'\n      const corrected = Object.keys(normalized).reduce((acc, type) => {\n        const correctedType = /^(enter|leave)/.test(type)\n          ? `drag${type}`\n          : /^(activate|deactivate|move)/.test(type)\n            ? `drop${type}`\n            : type\n\n        acc[correctedType] = normalized[type]\n\n        return acc\n      }, {})\n\n      const prevListeners = interactable.options.drop.listeners\n      prevListeners && interactable.off(prevListeners)\n\n      interactable.on(corrected)\n      interactable.options.drop.listeners = corrected\n    }\n\n    if (is.func(options.ondrop)) {\n      interactable.on('drop', options.ondrop)\n    }\n    if (is.func(options.ondropactivate)) {\n      interactable.on('dropactivate', options.ondropactivate)\n    }\n    if (is.func(options.ondropdeactivate)) {\n      interactable.on('dropdeactivate', options.ondropdeactivate)\n    }\n    if (is.func(options.ondragenter)) {\n      interactable.on('dragenter', options.ondragenter)\n    }\n    if (is.func(options.ondragleave)) {\n      interactable.on('dragleave', options.ondragleave)\n    }\n    if (is.func(options.ondropmove)) {\n      interactable.on('dropmove', options.ondropmove)\n    }\n\n    if (/^(pointer|center)$/.test(options.overlap as string)) {\n      interactable.options.drop.overlap = options.overlap\n    } else if (is.number(options.overlap)) {\n      interactable.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0)\n    }\n    if ('accept' in options) {\n      interactable.options.drop.accept = options.accept\n    }\n    if ('checker' in options) {\n      interactable.options.drop.checker = options.checker\n    }\n\n    return interactable\n  }\n\n  if (is.bool(options)) {\n    interactable.options.drop.enabled = options\n\n    return interactable\n  }\n\n  return interactable.options.drop\n}\n\nfunction dropCheckMethod(\n  interactable: Interactable,\n  dragEvent: InteractEvent,\n  event: PointerEventType,\n  draggable: Interactable,\n  draggableElement: Element,\n  dropElement: Element,\n  rect: any,\n) {\n  let dropped = false\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || interactable.getRect(dropElement))) {\n    return interactable.options.drop.checker\n      ? interactable.options.drop.checker(\n          dragEvent,\n          event,\n          dropped,\n          interactable,\n          dropElement,\n          draggable,\n          draggableElement,\n        )\n      : false\n  }\n\n  const dropOverlap = interactable.options.drop.overlap\n\n  if (dropOverlap === 'pointer') {\n    const origin = getOriginXY(draggable, draggableElement, 'drag')\n    const page = pointerUtils.getPageXY(dragEvent)\n\n    page.x += origin.x\n    page.y += origin.y\n\n    const horizontal = page.x > rect.left && page.x < rect.right\n    const vertical = page.y > rect.top && page.y < rect.bottom\n\n    dropped = horizontal && vertical\n  }\n\n  const dragRect = draggable.getRect(draggableElement)\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width / 2\n    const cy = dragRect.top + dragRect.height / 2\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom\n  }\n\n  if (dragRect && is.number(dropOverlap)) {\n    const overlapArea =\n      Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) *\n      Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top))\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height)\n\n    dropped = overlapRatio >= dropOverlap\n  }\n\n  if (interactable.options.drop.checker) {\n    dropped = interactable.options.drop.checker(\n      dragEvent,\n      event,\n      dropped,\n      interactable,\n      dropElement,\n      draggable,\n      draggableElement,\n    )\n  }\n\n  return dropped\n}\n\nconst drop: Plugin = {\n  id: 'actions/drop',\n  install,\n  listeners: {\n    'interactions:before-action-start': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      interaction.dropState = {\n        cur: {\n          dropzone: null,\n          element: null,\n        },\n        prev: {\n          dropzone: null,\n          element: null,\n        },\n        rejected: null,\n        events: null,\n        activeDrops: [],\n      }\n    },\n\n    'interactions:after-action-start': (\n      { interaction, event, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const dropState = interaction.dropState!\n\n      // reset active dropzones\n      dropState.activeDrops = []\n      dropState.events = {}\n      dropState.activeDrops = getActiveDrops(scope, interaction.element!)\n      dropState.events = getDropEvents(interaction, event, dragEvent)\n\n      if (dropState.events.activate) {\n        fireActivationEvents(dropState.activeDrops, dropState.events.activate)\n        scope.fire('actions/drop:start', { interaction, dragEvent })\n      }\n    },\n\n    'interactions:action-move': onEventCreated,\n\n    'interactions:after-action-move': (\n      { interaction, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const dropState = interaction.dropState!\n      fireDropEvents(interaction, dropState.events)\n\n      scope.fire('actions/drop:move', { interaction, dragEvent })\n      dropState.events = {}\n    },\n\n    'interactions:action-end': (arg: DoPhaseArg<'drag', EventPhase>, scope) => {\n      if (arg.interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { interaction, iEvent: dragEvent } = arg\n\n      onEventCreated(arg, scope)\n      fireDropEvents(interaction, interaction.dropState!.events)\n      scope.fire('actions/drop:end', { interaction, dragEvent })\n    },\n\n    'interactions:stop': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { dropState } = interaction\n\n      if (dropState) {\n        dropState.activeDrops = null as never\n        dropState.events = null as never\n        dropState.cur.dropzone = null as never\n        dropState.cur.element = null as never\n        dropState.prev.dropzone = null as never\n        dropState.prev.element = null as never\n        dropState.rejected = false\n      }\n    },\n  },\n  getActiveDrops,\n  getDrop,\n  getDropEvents,\n  fireDropEvents,\n\n  filterEventType: (type: string) => type.search('drag') === 0 || type.search('drop') === 0,\n\n  defaults: {\n    enabled: false,\n    accept: null as never,\n    overlap: 'pointer',\n  } as DropzoneOptions,\n}\n\nexport default drop\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { InteractEvent, EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Rect, PointerType, ListenersArg, OrBoolean } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    gesture?: {\n      angle: number // angle from first to second touch\n      distance: number\n      scale: number // gesture.distance / gesture.startDistance\n      startAngle: number // angle of line joining two touches\n      startDistance: number // distance between two touches of touchStart\n    }\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    gesturable(options: Partial<OrBoolean<GesturableOptions>> | boolean): this\n    gesturable(): GesturableOptions\n    /**\n     * ```js\n     * interact(element).gesturable({\n     *     onstart: function (event) {},\n     *     onmove : function (event) {},\n     *     onend  : function (event) {},\n     *\n     *     // limit multiple gestures.\n     *     // See the explanation in {@link Interactable.draggable} example\n     *     max: Infinity,\n     *     maxPerElement: 1,\n     * })\n     *\n     * var isGestureable = interact(element).gesturable()\n     * ```\n     *\n     * Gets or sets whether multitouch gestures can be performed on the target\n     *\n     * @param options - true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n     * @returns A boolean indicating if this can be the target of gesture events, or this Interactable\n     */\n    gesturable(options?: Partial<OrBoolean<GesturableOptions>> | boolean): this | GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    gesture: GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    gesture?: typeof gesture\n  }\n}\n\nexport interface GesturableOptions extends PerActionDefaults {\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nexport interface GestureEvent extends InteractEvent<'gesture'> {\n  distance: number\n  angle: number\n  da: number // angle change\n  scale: number // ratio of distance start to current event\n  ds: number // scale change\n  box: Rect // enclosing box of all points\n  touches: PointerType[]\n}\n\nexport interface GestureSignalArg extends DoPhaseArg<'gesture', EventPhase> {\n  iEvent: GestureEvent\n  interaction: Interaction<'gesture'>\n}\n\nfunction install(scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  Interactable.prototype.gesturable = function (\n    this: InstanceType<typeof Interactable>,\n    options: GesturableOptions | boolean,\n  ) {\n    if (is.object(options)) {\n      this.options.gesture.enabled = options.enabled !== false\n      this.setPerAction('gesture', options)\n      this.setOnEvents('gesture', options)\n\n      return this\n    }\n\n    if (is.bool(options)) {\n      this.options.gesture.enabled = options\n\n      return this\n    }\n\n    return this.options.gesture as GesturableOptions\n  } as Interactable['gesturable']\n\n  actions.map.gesture = gesture\n  actions.methodDict.gesture = 'gesturable'\n\n  defaults.actions.gesture = gesture.defaults\n}\n\nfunction updateGestureProps({ interaction, iEvent, phase }: GestureSignalArg) {\n  if (interaction.prepared.name !== 'gesture') return\n\n  const pointers = interaction.pointers.map((p) => p.pointer)\n  const starting = phase === 'start'\n  const ending = phase === 'end'\n  const deltaSource = interaction.interactable.options.deltaSource\n\n  iEvent.touches = [pointers[0], pointers[1]]\n\n  if (starting) {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = 1\n    iEvent.ds = 0\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n    iEvent.da = 0\n\n    interaction.gesture.startDistance = iEvent.distance\n    interaction.gesture.startAngle = iEvent.angle\n  } else if (ending || interaction.pointers.length < 2) {\n    const prevEvent = interaction.prevEvent as GestureEvent\n\n    iEvent.distance = prevEvent.distance\n    iEvent.box = prevEvent.box\n    iEvent.scale = prevEvent.scale\n    iEvent.ds = 0\n    iEvent.angle = prevEvent.angle\n    iEvent.da = 0\n  } else {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = iEvent.distance / interaction.gesture.startDistance\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n\n    iEvent.ds = iEvent.scale - interaction.gesture.scale\n    iEvent.da = iEvent.angle - interaction.gesture.angle\n  }\n\n  interaction.gesture.distance = iEvent.distance\n  interaction.gesture.angle = iEvent.angle\n\n  if (is.number(iEvent.scale) && iEvent.scale !== Infinity && !isNaN(iEvent.scale)) {\n    interaction.gesture.scale = iEvent.scale\n  }\n}\n\nconst gesture: Plugin = {\n  id: 'actions/gesture',\n  before: ['actions/drag', 'actions/resize'],\n  install,\n  listeners: {\n    'interactions:action-start': updateGestureProps,\n    'interactions:action-move': updateGestureProps,\n    'interactions:action-end': updateGestureProps,\n\n    'interactions:new': ({ interaction }) => {\n      interaction.gesture = {\n        angle: 0,\n        distance: 0,\n        scale: 1,\n        startAngle: 0,\n        startDistance: 0,\n      }\n    },\n\n    'auto-start:check': (arg) => {\n      if (arg.interaction.pointers.length < 2) {\n        return undefined\n      }\n\n      const gestureOptions = arg.interactable.options.gesture\n\n      if (!(gestureOptions && gestureOptions.enabled)) {\n        return undefined\n      }\n\n      arg.action = { name: 'gesture' }\n\n      return false\n    },\n  },\n\n  defaults: {},\n\n  getCursor() {\n    return ''\n  },\n\n  filterEventType: (type: string) => type.search('gesture') === 0,\n}\n\nexport default gesture\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type {\n  ActionName,\n  ActionProps,\n  EdgeOptions,\n  FullRect,\n  ListenersArg,\n  OrBoolean,\n  Point,\n  Rect,\n} from '@interactjs/core/types'\nimport * as dom from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nexport type EdgeName = 'top' | 'left' | 'bottom' | 'right'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    resizable(): ResizableOptions\n    resizable(options: Partial<OrBoolean<ResizableOptions>> | boolean): this\n    /**\n     * ```js\n     * interact(element).resizable({\n     *   onstart: function (event) {},\n     *   onmove : function (event) {},\n     *   onend  : function (event) {},\n     *\n     *   edges: {\n     *     top   : true,       // Use pointer coords to check for resize.\n     *     left  : false,      // Disable resizing from left edge.\n     *     bottom: '.resize-s',// Resize if pointer target matches selector\n     *     right : handleEl    // Resize if pointer target is the given Element\n     *   },\n     *\n     *   // Width and height can be adjusted independently. When `true`, width and\n     *   // height are adjusted at a 1:1 ratio.\n     *   square: false,\n     *\n     *   // Width and height can be adjusted independently. When `true`, width and\n     *   // height maintain the aspect ratio they had when resizing started.\n     *   preserveAspectRatio: false,\n     *\n     *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n     *   // 'negate' will allow the rect to have negative width/height\n     *   // 'reposition' will keep the width/height positive by swapping\n     *   // the top and bottom edges and/or swapping the left and right edges\n     *   invert: 'none' || 'negate' || 'reposition'\n     *\n     *   // limit multiple resizes.\n     *   // See the explanation in the {@link Interactable.draggable} example\n     *   max: Infinity,\n     *   maxPerElement: 1,\n     * })\n     *\n     * var isResizeable = interact(element).resizable()\n     * ```\n     *\n     * Gets or sets whether resize actions can be performed on the target\n     *\n     * @param options - true/false or An object with event\n     * listeners to be fired on resize events (object makes the Interactable\n     * resizable)\n     * @returns A boolean indicating if this can be the\n     * target of resize elements, or this Interactable\n     */\n    resizable(options?: Partial<OrBoolean<ResizableOptions>> | boolean): this | ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction<T extends ActionName | null = ActionName> {\n    resizeAxes: 'x' | 'y' | 'xy'\n    styleCursor(newValue: boolean): this\n    styleCursor(): boolean\n    resizeStartAspectRatio: number\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    resize: ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    resize?: typeof resize\n  }\n}\n\nexport interface ResizableOptions extends PerActionDefaults {\n  square?: boolean\n  preserveAspectRatio?: boolean\n  edges?: EdgeOptions | null\n  axis?: 'x' | 'y' | 'xy' // deprecated\n  invert?: 'none' | 'negate' | 'reposition'\n  margin?: number\n  squareResize?: boolean\n  oninertiastart?: ListenersArg\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nexport interface ResizeEvent<P extends EventPhase = EventPhase> extends InteractEvent<'resize', P> {\n  deltaRect?: FullRect\n  edges?: ActionProps['edges']\n}\n\nfunction install(scope: Scope) {\n  const {\n    actions,\n    browser,\n    Interactable, // tslint:disable-line no-shadowed-variable\n    defaults,\n  } = scope\n\n  // Less Precision with touch input\n\n  resize.cursors = initCursors(browser)\n  resize.defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10\n\n  Interactable.prototype.resizable = function (this: Interactable, options: ResizableOptions | boolean) {\n    return resizable(this, options, scope)\n  } as Interactable['resizable']\n\n  actions.map.resize = resize\n  actions.methodDict.resize = 'resizable'\n\n  defaults.actions.resize = resize.defaults\n}\n\nfunction resizeChecker(arg) {\n  const { interaction, interactable, element, rect, buttons } = arg\n\n  if (!rect) {\n    return undefined\n  }\n\n  const page = extend({}, interaction.coords.cur.page)\n  const resizeOptions = interactable.options.resize\n\n  if (\n    !(resizeOptions && resizeOptions.enabled) ||\n    // check mouseButton setting if the pointer is down\n    (interaction.pointerIsDown &&\n      /mouse|pointer/.test(interaction.pointerType) &&\n      (buttons & resizeOptions.mouseButtons) === 0)\n  ) {\n    return undefined\n  }\n\n  // if using resize.edges\n  if (is.object(resizeOptions.edges)) {\n    const resizeEdges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n\n    for (const edge in resizeEdges) {\n      resizeEdges[edge] = checkResizeEdge(\n        edge,\n        resizeOptions.edges[edge],\n        page,\n        interaction._latestPointer.eventTarget,\n        element,\n        rect,\n        resizeOptions.margin || resize.defaultMargin,\n      )\n    }\n\n    resizeEdges.left = resizeEdges.left && !resizeEdges.right\n    resizeEdges.top = resizeEdges.top && !resizeEdges.bottom\n\n    if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n      arg.action = {\n        name: 'resize',\n        edges: resizeEdges,\n      }\n    }\n  } else {\n    const right = resizeOptions.axis !== 'y' && page.x > rect.right - resize.defaultMargin\n    const bottom = resizeOptions.axis !== 'x' && page.y > rect.bottom - resize.defaultMargin\n\n    if (right || bottom) {\n      arg.action = {\n        name: 'resize',\n        axes: (right ? 'x' : '') + (bottom ? 'y' : ''),\n      }\n    }\n  }\n\n  return arg.action ? false : undefined\n}\n\nfunction resizable(interactable: Interactable, options: OrBoolean<ResizableOptions> | boolean, scope: Scope) {\n  if (is.object(options)) {\n    interactable.options.resize.enabled = options.enabled !== false\n    interactable.setPerAction('resize', options)\n    interactable.setOnEvents('resize', options)\n\n    if (is.string(options.axis) && /^x$|^y$|^xy$/.test(options.axis)) {\n      interactable.options.resize.axis = options.axis\n    } else if (options.axis === null) {\n      interactable.options.resize.axis = scope.defaults.actions.resize.axis\n    }\n\n    if (is.bool(options.preserveAspectRatio)) {\n      interactable.options.resize.preserveAspectRatio = options.preserveAspectRatio\n    } else if (is.bool(options.square)) {\n      interactable.options.resize.square = options.square\n    }\n\n    return interactable\n  }\n  if (is.bool(options)) {\n    interactable.options.resize.enabled = options\n\n    return interactable\n  }\n  return interactable.options.resize\n}\n\nfunction checkResizeEdge(\n  name: string,\n  value: any,\n  page: Point,\n  element: Node,\n  interactableElement: Element,\n  rect: Rect,\n  margin: number,\n) {\n  // false, '', undefined, null\n  if (!value) {\n    return false\n  }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width = is.number(rect.width) ? rect.width : rect.right - rect.left\n    const height = is.number(rect.height) ? rect.height : rect.bottom - rect.top\n\n    // don't use margin greater than half the relevent dimension\n    margin = Math.min(margin, Math.abs((name === 'left' || name === 'right' ? width : height) / 2))\n\n    if (width < 0) {\n      if (name === 'left') {\n        name = 'right'\n      } else if (name === 'right') {\n        name = 'left'\n      }\n    }\n    if (height < 0) {\n      if (name === 'top') {\n        name = 'bottom'\n      } else if (name === 'bottom') {\n        name = 'top'\n      }\n    }\n\n    if (name === 'left') {\n      const edge = width >= 0 ? rect.left : rect.right\n      return page.x < edge + margin\n    }\n    if (name === 'top') {\n      const edge = height >= 0 ? rect.top : rect.bottom\n      return page.y < edge + margin\n    }\n\n    if (name === 'right') {\n      return page.x > (width >= 0 ? rect.right : rect.left) - margin\n    }\n    if (name === 'bottom') {\n      return page.y > (height >= 0 ? rect.bottom : rect.top) - margin\n    }\n  }\n\n  // the remaining checks require an element\n  if (!is.element(element)) {\n    return false\n  }\n\n  return is.element(value)\n    ? // the value is an element to use as a resize handle\n      value === element\n    : // otherwise check if element matches value as selector\n      dom.matchesUpTo(element, value, interactableElement)\n}\n\n/* eslint-disable multiline-ternary */\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nfunction initCursors(browser: typeof import('@interactjs/utils/browser').default) {\n  return browser.isIe9\n    ? {\n        x: 'e-resize',\n        y: 's-resize',\n        xy: 'se-resize',\n\n        top: 'n-resize',\n        left: 'w-resize',\n        bottom: 's-resize',\n        right: 'e-resize',\n        topleft: 'se-resize',\n        bottomright: 'se-resize',\n        topright: 'ne-resize',\n        bottomleft: 'ne-resize',\n      }\n    : {\n        x: 'ew-resize',\n        y: 'ns-resize',\n        xy: 'nwse-resize',\n\n        top: 'ns-resize',\n        left: 'ew-resize',\n        bottom: 'ns-resize',\n        right: 'ew-resize',\n        topleft: 'nwse-resize',\n        bottomright: 'nwse-resize',\n        topright: 'nesw-resize',\n        bottomleft: 'nesw-resize',\n      }\n}\n/* eslint-enable multiline-ternary */\n\nfunction start({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) {\n    return\n  }\n\n  const resizeEvent = iEvent as ResizeEvent\n  const rect = interaction.rect\n\n  interaction._rects = {\n    start: extend({}, rect),\n    corrected: extend({}, rect),\n    previous: extend({}, rect),\n    delta: {\n      left: 0,\n      right: 0,\n      width: 0,\n      top: 0,\n      bottom: 0,\n      height: 0,\n    },\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction move({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n  const resizeOptions = interaction.interactable.options.resize\n  const invert = resizeOptions.invert\n  const invertible = invert === 'reposition' || invert === 'negate'\n\n  const current = interaction.rect\n  const { start: startRect, corrected, delta: deltaRect, previous } = interaction._rects\n\n  extend(previous, corrected)\n\n  if (invertible) {\n    // if invertible, copy the current rect\n    extend(corrected, current)\n\n    if (invert === 'reposition') {\n      // swap edge values if necessary to keep width/height positive\n      if (corrected.top > corrected.bottom) {\n        const swap = corrected.top\n\n        corrected.top = corrected.bottom\n        corrected.bottom = swap\n      }\n      if (corrected.left > corrected.right) {\n        const swap = corrected.left\n\n        corrected.left = corrected.right\n        corrected.right = swap\n      }\n    }\n  } else {\n    // if not invertible, restrict to minimum of 0x0 rect\n    corrected.top = Math.min(current.top, startRect.bottom)\n    corrected.bottom = Math.max(current.bottom, startRect.top)\n    corrected.left = Math.min(current.left, startRect.right)\n    corrected.right = Math.max(current.right, startRect.left)\n  }\n\n  corrected.width = corrected.right - corrected.left\n  corrected.height = corrected.bottom - corrected.top\n\n  for (const edge in corrected) {\n    deltaRect[edge] = corrected[edge] - previous[edge]\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = corrected\n  resizeEvent.deltaRect = deltaRect\n}\n\nfunction end({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction updateEventAxes({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any, any>\n  interaction: Interaction\n}) {\n  if (interaction.prepared.name !== 'resize' || !interaction.resizeAxes) return\n\n  const options = interaction.interactable.options\n  const resizeEvent = iEvent as ResizeEvent\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = resizeEvent.delta.y\n    } else {\n      resizeEvent.delta.y = resizeEvent.delta.x\n    }\n    resizeEvent.axes = 'xy'\n  } else {\n    resizeEvent.axes = interaction.resizeAxes\n\n    if (interaction.resizeAxes === 'x') {\n      resizeEvent.delta.y = 0\n    } else if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = 0\n    }\n  }\n}\n\nconst resize: Plugin = {\n  id: 'actions/resize',\n  before: ['actions/drag'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.resizeAxes = 'xy'\n    },\n\n    'interactions:action-start': (arg) => {\n      start(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-move': (arg) => {\n      move(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-end': end,\n    'auto-start:check': resizeChecker,\n  },\n\n  defaults: {\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  } as ResizableOptions,\n\n  cursors: null as ReturnType<typeof initCursors>,\n\n  getCursor({ edges, axis, name }: ActionProps) {\n    const cursors = resize.cursors\n    let result: string = null\n\n    if (axis) {\n      result = cursors[name + axis]\n    } else if (edges) {\n      let cursorKey = ''\n\n      for (const edge of ['top', 'bottom', 'left', 'right']) {\n        if (edges[edge]) {\n          cursorKey += edge\n        }\n      }\n\n      result = cursors[cursorKey]\n    }\n\n    return result\n  },\n\n  filterEventType: (type: string) => type.search('resize') === 0,\n\n  defaultMargin: null as number,\n}\n\nexport default resize\n", "let lastTime = 0\nlet request: typeof requestAnimationFrame\nlet cancel: typeof cancelAnimationFrame\n\nfunction init(global: Window | typeof globalThis) {\n  request = global.requestAnimationFrame\n  cancel = global.cancelAnimationFrame\n\n  if (!request) {\n    const vendors = ['ms', 'moz', 'webkit', 'o']\n\n    for (const vendor of vendors) {\n      request = global[`${vendor}RequestAnimationFrame` as 'requestAnimationFrame']\n      cancel =\n        global[`${vendor}CancelAnimationFrame` as 'cancelAnimationFrame'] ||\n        global[`${vendor}CancelRequestAnimationFrame` as 'cancelAnimationFrame']\n    }\n  }\n\n  request = request && request.bind(global)\n  cancel = cancel && cancel.bind(global)\n\n  if (!request) {\n    request = (callback) => {\n      const currTime = Date.now()\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime))\n      const token = global.setTimeout(() => {\n        // eslint-disable-next-line n/no-callback-literal\n        callback(currTime + timeToCall)\n      }, timeToCall)\n\n      lastTime = currTime + timeToCall\n      return token as any\n    }\n\n    cancel = (token) => clearTimeout(token)\n  }\n}\n\nexport default {\n  request: (callback: FrameRequestCallback) => request(callback),\n  cancel: (token: number) => cancel(token),\n  init,\n}\n", "import type { Scope } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './drag/plugin'\nimport './drop/plugin'\nimport './gesture/plugin'\nimport './resize/plugin'\n\nimport drag from './drag/plugin'\nimport drop from './drop/plugin'\nimport gesture from './gesture/plugin'\nimport resize from './resize/plugin'\n/* eslint-enable import/no-duplicates */\n\nexport default {\n  id: 'actions',\n  install(scope: Scope) {\n    scope.usePlugin(gesture)\n    scope.usePlugin(resize)\n    scope.usePlugin(drag)\n    scope.usePlugin(drop)\n  },\n}\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, PointerType } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport { getStringOptionResult } from '@interactjs/utils/rect'\nimport { getWindow } from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoScroll: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoScroll?: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    autoScroll?: AutoScrollOptions\n  }\n}\n\nexport interface AutoScrollOptions {\n  container?: Window | HTMLElement | string\n  margin?: number\n  distance?: number\n  interval?: number\n  speed?: number\n  enabled?: boolean\n}\n\nfunction install(scope: Scope) {\n  const { defaults, actions } = scope\n\n  scope.autoScroll = autoScroll\n  autoScroll.now = () => scope.now()\n\n  actions.phaselessTypes.autoscroll = true\n  defaults.perAction.autoScroll = autoScroll.defaults\n}\n\nconst autoScroll = {\n  defaults: {\n    enabled: false,\n    margin: 60,\n\n    // the item that is scrolled (Window or HTMLElement)\n    container: null as AutoScrollOptions['container'],\n\n    // the scroll speed in pixels per second\n    speed: 300,\n  } as AutoScrollOptions,\n\n  now: Date.now,\n\n  interaction: null as Interaction<ActionName> | null,\n  i: 0, // the handle returned by window.setInterval\n\n  // Direction each pulse is to scroll in\n  x: 0,\n  y: 0,\n\n  isScrolling: false,\n  prevTime: 0,\n  margin: 0,\n  speed: 0,\n\n  start(interaction: Interaction) {\n    autoScroll.isScrolling = true\n    raf.cancel(autoScroll.i)\n\n    interaction.autoScroll = autoScroll\n    autoScroll.interaction = interaction\n    autoScroll.prevTime = autoScroll.now()\n    autoScroll.i = raf.request(autoScroll.scroll)\n  },\n\n  stop() {\n    autoScroll.isScrolling = false\n    if (autoScroll.interaction) {\n      autoScroll.interaction.autoScroll = null\n    }\n    raf.cancel(autoScroll.i)\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll() {\n    const { interaction } = autoScroll\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n    const now = autoScroll.now()\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000\n    // displacement\n    const s = options.speed * dt\n\n    if (s >= 1) {\n      const scrollBy = {\n        x: autoScroll.x * s,\n        y: autoScroll.y * s,\n      }\n\n      if (scrollBy.x || scrollBy.y) {\n        const prevScroll = getScroll(container)\n\n        if (is.window(container)) {\n          container.scrollBy(scrollBy.x, scrollBy.y)\n        } else if (container) {\n          container.scrollLeft += scrollBy.x\n          container.scrollTop += scrollBy.y\n        }\n\n        const curScroll = getScroll(container)\n        const delta = {\n          x: curScroll.x - prevScroll.x,\n          y: curScroll.y - prevScroll.y,\n        }\n\n        if (delta.x || delta.y) {\n          interactable.fire({\n            type: 'autoscroll',\n            target: element,\n            interactable,\n            delta,\n            interaction,\n            container,\n          })\n        }\n      }\n\n      autoScroll.prevTime = now\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i)\n      autoScroll.i = raf.request(autoScroll.scroll)\n    }\n  },\n  check(interactable: Interactable, actionName: ActionName) {\n    const options = interactable.options\n\n    return options[actionName].autoScroll?.enabled\n  },\n  onInteractionMove<T extends ActionName>({\n    interaction,\n    pointer,\n  }: {\n    interaction: Interaction<T>\n    pointer: PointerType\n  }) {\n    if (\n      !(interaction.interacting() && autoScroll.check(interaction.interactable, interaction.prepared.name))\n    ) {\n      return\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0\n      return\n    }\n\n    let top: boolean\n    let right: boolean\n    let bottom: boolean\n    let left: boolean\n\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n\n    if (is.window(container)) {\n      left = pointer.clientX < autoScroll.margin\n      top = pointer.clientY < autoScroll.margin\n      right = pointer.clientX > container.innerWidth - autoScroll.margin\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin\n    } else {\n      const rect = domUtils.getElementClientRect(container)\n\n      left = pointer.clientX < rect.left + autoScroll.margin\n      top = pointer.clientY < rect.top + autoScroll.margin\n      right = pointer.clientX > rect.right - autoScroll.margin\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin\n    }\n\n    autoScroll.x = right ? 1 : left ? -1 : 0\n    autoScroll.y = bottom ? 1 : top ? -1 : 0\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin\n      autoScroll.speed = options.speed\n\n      autoScroll.start(interaction)\n    }\n  },\n}\n\nexport function getContainer(value: any, interactable: Interactable, element: Element) {\n  return (\n    (is.string(value) ? getStringOptionResult(value, interactable, element) : value) || getWindow(element)\n  )\n}\n\nexport function getScroll(container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollLeft, y: container.scrollTop }\n}\n\nexport function getScrollSize(container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollWidth, y: container.scrollHeight }\n}\n\nexport function getScrollSizeDelta<T extends ActionName>(\n  {\n    interaction,\n    element,\n  }: {\n    interaction: Partial<Interaction<T>>\n    element: Element\n  },\n  func: any,\n) {\n  const scrollOptions = interaction && interaction.interactable.options[interaction.prepared.name].autoScroll\n\n  if (!scrollOptions || !scrollOptions.enabled) {\n    func()\n    return { x: 0, y: 0 }\n  }\n\n  const scrollContainer = getContainer(scrollOptions.container, interaction.interactable, element)\n\n  const prevSize = getScroll(scrollContainer)\n  func()\n  const curSize = getScroll(scrollContainer)\n\n  return {\n    x: curSize.x - prevSize.x,\n    y: curSize.y - prevSize.y,\n  }\n}\n\nconst autoScrollPlugin: Plugin = {\n  id: 'auto-scroll',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoScroll = null\n    },\n\n    'interactions:destroy': ({ interaction }) => {\n      interaction.autoScroll = null\n      autoScroll.stop()\n      if (autoScroll.interaction) {\n        autoScroll.interaction = null\n      }\n    },\n\n    'interactions:stop': autoScroll.stop,\n\n    'interactions:action-move': (arg: any) => autoScroll.onInteractionMove(arg),\n  },\n}\n\nexport default autoScrollPlugin\n", "import type { ActionName, ActionProps } from '@interactjs/core/types'\n\nimport { window } from './window'\n\nexport function warnOnce<T>(this: T, method: (...args: any[]) => any, message: string) {\n  let warned = false\n\n  return function (this: T) {\n    if (!warned) {\n      ;(window as any).console.warn(message)\n      warned = true\n    }\n\n    return method.apply(this, arguments)\n  }\n}\n\nexport function copyAction<T extends ActionName>(dest: ActionProps<any>, src: ActionProps<T>) {\n  dest.name = src.name\n  dest.axis = src.axis\n  dest.edges = src.edges\n\n  return dest\n}\n\nexport const sign = (n: number) => (n >= 0 ? 1 : -1)\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { ActionProps, PointerType, PointerEventType, Element } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\nimport { warnOnce } from '@interactjs/utils/misc'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    getAction: (\n      this: Interactable,\n      pointer: PointerType,\n      event: PointerEventType,\n      interaction: Interaction,\n      element: Element,\n    ) => ActionProps | null\n    styleCursor(newValue: boolean): this\n    styleCursor(): boolean\n    /**\n     * Returns or sets whether the the cursor should be changed depending on the\n     * action that would be performed if the mouse were pressed and dragged.\n     *\n     * @param {boolean} [newValue]\n     * @return {boolean | Interactable} The current setting or this Interactable\n     */\n    styleCursor(newValue?: boolean): boolean | this\n    actionChecker(checker: Function): Interactable\n    actionChecker(): Function\n    /**\n     * ```js\n     * interact('.resize-drag')\n     *   .resizable(true)\n     *   .draggable(true)\n     *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n     *\n     *     if (interact.matchesSelector(event.target, '.drag-handle')) {\n     *       // force drag with handle target\n     *       action.name = drag\n     *     }\n     *     else {\n     *       // resize from the top and right edges\n     *       action.name  = 'resize'\n     *       action.edges = { top: true, right: true }\n     *     }\n     *\n     *     return action\n     * })\n     * ```\n     *\n     * Returns or sets the function used to check action to be performed on\n     * pointerDown\n     *\n     * @param checker - A function which takes a pointer event,\n     * defaultAction string, interactable, element and interaction as parameters\n     * and returns an object with name property 'drag' 'resize' or 'gesture' and\n     * optionally an `edges` object with boolean 'top', 'left', 'bottom' and right\n     * props.\n     * @returns The checker function or this Interactable\n     */\n    actionChecker(checker?: Function): Interactable | Function\n    /** @returns This interactable */\n    ignoreFrom(newValue: string | Element | null): Interactable\n    /** @returns The current ignoreFrom value */\n    ignoreFrom(): string | Element | null\n    /**\n     * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\n     * of it's parents match the given CSS selector or Element, no\n     * drag/resize/gesture is started.\n     *\n     * @deprecated\n     * Don't use this method. Instead set the `ignoreFrom` option for each action\n     * or for `pointerEvents`\n     *\n     * ```js\n     * interact(targett)\n     *   .draggable({\n     *     ignoreFrom: 'input, textarea, a[href]'',\n     *   })\n     *   .pointerEvents({\n     *     ignoreFrom: '[no-pointer]',\n     *   })\n     * ```\n     * Interactable\n     */\n    ignoreFrom(\n      /** a CSS selector string, an Element or `null` to not ignore any elements */\n      newValue?: string | Element | null,\n    ): Interactable | string | Element | null\n    allowFrom(): boolean\n    /**\n     *\n     * A drag/resize/gesture is started only If the target of the `mousedown`,\n     * `pointerdown` or `touchstart` event or any of it's parents match the given\n     * CSS selector or Element.\n     *\n     * @deprecated\n     * Don't use this method. Instead set the `allowFrom` option for each action\n     * or for `pointerEvents`\n     *\n     * ```js\n     * interact(targett)\n     *   .resizable({\n     *     allowFrom: '.resize-handle',\n     *   .pointerEvents({\n     *     allowFrom: '.handle',,\n     *   })\n     * ```\n     *\n     * @param {string | Element | null} [newValue]\n     * @return {string | Element | object} The current allowFrom value or this\n     * Interactable\n     */\n    allowFrom(\n      /** A CSS selector string, an Element or `null` to allow from any element */\n      newValue: string | Element | null,\n    ): Interactable\n  }\n}\n\nfunction install(scope: Scope) {\n  const {\n    Interactable, // tslint:disable-line no-shadowed-variable\n  } = scope\n\n  Interactable.prototype.getAction = function getAction(\n    this: Interactable,\n    pointer: PointerType,\n    event: PointerEventType,\n    interaction: Interaction,\n    element: Element,\n  ): ActionProps {\n    const action = defaultActionChecker(this, event, interaction, element, scope)\n\n    if (this.options.actionChecker) {\n      return this.options.actionChecker(pointer, event, action, this, element, interaction)\n    }\n\n    return action\n  }\n\n  Interactable.prototype.ignoreFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('ignoreFrom', newValue)\n  }, 'Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue}).')\n\n  Interactable.prototype.allowFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('allowFrom', newValue)\n  }, 'Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue}).')\n\n  Interactable.prototype.actionChecker = actionChecker\n\n  Interactable.prototype.styleCursor = styleCursor\n}\n\nfunction defaultActionChecker(\n  interactable: Interactable,\n  event: PointerEventType,\n  interaction: Interaction,\n  element: Element,\n  scope: Scope,\n) {\n  const rect = interactable.getRect(element)\n  const buttons =\n    (event as MouseEvent).buttons ||\n    {\n      0: 1,\n      1: 4,\n      3: 8,\n      4: 16,\n    }[(event as MouseEvent).button as 0 | 1 | 3 | 4]\n  const arg = {\n    action: null,\n    interactable,\n    interaction,\n    element,\n    rect,\n    buttons,\n  }\n\n  scope.fire('auto-start:check', arg)\n\n  return arg.action\n}\n\nfunction styleCursor(this: Interactable, newValue?: boolean) {\n  if (is.bool(newValue)) {\n    this.options.styleCursor = newValue\n\n    return this\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor\n\n    return this\n  }\n\n  return this.options.styleCursor\n}\n\nfunction actionChecker(this: Interactable, checker?: any) {\n  if (is.func(checker)) {\n    this.options.actionChecker = checker\n\n    return this\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker\n\n    return this\n  }\n\n  return this.options.actionChecker\n}\n\nexport default {\n  id: 'auto-start/interactableMethods',\n  install,\n}\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type {\n  CursorChecker,\n  PointerType,\n  PointerEventType,\n  Element,\n  ActionName,\n  ActionProps,\n} from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport { copyAction } from '@interactjs/utils/misc'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './InteractableMethods'\nimport InteractableMethods from './InteractableMethods'\n/* eslint-enable import/no-duplicates */\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    /**\n     * Returns or sets the maximum number of concurrent interactions allowed.  By\n     * default only 1 interaction is allowed at a time (for backwards\n     * compatibility). To allow multiple interactions on the same Interactables and\n     * elements, you need to enable it in the draggable, resizable and gesturable\n     * `'max'` and `'maxPerElement'` options.\n     *\n     * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\n     */\n    maxInteractions: (newValue: any) => any\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoStart: AutoStart\n  }\n\n  interface SignalArgs {\n    'autoStart:before-start': Omit<SignalArgs['interactions:move'], 'interaction'> & {\n      interaction: Interaction<ActionName>\n    }\n    'autoStart:prepared': { interaction: Interaction }\n    'auto-start:check': CheckSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface BaseDefaults {\n    actionChecker?: any\n    cursorChecker?: any\n    styleCursor?: any\n  }\n\n  interface PerActionDefaults {\n    manualStart?: boolean\n    max?: number\n    maxPerElement?: number\n    allowFrom?: string | Element\n    ignoreFrom?: string | Element\n    cursorChecker?: CursorChecker\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    // TODO: docst\n    mouseButtons?: 0 | 1 | 2 | 4 | 8 | 16\n  }\n}\n\ninterface CheckSignalArg {\n  interactable: Interactable\n  interaction: Interaction\n  element: Element\n  action: ActionProps<ActionName>\n  buttons: number\n}\n\nexport interface AutoStart {\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: number\n  withinInteractionLimit: typeof withinInteractionLimit\n  cursorElement: Element\n}\n\nfunction install(scope: Scope) {\n  const { interactStatic: interact, defaults } = scope\n\n  scope.usePlugin(InteractableMethods)\n\n  defaults.base.actionChecker = null\n  defaults.base.styleCursor = true\n\n  extend(defaults.perAction, {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n    allowFrom: null,\n    ignoreFrom: null,\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons: 1,\n  })\n\n  interact.maxInteractions = (newValue: number) => maxInteractions(newValue, scope)\n\n  scope.autoStart = {\n    // Allow this many interactions to happen simultaneously\n    maxInteractions: Infinity,\n    withinInteractionLimit,\n    cursorElement: null,\n  }\n}\n\nfunction prepareOnDown(\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  if (interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction prepareOnMove(\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:move'],\n  scope: Scope,\n) {\n  if (interaction.pointerType !== 'mouse' || interaction.pointerIsDown || interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget as Element, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction startOnMove(arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction } = arg\n\n  if (\n    !interaction.pointerIsDown ||\n    interaction.interacting() ||\n    !interaction.pointerWasMoved ||\n    !interaction.prepared.name\n  ) {\n    return\n  }\n\n  scope.fire('autoStart:before-start', arg)\n\n  const { interactable } = interaction\n  const actionName = (interaction as Interaction<ActionName>).prepared.name\n\n  if (actionName && interactable) {\n    // check manualStart and interaction limit\n    if (\n      interactable.options[actionName].manualStart ||\n      !withinInteractionLimit(interactable, interaction.element, interaction.prepared, scope)\n    ) {\n      interaction.stop()\n    } else {\n      interaction.start(interaction.prepared, interactable, interaction.element)\n      setInteractionCursor(interaction, scope)\n    }\n  }\n}\n\nfunction clearCursorOnStop({ interaction }: { interaction: Interaction }, scope: Scope) {\n  const { interactable } = interaction\n\n  if (interactable && interactable.options.styleCursor) {\n    setCursor(interaction.element, '', scope)\n  }\n}\n\n// Check if the current interactable supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction<T extends ActionName>(\n  action: ActionProps<T>,\n  interactable: Interactable,\n  element: Element,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  if (\n    interactable.testIgnoreAllow(interactable.options[action.name], element, eventTarget) &&\n    interactable.options[action.name].enabled &&\n    withinInteractionLimit(interactable, element, action, scope)\n  ) {\n    return action\n  }\n\n  return null\n}\n\nfunction validateMatches(\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  matches: Interactable[],\n  matchElements: Element[],\n  eventTarget: Node,\n  scope: Scope,\n) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i]\n    const matchElement = matchElements[i]\n    const matchAction = match.getAction(pointer, event, interaction, matchElement)\n\n    if (!matchAction) {\n      continue\n    }\n\n    const action = validateAction<ActionName>(matchAction, match, matchElement, eventTarget, scope)\n\n    if (action) {\n      return {\n        action,\n        interactable: match,\n        element: matchElement,\n      }\n    }\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction getActionInfo(\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  let matches: Interactable[] = []\n  let matchElements: Element[] = []\n\n  let element = eventTarget as Element\n\n  function pushMatches(interactable: Interactable) {\n    matches.push(interactable)\n    matchElements.push(element)\n  }\n\n  while (is.element(element)) {\n    matches = []\n    matchElements = []\n\n    scope.interactables.forEachMatch(element, pushMatches)\n\n    const actionInfo = validateMatches(\n      interaction,\n      pointer,\n      event,\n      matches,\n      matchElements,\n      eventTarget,\n      scope,\n    )\n\n    if (actionInfo.action && !actionInfo.interactable.options[actionInfo.action.name].manualStart) {\n      return actionInfo\n    }\n\n    element = domUtils.parentNode(element) as Element\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction prepare(\n  interaction: Interaction,\n  {\n    action,\n    interactable,\n    element,\n  }: {\n    action: ActionProps<any>\n    interactable: Interactable\n    element: Element\n  },\n  scope: Scope,\n) {\n  action = action || { name: null }\n\n  interaction.interactable = interactable\n  interaction.element = element\n  copyAction(interaction.prepared, action)\n\n  interaction.rect = interactable && action.name ? interactable.getRect(element) : null\n\n  setInteractionCursor(interaction, scope)\n\n  scope.fire('autoStart:prepared', { interaction })\n}\n\nfunction withinInteractionLimit<T extends ActionName>(\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  scope: Scope,\n) {\n  const options = interactable.options\n  const maxActions = options[action.name].max\n  const maxPerElement = options[action.name].maxPerElement\n  const autoStartMax = scope.autoStart.maxInteractions\n  let activeInteractions = 0\n  let interactableCount = 0\n  let elementCount = 0\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStartMax)) {\n    return false\n  }\n\n  for (const interaction of scope.interactions.list) {\n    const otherAction = interaction.prepared.name\n\n    if (!interaction.interacting()) {\n      continue\n    }\n\n    activeInteractions++\n\n    if (activeInteractions >= autoStartMax) {\n      return false\n    }\n\n    if (interaction.interactable !== interactable) {\n      continue\n    }\n\n    interactableCount += otherAction === action.name ? 1 : 0\n\n    if (interactableCount >= maxActions) {\n      return false\n    }\n\n    if (interaction.element === element) {\n      elementCount++\n\n      if (otherAction === action.name && elementCount >= maxPerElement) {\n        return false\n      }\n    }\n  }\n\n  return autoStartMax > 0\n}\n\nfunction maxInteractions(newValue: any, scope: Scope) {\n  if (is.number(newValue)) {\n    scope.autoStart.maxInteractions = newValue\n\n    return this\n  }\n\n  return scope.autoStart.maxInteractions\n}\n\nfunction setCursor(element: Element, cursor: string, scope: Scope) {\n  const { cursorElement: prevCursorElement } = scope.autoStart\n\n  if (prevCursorElement && prevCursorElement !== element) {\n    prevCursorElement.style.cursor = ''\n  }\n\n  element.ownerDocument.documentElement.style.cursor = cursor\n  element.style.cursor = cursor\n  scope.autoStart.cursorElement = cursor ? element : null\n}\n\nfunction setInteractionCursor<T extends ActionName>(interaction: Interaction<T>, scope: Scope) {\n  const { interactable, element, prepared } = interaction\n\n  if (!(interaction.pointerType === 'mouse' && interactable && interactable.options.styleCursor)) {\n    // clear previous target element cursor\n    if (scope.autoStart.cursorElement) {\n      setCursor(scope.autoStart.cursorElement, '', scope)\n    }\n\n    return\n  }\n\n  let cursor = ''\n\n  if (prepared.name) {\n    const cursorChecker = interactable.options[prepared.name].cursorChecker\n\n    if (is.func(cursorChecker)) {\n      cursor = cursorChecker(prepared, interactable, element, interaction._interacting)\n    } else {\n      cursor = scope.actions.map[prepared.name].getCursor(prepared)\n    }\n  }\n\n  setCursor(interaction.element, cursor || '', scope)\n}\n\nconst autoStart: Plugin = {\n  id: 'auto-start/base',\n  before: ['actions'],\n  install,\n  listeners: {\n    'interactions:down': prepareOnDown,\n    'interactions:move': (arg, scope) => {\n      prepareOnMove(arg, scope)\n      startOnMove(arg, scope)\n    },\n    'interactions:stop': clearCursorOnStop,\n  },\n  maxInteractions,\n  withinInteractionLimit,\n  validateAction,\n}\n\nexport default autoStart\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { SignalArgs, Scope } from '@interactjs/core/scope'\nimport type { ActionName, Element } from '@interactjs/core/types'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\n\nimport autoStart from './base'\n\nfunction beforeStart({ interaction, eventTarget, dx, dy }: SignalArgs['interactions:move'], scope: Scope) {\n  if (interaction.prepared.name !== 'drag') return\n\n  // check if a drag is in the correct axis\n  const absX = Math.abs(dx)\n  const absY = Math.abs(dy)\n  const targetOptions = interaction.interactable.options.drag\n  const startAxis = targetOptions.startAxis\n  const currentAxis = absX > absY ? 'x' : absX < absY ? 'y' : 'xy'\n\n  interaction.prepared.axis =\n    targetOptions.lockAxis === 'start'\n      ? (currentAxis[0] as 'x' | 'y') // always lock to one axis even if currentAxis === 'xy'\n      : targetOptions.lockAxis\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    ;(interaction as Interaction<ActionName>).prepared.name = null\n\n    // then try to get a drag from another ineractable\n    let element = eventTarget as Element\n\n    const getDraggable = function (interactable: Interactable): Interactable | void {\n      if (interactable === interaction.interactable) return\n\n      const options = interaction.interactable.options.drag\n\n      if (!options.manualStart && interactable.testIgnoreAllow(options, element, eventTarget)) {\n        const action = interactable.getAction(\n          interaction.downPointer,\n          interaction.downEvent,\n          interaction,\n          element,\n        )\n\n        if (\n          action &&\n          action.name === 'drag' &&\n          checkStartAxis(currentAxis, interactable) &&\n          autoStart.validateAction(action, interactable, element, eventTarget, scope)\n        ) {\n          return interactable\n        }\n      }\n    }\n\n    // check all interactables\n    while (is.element(element)) {\n      const interactable = scope.interactables.forEachMatch(element, getDraggable)\n\n      if (interactable) {\n        ;(interaction as Interaction<ActionName>).prepared.name = 'drag'\n        interaction.interactable = interactable\n        interaction.element = element\n        break\n      }\n\n      element = parentNode(element) as Element\n    }\n  }\n}\n\nfunction checkStartAxis(startAxis: string, interactable: Interactable) {\n  if (!interactable) {\n    return false\n  }\n\n  const thisAxis = interactable.options.drag.startAxis\n\n  return startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis\n}\n\nexport default {\n  id: 'auto-start/dragAxis',\n  listeners: { 'autoStart:before-start': beforeStart },\n}\n", "import type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './base'\nimport basePlugin from './base'\n/* eslint-enable */\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    hold?: number\n    delay?: number\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoStartHoldTimer?: any\n  }\n}\n\nfunction install(scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(basePlugin)\n\n  defaults.perAction.hold = 0\n  defaults.perAction.delay = 0\n}\n\nfunction getHoldDuration(interaction: Interaction) {\n  const actionName = interaction.prepared && interaction.prepared.name\n\n  if (!actionName) {\n    return null\n  }\n\n  const options = interaction.interactable.options\n\n  return options[actionName].hold || options[actionName].delay\n}\n\nconst hold: Plugin = {\n  id: 'auto-start/hold',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoStartHoldTimer = null\n    },\n\n    'autoStart:prepared': ({ interaction }) => {\n      const hold = getHoldDuration(interaction)\n\n      if (hold > 0) {\n        interaction.autoStartHoldTimer = setTimeout(() => {\n          interaction.start(interaction.prepared, interaction.interactable, interaction.element)\n        }, hold)\n      }\n    },\n\n    'interactions:move': ({ interaction, duplicate }) => {\n      if (interaction.autoStartHoldTimer && interaction.pointerWasMoved && !duplicate) {\n        clearTimeout(interaction.autoStartHoldTimer)\n        interaction.autoStartHoldTimer = null\n      }\n    },\n\n    // prevent regular down->move autoStart\n    'autoStart:before-start': ({ interaction }) => {\n      const holdDuration = getHoldDuration(interaction)\n\n      if (holdDuration > 0) {\n        interaction.prepared.name = null\n      }\n    },\n  },\n  getHoldDuration,\n}\nexport default hold\n", "import type { Scope } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './base'\nimport './dragAxis'\nimport './hold'\n\nimport autoStart from './base'\nimport dragAxis from './dragAxis'\nimport hold from './hold'\n/* eslint-enable import/no-duplicates */\n\nexport default {\n  id: 'auto-start',\n  install(scope: Scope) {\n    scope.usePlugin(autoStart)\n    scope.usePlugin(hold)\n    scope.usePlugin(dragAxis)\n  },\n}\n", "import { matchesSelector, nodeContains } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport { getWindow } from '@interactjs/utils/window'\n\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerEventType } from '@interactjs/core/types'\n\ntype PreventDefaultValue = 'always' | 'never' | 'auto'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    preventDefault(newValue: PreventDefaultValue): this\n    preventDefault(): PreventDefaultValue\n    /**\n     * Returns or sets whether to prevent the browser's default behaviour in\n     * response to pointer events. Can be set to:\n     *  - `'always'` to always prevent\n     *  - `'never'` to never prevent\n     *  - `'auto'` to let interact.js try to determine what would be best\n     *\n     * @param newValue - `'always'`, `'never'` or `'auto'`\n     * @returns The current setting or this Interactable\n     */\n    preventDefault(newValue?: PreventDefaultValue): PreventDefaultValue | this\n    checkAndPreventDefault(event: Event): void\n  }\n}\n\nconst preventDefault = function preventDefault(this: Interactable, newValue?: PreventDefaultValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    this.options.preventDefault = newValue\n    return this\n  }\n\n  if (is.bool(newValue)) {\n    this.options.preventDefault = newValue ? 'always' : 'never'\n    return this\n  }\n\n  return this.options.preventDefault\n} as Interactable['preventDefault']\n\nfunction checkAndPreventDefault(interactable: Interactable, scope: Scope, event: Event) {\n  const setting = interactable.options.preventDefault\n\n  if (setting === 'never') return\n\n  if (setting === 'always') {\n    event.preventDefault()\n    return\n  }\n\n  // setting === 'auto'\n\n  // if the browser supports passive event listeners and isn't running on iOS,\n  // don't preventDefault of touch{start,move} events. CSS touch-action and\n  // user-select should be used instead of calling event.preventDefault().\n  if (scope.events.supportsPassive && /^touch(start|move)$/.test(event.type)) {\n    const doc = getWindow(event.target).document\n    const docOptions = scope.getDocOptions(doc)\n\n    if (!(docOptions && docOptions.events) || docOptions.events.passive !== false) {\n      return\n    }\n  }\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return\n  }\n\n  // don't preventDefault on editable elements\n  if (\n    is.element(event.target) &&\n    matchesSelector(event.target, 'input,select,textarea,[contenteditable=true],[contenteditable=true] *')\n  ) {\n    return\n  }\n\n  event.preventDefault()\n}\n\nfunction onInteractionEvent({ interaction, event }: { interaction: Interaction; event: PointerEventType }) {\n  if (interaction.interactable) {\n    interaction.interactable.checkAndPreventDefault(event as Event)\n  }\n}\n\nexport function install(scope: Scope) {\n  const { Interactable } = scope\n\n  Interactable.prototype.preventDefault = preventDefault\n\n  Interactable.prototype.checkAndPreventDefault = function (event) {\n    return checkAndPreventDefault(this, scope, event)\n  }\n\n  // prevent native HTML5 drag on interact.js target elements\n  scope.interactions.docEvents.push({\n    type: 'dragstart',\n    listener(event) {\n      for (const interaction of scope.interactions.list) {\n        if (\n          interaction.element &&\n          (interaction.element === event.target || nodeContains(interaction.element, event.target))\n        ) {\n          interaction.interactable.checkAndPreventDefault(event)\n          return\n        }\n      }\n    },\n  })\n}\n\nexport default {\n  id: 'core/interactablePreventDefault',\n  install,\n  listeners: ['down', 'move', 'up', 'cancel'].reduce((acc, eventType) => {\n    acc[`interactions:${eventType}`] = onInteractionEvent\n    return acc\n  }, {} as any),\n}\n", "import type { Actions } from '@interactjs/core/types'\n\nexport default function isNonNativeEvent(type: string, actions: Actions) {\n  if (actions.phaselessTypes[type]) {\n    return true\n  }\n\n  for (const name in actions.map) {\n    if (type.indexOf(name) === 0 && type.substr(name.length) in actions.phases) {\n      return true\n    }\n  }\n\n  return false\n}\n", "import * as arr from './arr'\nimport is from './is'\n\n// tslint:disable-next-line ban-types\nexport default function clone<T extends Object>(source: T): Partial<T> {\n  const dest = {} as Partial<T>\n\n  for (const prop in source) {\n    const value = source[prop]\n\n    if (is.plainObject(value)) {\n      dest[prop] = clone(value) as any\n    } else if (is.array(value)) {\n      dest[prop] = arr.from(value) as typeof value\n    } else {\n      dest[prop] = value\n    }\n  }\n\n  return dest\n}\n", "import type { EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoAnyPhaseArg } from '@interactjs/core/Interaction'\nimport type { EdgeOptions, FullRect, Point, Rect } from '@interactjs/core/types'\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { Modifier, ModifierArg, ModifierState } from './types'\n\nexport interface ModificationResult {\n  delta: Point\n  rectDelta: Rect\n  coords: Point\n  rect: FullRect\n  eventProps: any[]\n  changed: boolean\n}\n\ninterface MethodArg {\n  phase: EventPhase\n  pageCoords: Point\n  rect: FullRect\n  coords: Point\n  preEnd?: boolean\n  skipModifiers?: number\n}\n\nexport class Modification {\n  states: ModifierState[] = []\n  startOffset: Rect = { left: 0, right: 0, top: 0, bottom: 0 }\n  startDelta!: Point\n  result!: ModificationResult\n  endResult!: Point\n  startEdges!: EdgeOptions\n  edges: EdgeOptions\n  readonly interaction: Readonly<Interaction>\n\n  constructor(interaction: Interaction) {\n    this.interaction = interaction\n    this.result = createResult()\n    this.edges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n  }\n\n  start({ phase }: { phase: EventPhase }, pageCoords: Point) {\n    const { interaction } = this\n    const modifierList = getModifierList(interaction)\n    this.prepareStates(modifierList)\n\n    this.startEdges = extend({}, interaction.edges)\n    this.edges = extend({}, this.startEdges)\n    this.startOffset = getRectOffset(interaction.rect, pageCoords)\n    this.startDelta = { x: 0, y: 0 }\n\n    const arg = this.fillArg({\n      phase,\n      pageCoords,\n      preEnd: false,\n    })\n\n    this.result = createResult()\n    this.startAll(arg)\n\n    const result = (this.result = this.setAll(arg))\n\n    return result\n  }\n\n  fillArg(arg: Partial<ModifierArg>) {\n    const { interaction } = this\n\n    arg.interaction = interaction\n    arg.interactable = interaction.interactable\n    arg.element = interaction.element\n    arg.rect ||= interaction.rect\n    arg.edges ||= this.startEdges\n    arg.startOffset = this.startOffset\n\n    return arg as ModifierArg\n  }\n\n  startAll(arg: MethodArg & Partial<ModifierArg>) {\n    for (const state of this.states) {\n      if (state.methods.start) {\n        arg.state = state\n        state.methods.start(arg as ModifierArg)\n      }\n    }\n  }\n\n  setAll(arg: MethodArg & Partial<ModifierArg>): ModificationResult {\n    const { phase, preEnd, skipModifiers, rect: unmodifiedRect, edges: unmodifiedEdges } = arg\n\n    arg.coords = extend({}, arg.pageCoords)\n    arg.rect = extend({}, unmodifiedRect)\n    arg.edges = extend({}, unmodifiedEdges)\n\n    const states = skipModifiers ? this.states.slice(skipModifiers) : this.states\n\n    const newResult = createResult(arg.coords, arg.rect)\n\n    for (const state of states) {\n      const { options } = state\n      const lastModifierCoords = extend({}, arg.coords)\n      let returnValue = null\n\n      if (state.methods?.set && this.shouldDo(options, preEnd, phase)) {\n        arg.state = state\n        returnValue = state.methods.set(arg as ModifierArg<never>)\n\n        rectUtils.addEdges(arg.edges, arg.rect, {\n          x: arg.coords.x - lastModifierCoords.x,\n          y: arg.coords.y - lastModifierCoords.y,\n        })\n      }\n\n      newResult.eventProps.push(returnValue)\n    }\n\n    extend(this.edges, arg.edges)\n\n    newResult.delta.x = arg.coords.x - arg.pageCoords.x\n    newResult.delta.y = arg.coords.y - arg.pageCoords.y\n\n    newResult.rectDelta.left = arg.rect.left - unmodifiedRect.left\n    newResult.rectDelta.right = arg.rect.right - unmodifiedRect.right\n    newResult.rectDelta.top = arg.rect.top - unmodifiedRect.top\n    newResult.rectDelta.bottom = arg.rect.bottom - unmodifiedRect.bottom\n\n    const prevCoords = this.result.coords\n    const prevRect = this.result.rect\n\n    if (prevCoords && prevRect) {\n      const rectChanged =\n        newResult.rect.left !== prevRect.left ||\n        newResult.rect.right !== prevRect.right ||\n        newResult.rect.top !== prevRect.top ||\n        newResult.rect.bottom !== prevRect.bottom\n\n      newResult.changed =\n        rectChanged || prevCoords.x !== newResult.coords.x || prevCoords.y !== newResult.coords.y\n    }\n\n    return newResult\n  }\n\n  applyToInteraction(arg: { phase: EventPhase; rect?: Rect }) {\n    const { interaction } = this\n    const { phase } = arg\n    const curCoords = interaction.coords.cur\n    const startCoords = interaction.coords.start\n    const { result, startDelta } = this\n    const curDelta = result.delta\n\n    if (phase === 'start') {\n      extend(this.startDelta, result.delta)\n    }\n\n    for (const [coordsSet, delta] of [\n      [startCoords, startDelta],\n      [curCoords, curDelta],\n    ] as const) {\n      coordsSet.page.x += delta.x\n      coordsSet.page.y += delta.y\n      coordsSet.client.x += delta.x\n      coordsSet.client.y += delta.y\n    }\n\n    const { rectDelta } = this.result\n    const rect = arg.rect || interaction.rect\n\n    rect.left += rectDelta.left\n    rect.right += rectDelta.right\n    rect.top += rectDelta.top\n    rect.bottom += rectDelta.bottom\n\n    rect.width = rect.right - rect.left\n    rect.height = rect.bottom - rect.top\n  }\n\n  setAndApply(\n    arg: Partial<DoAnyPhaseArg> & {\n      phase: EventPhase\n      preEnd?: boolean\n      skipModifiers?: number\n      modifiedCoords?: Point\n    },\n  ): void | false {\n    const { interaction } = this\n    const { phase, preEnd, skipModifiers } = arg\n\n    const result = this.setAll(\n      this.fillArg({\n        preEnd,\n        phase,\n        pageCoords: arg.modifiedCoords || interaction.coords.cur.page,\n      }),\n    )\n\n    this.result = result\n\n    // don't fire an action move if a modifier would keep the event in the same\n    // cordinates as before\n    if (\n      !result.changed &&\n      (!skipModifiers || skipModifiers < this.states.length) &&\n      interaction.interacting()\n    ) {\n      return false\n    }\n\n    if (arg.modifiedCoords) {\n      const { page } = interaction.coords.cur\n      const adjustment = {\n        x: arg.modifiedCoords.x - page.x,\n        y: arg.modifiedCoords.y - page.y,\n      }\n\n      result.coords.x += adjustment.x\n      result.coords.y += adjustment.y\n      result.delta.x += adjustment.x\n      result.delta.y += adjustment.y\n    }\n\n    this.applyToInteraction(arg)\n  }\n\n  beforeEnd(arg: Omit<DoAnyPhaseArg, 'iEvent'> & { state?: ModifierState }): void | false {\n    const { interaction, event } = arg\n    const states = this.states\n\n    if (!states || !states.length) {\n      return\n    }\n\n    let doPreend = false\n\n    for (const state of states) {\n      arg.state = state\n      const { options, methods } = state\n\n      const endPosition = methods.beforeEnd && methods.beforeEnd(arg as unknown as ModifierArg)\n\n      if (endPosition) {\n        this.endResult = endPosition\n        return false\n      }\n\n      doPreend = doPreend || (!doPreend && this.shouldDo(options, true, arg.phase, true))\n    }\n\n    if (doPreend) {\n      // trigger a final modified move before ending\n      interaction.move({ event, preEnd: true })\n    }\n  }\n\n  stop(arg: { interaction: Interaction }) {\n    const { interaction } = arg\n\n    if (!this.states || !this.states.length) {\n      return\n    }\n\n    const modifierArg: Partial<ModifierArg> = extend(\n      {\n        states: this.states,\n        interactable: interaction.interactable,\n        element: interaction.element,\n        rect: null,\n      },\n      arg,\n    )\n\n    this.fillArg(modifierArg)\n\n    for (const state of this.states) {\n      modifierArg.state = state\n\n      if (state.methods.stop) {\n        state.methods.stop(modifierArg as ModifierArg)\n      }\n    }\n\n    this.states = null\n    this.endResult = null\n  }\n\n  prepareStates(modifierList: Modifier[]) {\n    this.states = []\n\n    for (let index = 0; index < modifierList.length; index++) {\n      const { options, methods, name } = modifierList[index]\n\n      this.states.push({\n        options,\n        methods,\n        index,\n        name,\n      })\n    }\n\n    return this.states\n  }\n\n  restoreInteractionCoords({ interaction: { coords, rect, modification } }: { interaction: Interaction }) {\n    if (!modification.result) return\n\n    const { startDelta } = modification\n    const { delta: curDelta, rectDelta } = modification.result\n\n    const coordsAndDeltas = [\n      [coords.start, startDelta],\n      [coords.cur, curDelta],\n    ]\n\n    for (const [coordsSet, delta] of coordsAndDeltas as any) {\n      coordsSet.page.x -= delta.x\n      coordsSet.page.y -= delta.y\n      coordsSet.client.x -= delta.x\n      coordsSet.client.y -= delta.y\n    }\n\n    rect.left -= rectDelta.left\n    rect.right -= rectDelta.right\n    rect.top -= rectDelta.top\n    rect.bottom -= rectDelta.bottom\n  }\n\n  shouldDo(options, preEnd?: boolean, phase?: string, requireEndOnly?: boolean) {\n    if (\n      // ignore disabled modifiers\n      !options ||\n      options.enabled === false ||\n      // check if we require endOnly option to fire move before end\n      (requireEndOnly && !options.endOnly) ||\n      // don't apply endOnly modifiers when not ending\n      (options.endOnly && !preEnd) ||\n      // check if modifier should run be applied on start\n      (phase === 'start' && !options.setStart)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  copyFrom(other: Modification) {\n    this.startOffset = other.startOffset\n    this.startDelta = other.startDelta\n    this.startEdges = other.startEdges\n    this.edges = other.edges\n    this.states = other.states.map((s) => clone(s) as ModifierState)\n    this.result = createResult(extend({}, other.result.coords), extend({}, other.result.rect))\n  }\n\n  destroy() {\n    for (const prop in this) {\n      this[prop] = null\n    }\n  }\n}\n\nfunction createResult(coords?: Point, rect?: FullRect): ModificationResult {\n  return {\n    rect,\n    coords,\n    delta: { x: 0, y: 0 },\n    rectDelta: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n    },\n    eventProps: [],\n    changed: true,\n  }\n}\n\nfunction getModifierList(interaction) {\n  const actionOptions = interaction.interactable.options[interaction.prepared.name]\n  const actionModifiers = actionOptions.modifiers\n\n  if (actionModifiers && actionModifiers.length) {\n    return actionModifiers\n  }\n\n  return ['snap', 'snapSize', 'snapEdges', 'restrict', 'restrictEdges', 'restrictSize']\n    .map((type) => {\n      const options = actionOptions[type]\n\n      return (\n        options &&\n        options.enabled && {\n          options,\n          methods: options._methods,\n        }\n      )\n    })\n    .filter((m) => !!m)\n}\n\nexport function getRectOffset(rect, coords) {\n  return rect\n    ? {\n        left: coords.x - rect.left,\n        top: coords.y - rect.top,\n        right: rect.right - coords.x,\n        bottom: rect.bottom - coords.y,\n      }\n    : {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n      }\n}\n", "import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\n\nimport { Modification } from './Modification'\nimport type { Modifier, ModifierModule, ModifierState } from './types'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    modification?: Modification\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    modifiers?: Array<{\n      name: string\n      [key: string]: any\n    }>\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    modifiers?: Modifier[]\n  }\n}\n\nexport function makeModifier<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n  Name extends string,\n  Result,\n>(module: ModifierModule<Defaults, State, Result>, name?: Name) {\n  const { defaults } = module\n  const methods = {\n    start: module.start,\n    set: module.set,\n    beforeEnd: module.beforeEnd,\n    stop: module.stop,\n  }\n\n  const modifier = (_options?: Partial<Defaults>) => {\n    const options = (_options || {}) as Defaults\n\n    options.enabled = options.enabled !== false\n\n    // add missing defaults to options\n    for (const prop in defaults) {\n      if (!(prop in options)) {\n        ;(options as any)[prop] = defaults[prop]\n      }\n    }\n\n    const m: Modifier<Defaults, State, Name, Result> = {\n      options,\n      methods,\n      name,\n      enable: () => {\n        options.enabled = true\n        return m\n      },\n      disable: () => {\n        options.enabled = false\n        return m\n      },\n    }\n\n    return m\n  }\n\n  if (name && typeof name === 'string') {\n    // for backwrads compatibility\n    modifier._defaults = defaults\n    modifier._methods = methods\n  }\n\n  return modifier\n}\n\nexport function addEventModifiers({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any>\n  interaction: Interaction<any>\n}) {\n  const result = interaction.modification!.result\n\n  if (result) {\n    iEvent.modifiers = result.eventProps\n  }\n}\n\nconst modifiersBase: Plugin = {\n  id: 'modifiers/base',\n  before: ['actions'],\n  install: (scope) => {\n    scope.defaults.perAction.modifiers = []\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.modification = new Modification(interaction)\n    },\n\n    'interactions:before-action-start': (arg) => {\n      const { interaction } = arg\n      const modification = arg.interaction.modification!\n\n      modification.start(arg, interaction.coords.start.page)\n      interaction.edges = modification.edges\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-move': (arg) => {\n      const { interaction } = arg\n      const { modification } = interaction\n      const ret = modification.setAndApply(arg)\n      interaction.edges = modification.edges\n\n      return ret\n    },\n\n    'interactions:before-action-end': (arg) => {\n      const { interaction } = arg\n      const { modification } = interaction\n      const ret = modification.beforeEnd(arg)\n      interaction.edges = modification.startEdges\n\n      return ret\n    },\n\n    'interactions:action-start': addEventModifiers,\n    'interactions:action-move': addEventModifiers,\n    'interactions:action-end': addEventModifiers,\n\n    'interactions:after-action-start': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-move': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n\n    'interactions:stop': (arg) => arg.interaction.modification.stop(arg),\n  },\n}\n\nexport default modifiersBase\n", "import type { Point, Listeners, OrBoolean, Element, Rect } from '@interactjs/core/types'\n\nexport interface Defaults {\n  base: BaseDefaults\n  perAction: PerActionDefaults\n  actions: ActionDefaults\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionDefaults {}\n\nexport interface BaseDefaults {\n  preventDefault?: 'always' | 'never' | 'auto'\n  deltaSource?: 'page' | 'client'\n  context?: Node\n  getRect?: (element: Element) => Rect\n}\n\nexport interface PerActionDefaults {\n  enabled?: boolean\n  origin?: Point | string | Element\n  listeners?: Listeners\n  allowFrom?: string | Element\n  ignoreFrom?: string | Element\n}\n\nexport type Options = Partial<BaseDefaults> &\n  Partial<PerActionDefaults> & {\n    [P in keyof ActionDefaults]?: Partial<ActionDefaults[P]>\n  }\n\nexport interface OptionsArg extends BaseDefaults, OrBoolean<Partial<ActionDefaults>> {}\n\nexport const defaults: Defaults = {\n  base: {\n    preventDefault: 'auto',\n    deltaSource: 'page',\n  },\n\n  perAction: {\n    enabled: false,\n    origin: { x: 0, y: 0 },\n  },\n\n  actions: {} as ActionDefaults,\n}\n", "import extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\n\nimport type { Point, FullRect, PointerEventType, Element, ActionName } from '@interactjs/core/types'\n\nimport { BaseEvent } from './BaseEvent'\nimport type { Interaction } from './Interaction'\nimport { defaults } from './options'\n\nexport type EventPhase = keyof PhaseMap\n\nexport interface PhaseMap {\n  start: true\n  move: true\n  end: true\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface InteractEvent {\n  pageX: number\n  pageY: number\n\n  clientX: number\n  clientY: number\n\n  dx: number\n  dy: number\n\n  velocityX: number\n  velocityY: number\n}\n\nexport class InteractEvent<\n  T extends ActionName = never,\n  P extends EventPhase = EventPhase,\n> extends BaseEvent<T> {\n  declare target: Element\n  declare currentTarget: Element\n  relatedTarget: Element | null = null\n  screenX?: number\n  screenY?: number\n  button: number\n  buttons: number\n  ctrlKey: boolean\n  shiftKey: boolean\n  altKey: boolean\n  metaKey: boolean\n  page: Point\n  client: Point\n  delta: Point\n  rect: FullRect\n  x0: number\n  y0: number\n  t0: number\n  dt: number\n  duration: number\n  clientX0: number\n  clientY0: number\n  velocity: Point\n  speed: number\n  swipe: ReturnType<InteractEvent<T>['getSwipe']>\n  // resize\n  axes?: 'x' | 'y' | 'xy'\n  /** @internal */\n  preEnd?: boolean\n\n  constructor(\n    interaction: Interaction<T>,\n    event: PointerEventType,\n    actionName: T,\n    phase: P,\n    element: Element,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    super(interaction)\n\n    element = element || interaction.element\n\n    const target = interaction.interactable\n    const deltaSource = (((target && target.options) || defaults) as any).deltaSource as 'page' | 'client'\n    const origin = getOriginXY(target, element, actionName)\n    const starting = phase === 'start'\n    const ending = phase === 'end'\n    const prevEvent = starting ? this : interaction.prevEvent\n    const coords = starting\n      ? interaction.coords.start\n      : ending\n        ? { page: prevEvent.page, client: prevEvent.client, timeStamp: interaction.coords.cur.timeStamp }\n        : interaction.coords.cur\n\n    this.page = extend({}, coords.page)\n    this.client = extend({}, coords.client)\n    this.rect = extend({}, interaction.rect)\n    this.timeStamp = coords.timeStamp\n\n    if (!ending) {\n      this.page.x -= origin.x\n      this.page.y -= origin.y\n\n      this.client.x -= origin.x\n      this.client.y -= origin.y\n    }\n\n    this.ctrlKey = event.ctrlKey\n    this.altKey = event.altKey\n    this.shiftKey = event.shiftKey\n    this.metaKey = event.metaKey\n    this.button = (event as MouseEvent).button\n    this.buttons = (event as MouseEvent).buttons\n    this.target = element\n    this.currentTarget = element\n    this.preEnd = preEnd\n    this.type = type || actionName + (phase || '')\n    this.interactable = target\n\n    this.t0 = starting ? interaction.pointers[interaction.pointers.length - 1].downTime : prevEvent.t0\n\n    this.x0 = interaction.coords.start.page.x - origin.x\n    this.y0 = interaction.coords.start.page.y - origin.y\n    this.clientX0 = interaction.coords.start.client.x - origin.x\n    this.clientY0 = interaction.coords.start.client.y - origin.y\n\n    if (starting || ending) {\n      this.delta = { x: 0, y: 0 }\n    } else {\n      this.delta = {\n        x: this[deltaSource].x - prevEvent[deltaSource].x,\n        y: this[deltaSource].y - prevEvent[deltaSource].y,\n      }\n    }\n\n    this.dt = interaction.coords.delta.timeStamp\n    this.duration = this.timeStamp - this.t0\n\n    // velocity and speed in pixels per second\n    this.velocity = extend({}, interaction.coords.velocity[deltaSource])\n    this.speed = hypot(this.velocity.x, this.velocity.y)\n\n    this.swipe = ending || phase === 'inertiastart' ? this.getSwipe() : null\n  }\n\n  getSwipe() {\n    const interaction = this._interaction\n\n    if (interaction.prevEvent.speed < 600 || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null\n    }\n\n    let angle = (180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX)) / Math.PI\n    const overlap = 22.5\n\n    if (angle < 0) {\n      angle += 360\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap\n    const up = 225 - overlap <= angle && angle < 315 + overlap\n\n    const right = !left && (315 - overlap <= angle || angle < 45 + overlap)\n    const down = !up && 45 - overlap <= angle && angle < 135 + overlap\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    }\n  }\n\n  preventDefault() {}\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation() {\n    this.propagationStopped = true\n  }\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperties(InteractEvent.prototype, {\n  pageX: {\n    get() {\n      return this.page.x\n    },\n    set(value) {\n      this.page.x = value\n    },\n  },\n  pageY: {\n    get() {\n      return this.page.y\n    },\n    set(value) {\n      this.page.y = value\n    },\n  },\n\n  clientX: {\n    get() {\n      return this.client.x\n    },\n    set(value) {\n      this.client.x = value\n    },\n  },\n  clientY: {\n    get() {\n      return this.client.y\n    },\n    set(value) {\n      this.client.y = value\n    },\n  },\n\n  dx: {\n    get() {\n      return this.delta.x\n    },\n    set(value) {\n      this.delta.x = value\n    },\n  },\n  dy: {\n    get() {\n      return this.delta.y\n    },\n    set(value) {\n      this.delta.y = value\n    },\n  },\n\n  velocityX: {\n    get() {\n      return this.velocity.x\n    },\n    set(value) {\n      this.velocity.x = value\n    },\n  },\n  velocityY: {\n    get() {\n      return this.velocity.y\n    },\n    set(value) {\n      this.velocity.y = value\n    },\n  },\n})\n", "import type { PointerEventType, PointerType } from '@interactjs/core/types'\n\nexport class PointerInfo {\n  id: number\n  pointer: PointerType\n  event: PointerEventType\n  downTime: number\n  downTarget: Node\n\n  constructor(id: number, pointer: PointerType, event: PointerEventType, downTime: number, downTarget: Node) {\n    this.id = id\n    this.pointer = pointer\n    this.event = event\n    this.downTime = downTime\n    this.downTarget = downTarget\n  }\n}\n", "import * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport hypot from '@interactjs/utils/hypot'\nimport { warnOnce, copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type {\n  Element,\n  EdgeOptions,\n  PointerEventType,\n  PointerType,\n  FullRect,\n  CoordsSet,\n  ActionName,\n  ActionProps,\n} from '@interactjs/core/types'\n\nimport type { Interactable } from './Interactable'\nimport type { EventPhase } from './InteractEvent'\nimport { InteractEvent } from './InteractEvent'\nimport type { ActionDefaults } from './options'\nimport { PointerInfo } from './PointerInfo'\nimport type { Scope } from './scope'\n\nexport enum _ProxyValues {\n  interactable = '',\n  element = '',\n  prepared = '',\n  pointerIsDown = '',\n  pointerWasMoved = '',\n  _proxy = '',\n}\n\nexport enum _ProxyMethods {\n  start = '',\n  move = '',\n  end = '',\n  stop = '',\n  interacting = '',\n}\n\nexport type PointerArgProps<T extends {} = {}> = {\n  pointer: PointerType\n  event: PointerEventType\n  eventTarget: Node\n  pointerIndex: number\n  pointerInfo: PointerInfo\n  interaction: Interaction<never>\n} & T\n\nexport interface DoPhaseArg<T extends ActionName, P extends EventPhase> {\n  event: PointerEventType\n  phase: EventPhase\n  interaction: Interaction<T>\n  iEvent: InteractEvent<T, P>\n  preEnd?: boolean\n  type?: string\n}\n\nexport type DoAnyPhaseArg = DoPhaseArg<ActionName, EventPhase>\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:new': { interaction: Interaction<ActionName> }\n    'interactions:down': PointerArgProps<{\n      type: 'down'\n    }>\n    'interactions:move': PointerArgProps<{\n      type: 'move'\n      dx: number\n      dy: number\n      duplicate: boolean\n    }>\n    'interactions:up': PointerArgProps<{\n      type: 'up'\n      curEventTarget: EventTarget\n    }>\n    'interactions:cancel': SignalArgs['interactions:up'] & {\n      type: 'cancel'\n      curEventTarget: EventTarget\n    }\n    'interactions:update-pointer': PointerArgProps<{\n      down: boolean\n    }>\n    'interactions:remove-pointer': PointerArgProps\n    'interactions:blur': { interaction: Interaction<never>; event: Event; type: 'blur' }\n    'interactions:before-action-start': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-start': DoAnyPhaseArg\n    'interactions:after-action-start': DoAnyPhaseArg\n    'interactions:before-action-move': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-move': DoAnyPhaseArg\n    'interactions:after-action-move': DoAnyPhaseArg\n    'interactions:before-action-end': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-end': DoAnyPhaseArg\n    'interactions:after-action-end': DoAnyPhaseArg\n    'interactions:stop': { interaction: Interaction }\n  }\n}\n\nexport type InteractionProxy<T extends ActionName | null = never> = Pick<\n  Interaction<T>,\n  keyof typeof _ProxyValues | keyof typeof _ProxyMethods\n>\n\nlet idCounter = 0\n\nexport class Interaction<T extends ActionName | null = ActionName> {\n  /** current interactable being interacted with */\n  interactable: Interactable | null = null\n\n  /** the target element of the interactable */\n  element: Element | null = null\n  rect: FullRect | null = null\n  /** @internal */\n  _rects?: {\n    start: FullRect\n    corrected: FullRect\n    previous: FullRect\n    delta: FullRect\n  }\n  /** @internal */\n  edges: EdgeOptions | null = null\n\n  /** @internal */\n  _scopeFire: Scope['fire']\n\n  // action that's ready to be fired on next move event\n  prepared: ActionProps<T> = {\n    name: null,\n    axis: null,\n    edges: null,\n  }\n\n  pointerType: string\n\n  /** @internal keep track of added pointers */\n  pointers: PointerInfo[] = []\n\n  /** @internal pointerdown/mousedown/touchstart event */\n  downEvent: PointerEventType | null = null\n\n  /** @internal */ downPointer: PointerType = {} as PointerType\n\n  /** @internal */\n  _latestPointer: {\n    pointer: PointerType\n    event: PointerEventType\n    eventTarget: Node\n  } = {\n    pointer: null,\n    event: null,\n    eventTarget: null,\n  }\n\n  /** @internal */ prevEvent: InteractEvent<T, EventPhase> = null\n\n  pointerIsDown = false\n  pointerWasMoved = false\n  /** @internal */ _interacting = false\n  /** @internal */ _ending = false\n  /** @internal */ _stopped = true\n  /** @internal */ _proxy: InteractionProxy<T>\n\n  /** @internal */ simulation = null\n\n  /** @internal */ get pointerMoveTolerance() {\n    return 1\n  }\n\n  doMove = warnOnce(function (this: Interaction, signalArg: any) {\n    this.move(signalArg)\n  }, 'The interaction.doMove() method has been renamed to interaction.move()')\n\n  coords: CoordsSet = {\n    // Starting InteractEvent pointer coordinates\n    start: pointerUtils.newCoords(),\n    // Previous native pointer move event coordinates\n    prev: pointerUtils.newCoords(),\n    // current native pointer move event coordinates\n    cur: pointerUtils.newCoords(),\n    // Change in coordinates and time of the pointer\n    delta: pointerUtils.newCoords(),\n    // pointer velocity\n    velocity: pointerUtils.newCoords(),\n  }\n\n  /** @internal */ readonly _id: number = idCounter++\n\n  constructor({ pointerType, scopeFire }: { pointerType?: string; scopeFire: Scope['fire'] }) {\n    this._scopeFire = scopeFire\n    this.pointerType = pointerType\n\n    const that = this\n\n    this._proxy = {} as InteractionProxy<T>\n\n    for (const key in _ProxyValues) {\n      Object.defineProperty(this._proxy, key, {\n        get() {\n          return that[key]\n        },\n      })\n    }\n\n    for (const key in _ProxyMethods) {\n      Object.defineProperty(this._proxy, key, {\n        value: (...args: any[]) => that[key](...args),\n      })\n    }\n\n    this._scopeFire('interactions:new', { interaction: this })\n  }\n\n  pointerDown(pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    const pointerIndex = this.updatePointer(pointer, event, eventTarget, true)\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      pointerInfo,\n      type: 'down',\n      interaction: this as unknown as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget)\n   *     }\n   * })\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param action - The action to be performed - drag, resize, etc.\n   * @param target - The Interactable to target\n   * @param element - The DOM Element to target\n   * @returns Whether the interaction was successfully started\n   */\n  start<A extends ActionName>(action: ActionProps<A>, interactable: Interactable, element: Element): boolean {\n    if (\n      this.interacting() ||\n      !this.pointerIsDown ||\n      this.pointers.length < (action.name === 'gesture' ? 2 : 1) ||\n      !interactable.options[action.name as keyof ActionDefaults].enabled\n    ) {\n      return false\n    }\n\n    copyAction(this.prepared, action)\n\n    this.interactable = interactable\n    this.element = element\n    this.rect = interactable.getRect(element)\n    this.edges = this.prepared.edges\n      ? extend({}, this.prepared.edges)\n      : { left: true, right: true, top: true, bottom: true }\n    this._stopped = false\n    this._interacting =\n      this._doPhase({\n        interaction: this,\n        event: this.downEvent,\n        phase: 'start',\n      }) && !this._stopped\n\n    return this._interacting\n  }\n\n  pointerMove(pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    if (!this.simulation && !(this.modification && this.modification.endResult)) {\n      this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const duplicateMove =\n      this.coords.cur.page.x === this.coords.prev.page.x &&\n      this.coords.cur.page.y === this.coords.prev.page.y &&\n      this.coords.cur.client.x === this.coords.prev.client.x &&\n      this.coords.cur.client.y === this.coords.prev.client.y\n\n    let dx: number\n    let dy: number\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.coords.cur.client.x - this.coords.start.client.x\n      dy = this.coords.cur.client.y - this.coords.start.client.y\n\n      this.pointerWasMoved = hypot(dx, dy) > this.pointerMoveTolerance\n    }\n\n    const pointerIndex = this.getPointerIndex(pointer)\n    const signalArg = {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      type: 'move' as const,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: this as unknown as Interaction<never>,\n    }\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and velocity\n      pointerUtils.setCoordVelocity(this.coords.velocity, this.coords.delta)\n    }\n\n    this._scopeFire('interactions:move', signalArg)\n\n    if (!duplicateMove && !this.simulation) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        signalArg.type = null\n        this.move(signalArg)\n      }\n\n      if (this.pointerWasMoved) {\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n      }\n    }\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }})\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.move()\n   *     }\n   *   })\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */\n  move(signalArg?: any) {\n    if (!signalArg || !signalArg.event) {\n      pointerUtils.setZeroCoords(this.coords.delta)\n    }\n\n    signalArg = extend(\n      {\n        pointer: this._latestPointer.pointer,\n        event: this._latestPointer.event,\n        eventTarget: this._latestPointer.eventTarget,\n        interaction: this,\n      },\n      signalArg || {},\n    )\n\n    signalArg.phase = 'move'\n\n    this._doPhase(signalArg)\n  }\n\n  /**\n   * @internal\n   * End interact move events and stop auto-scroll unless simulation is running\n   */\n  pointerUp(pointer: PointerType, event: PointerEventType, eventTarget: Node, curEventTarget: EventTarget) {\n    let pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) {\n      pointerIndex = this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const type = /cancel$/i.test(event.type) ? 'cancel' : 'up'\n\n    this._scopeFire(`interactions:${type}` as 'interactions:up' | 'interactions:cancel', {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      eventTarget,\n      type: type as any,\n      curEventTarget,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    if (!this.simulation) {\n      this.end(event)\n    }\n\n    this.removePointer(pointer, event)\n  }\n\n  /** @internal */\n  documentBlur(event: Event) {\n    this.end(event as any)\n    this._scopeFire('interactions:blur', {\n      event,\n      type: 'blur',\n      interaction: this as unknown as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end()\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation()\n   *     }\n   *   })\n   * ```\n   */\n  end(event?: PointerEventType) {\n    this._ending = true\n    event = event || this._latestPointer.event\n    let endPhaseResult: boolean\n\n    if (this.interacting()) {\n      endPhaseResult = this._doPhase({\n        event,\n        interaction: this,\n        phase: 'end',\n      })\n    }\n\n    this._ending = false\n\n    if (endPhaseResult === true) {\n      this.stop()\n    }\n  }\n\n  currentAction() {\n    return this._interacting ? this.prepared.name : null\n  }\n\n  interacting() {\n    return this._interacting\n  }\n\n  stop() {\n    this._scopeFire('interactions:stop', { interaction: this })\n\n    this.interactable = this.element = null\n\n    this._interacting = false\n    this._stopped = true\n    this.prepared.name = this.prevEvent = null\n  }\n\n  /** @internal */\n  getPointerIndex(pointer: any) {\n    const pointerId = pointerUtils.getPointerId(pointer)\n\n    // mouse and pen interactions may have only one pointer\n    return this.pointerType === 'mouse' || this.pointerType === 'pen'\n      ? this.pointers.length - 1\n      : arr.findIndex(this.pointers, (curPointer) => curPointer.id === pointerId)\n  }\n\n  /** @internal */\n  getPointerInfo(pointer: any) {\n    return this.pointers[this.getPointerIndex(pointer)]\n  }\n\n  /** @internal */\n  updatePointer(pointer: PointerType, event: PointerEventType, eventTarget: Node, down?: boolean) {\n    const id = pointerUtils.getPointerId(pointer)\n    let pointerIndex = this.getPointerIndex(pointer)\n    let pointerInfo = this.pointers[pointerIndex]\n\n    down = down === false ? false : down || /(down|start)$/i.test(event.type)\n\n    if (!pointerInfo) {\n      pointerInfo = new PointerInfo(id, pointer, event, null, null)\n\n      pointerIndex = this.pointers.length\n      this.pointers.push(pointerInfo)\n    } else {\n      pointerInfo.pointer = pointer\n    }\n\n    pointerUtils.setCoords(\n      this.coords.cur,\n      this.pointers.map((p) => p.pointer),\n      this._now(),\n    )\n    pointerUtils.setCoordDeltas(this.coords.delta, this.coords.prev, this.coords.cur)\n\n    if (down) {\n      this.pointerIsDown = true\n\n      pointerInfo.downTime = this.coords.cur.timeStamp\n      pointerInfo.downTarget = eventTarget\n      pointerUtils.pointerExtend(this.downPointer, pointer)\n\n      if (!this.interacting()) {\n        pointerUtils.copyCoords(this.coords.start, this.coords.cur)\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n\n        this.downEvent = event\n        this.pointerWasMoved = false\n      }\n    }\n\n    this._updateLatestPointer(pointer, event, eventTarget)\n\n    this._scopeFire('interactions:update-pointer', {\n      pointer,\n      event,\n      eventTarget,\n      down,\n      pointerInfo,\n      pointerIndex,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    return pointerIndex\n  }\n\n  /** @internal */\n  removePointer(pointer: PointerType, event: PointerEventType) {\n    const pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) return\n\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:remove-pointer', {\n      pointer,\n      event,\n      eventTarget: null,\n      pointerIndex,\n      pointerInfo,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    this.pointers.splice(pointerIndex, 1)\n    this.pointerIsDown = false\n  }\n\n  /** @internal */\n  _updateLatestPointer(pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    this._latestPointer.pointer = pointer\n    this._latestPointer.event = event\n    this._latestPointer.eventTarget = eventTarget\n  }\n\n  destroy() {\n    this._latestPointer.pointer = null\n    this._latestPointer.event = null\n    this._latestPointer.eventTarget = null\n  }\n\n  /** @internal */\n  _createPreparedEvent<P extends EventPhase>(\n    event: PointerEventType,\n    phase: P,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    return new InteractEvent<T, P>(this, event, this.prepared.name, phase, this.element, preEnd, type)\n  }\n\n  /** @internal */\n  _fireEvent<P extends EventPhase>(iEvent: InteractEvent<T, P>) {\n    this.interactable?.fire(iEvent)\n\n    if (!this.prevEvent || iEvent.timeStamp >= this.prevEvent.timeStamp) {\n      this.prevEvent = iEvent\n    }\n  }\n\n  /** @internal */\n  _doPhase<P extends EventPhase>(\n    signalArg: Omit<DoPhaseArg<T, P>, 'iEvent'> & { iEvent?: InteractEvent<T, P> },\n  ) {\n    const { event, phase, preEnd, type } = signalArg\n    const { rect } = this\n\n    if (rect && phase === 'move') {\n      // update the rect changes due to pointer move\n      rectUtils.addEdges(this.edges, rect, this.coords.delta[this.interactable.options.deltaSource])\n\n      rect.width = rect.right - rect.left\n      rect.height = rect.bottom - rect.top\n    }\n\n    const beforeResult = this._scopeFire(`interactions:before-action-${phase}` as any, signalArg)\n\n    if (beforeResult === false) {\n      return false\n    }\n\n    const iEvent = (signalArg.iEvent = this._createPreparedEvent(event, phase, preEnd, type))\n\n    this._scopeFire(`interactions:action-${phase}` as any, signalArg)\n\n    if (phase === 'start') {\n      this.prevEvent = iEvent\n    }\n\n    this._fireEvent(iEvent)\n\n    this._scopeFire(`interactions:after-action-${phase}` as any, signalArg)\n\n    return true\n  }\n\n  /** @internal */\n  _now() {\n    return Date.now()\n  }\n}\n\nexport default Interaction\nexport { PointerInfo }\n", "import type Interaction from '@interactjs/core/Interaction'\nimport { _ProxyMethods } from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\nimport type { Point } from '@interactjs/core/types'\nimport * as rectUtils from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    offsetBy?: typeof offsetBy\n    offset: {\n      total: Point\n      pending: Point\n    }\n  }\n\n  enum _ProxyMethods {\n    offsetBy = '',\n  }\n}\n\n;(_ProxyMethods as any).offsetBy = ''\n\nexport function addTotal(interaction: Interaction) {\n  if (!interaction.pointerIsDown) {\n    return\n  }\n\n  addToCoords(interaction.coords.cur, interaction.offset.total)\n\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nfunction beforeAction({ interaction }: { interaction: Interaction }) {\n  applyPending(interaction)\n}\n\nfunction beforeEnd({ interaction }: { interaction: Interaction }): boolean | void {\n  const hadPending = applyPending(interaction)\n\n  if (!hadPending) return\n\n  interaction.move({ offset: true })\n  interaction.end()\n\n  return false\n}\n\nfunction end({ interaction }: { interaction: Interaction }) {\n  interaction.offset.total.x = 0\n  interaction.offset.total.y = 0\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nexport function applyPending(interaction: Interaction) {\n  if (!hasPending(interaction)) {\n    return false\n  }\n\n  const { pending } = interaction.offset\n\n  addToCoords(interaction.coords.cur, pending)\n  addToCoords(interaction.coords.delta, pending)\n  rectUtils.addEdges(interaction.edges, interaction.rect, pending)\n\n  pending.x = 0\n  pending.y = 0\n\n  return true\n}\n\nfunction offsetBy(this: Interaction, { x, y }: Point) {\n  this.offset.pending.x += x\n  this.offset.pending.y += y\n\n  this.offset.total.x += x\n  this.offset.total.y += y\n}\n\nfunction addToCoords({ page, client }, { x, y }: Point) {\n  page.x += x\n  page.y += y\n  client.x += x\n  client.y += y\n}\n\nfunction hasPending(interaction: Interaction) {\n  return !!(interaction.offset.pending.x || interaction.offset.pending.y)\n}\n\nconst offset: Plugin = {\n  id: 'offset',\n  before: ['modifiers', 'pointer-events', 'actions', 'inertia'],\n  install(scope) {\n    scope.Interaction.prototype.offsetBy = offsetBy\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.offset = {\n        total: { x: 0, y: 0 },\n        pending: { x: 0, y: 0 },\n      }\n    },\n    'interactions:update-pointer': ({ interaction }) => addTotal(interaction),\n    'interactions:before-action-start': beforeAction,\n    'interactions:before-action-move': beforeAction,\n    'interactions:before-action-end': beforeEnd,\n    'interactions:stop': end,\n  },\n}\n\nexport default offset\n", "import type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, Point, PointerEventType } from '@interactjs/core/types'\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '@interactjs/modifiers/base'\nimport '@interactjs/offset/plugin'\nimport * as modifiers from '@interactjs/modifiers/base'\nimport { Modification } from '@interactjs/modifiers/Modification'\nimport type { ModifierArg } from '@interactjs/modifiers/types'\nimport offset from '@interactjs/offset/plugin'\n/* eslint-enable import/no-duplicates */\nimport * as dom from '@interactjs/utils/domUtils'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { copyCoords } from '@interactjs/utils/pointerUtils'\nimport raf from '@interactjs/utils/raf'\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    resume?: true\n    inertiastart?: true\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    inertia?: InertiaState\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    inertia?: {\n      enabled?: boolean\n      resistance?: number // the lambda in exponential decay\n      minSpeed?: number // target speed must be above this for inertia to start\n      endSpeed?: number // the speed at which inertia is slow enough to stop\n      allowResume?: true // allow resuming an action in inertia phase\n      smoothEndDuration?: number // animate to snap/restrict endOnly if there's no inertia\n    }\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-inertiastart': Omit<DoPhaseArg<ActionName, 'inertiastart'>, 'iEvent'>\n    'interactions:action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:after-action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:before-action-resume': Omit<DoPhaseArg<ActionName, 'resume'>, 'iEvent'>\n    'interactions:action-resume': DoPhaseArg<ActionName, 'resume'>\n    'interactions:after-action-resume': DoPhaseArg<ActionName, 'resume'>\n  }\n}\n\nfunction install(scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(offset)\n  scope.usePlugin(modifiers.default)\n  scope.actions.phases.inertiastart = true\n  scope.actions.phases.resume = true\n\n  defaults.perAction.inertia = {\n    enabled: false,\n    resistance: 10, // the lambda in exponential decay\n    minSpeed: 100, // target speed must be above this for inertia to start\n    endSpeed: 10, // the speed at which inertia is slow enough to stop\n    allowResume: true, // allow resuming an action in inertia phase\n    smoothEndDuration: 300, // animate to snap/restrict endOnly if there's no inertia\n  }\n}\n\nexport class InertiaState {\n  active = false\n  isModified = false\n  smoothEnd = false\n  allowResume = false\n\n  modification!: Modification\n  modifierCount = 0\n  modifierArg!: ModifierArg\n\n  startCoords!: Point\n  t0 = 0\n  v0 = 0\n\n  te = 0\n  targetOffset!: Point\n  modifiedOffset!: Point\n  currentOffset!: Point\n\n  lambda_v0? = 0 // eslint-disable-line camelcase\n  one_ve_v0? = 0 // eslint-disable-line camelcase\n  timeout!: number\n  readonly interaction: Interaction\n\n  constructor(interaction: Interaction) {\n    this.interaction = interaction\n  }\n\n  start(event: PointerEventType) {\n    const { interaction } = this\n    const options = getOptions(interaction)\n\n    if (!options || !options.enabled) {\n      return false\n    }\n\n    const { client: velocityClient } = interaction.coords.velocity\n    const pointerSpeed = hypot(velocityClient.x, velocityClient.y)\n    const modification = this.modification || (this.modification = new Modification(interaction))\n\n    modification.copyFrom(interaction.modification)\n\n    this.t0 = interaction._now()\n    this.allowResume = options.allowResume\n    this.v0 = pointerSpeed\n    this.currentOffset = { x: 0, y: 0 }\n    this.startCoords = interaction.coords.cur.page\n\n    this.modifierArg = modification.fillArg({\n      pageCoords: this.startCoords,\n      preEnd: true,\n      phase: 'inertiastart',\n    })\n\n    const thrown =\n      this.t0 - interaction.coords.cur.timeStamp < 50 &&\n      pointerSpeed > options.minSpeed &&\n      pointerSpeed > options.endSpeed\n\n    if (thrown) {\n      this.startInertia()\n    } else {\n      modification.result = modification.setAll(this.modifierArg)\n\n      if (!modification.result.changed) {\n        return false\n      }\n\n      this.startSmoothEnd()\n    }\n\n    // force modification change\n    interaction.modification.result.rect = null\n\n    // bring inertiastart event to the target coords\n    interaction.offsetBy(this.targetOffset)\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'inertiastart',\n    })\n    interaction.offsetBy({ x: -this.targetOffset.x, y: -this.targetOffset.y })\n    // force modification change\n    interaction.modification.result.rect = null\n\n    this.active = true\n    interaction.simulation = this\n\n    return true\n  }\n\n  startInertia() {\n    const startVelocity = this.interaction.coords.velocity.client\n    const options = getOptions(this.interaction)\n    const lambda = options.resistance\n    const inertiaDur = -Math.log(options.endSpeed / this.v0) / lambda\n\n    this.targetOffset = {\n      x: (startVelocity.x - inertiaDur) / lambda,\n      y: (startVelocity.y - inertiaDur) / lambda,\n    }\n\n    this.te = inertiaDur\n    this.lambda_v0 = lambda / this.v0\n    this.one_ve_v0 = 1 - options.endSpeed / this.v0\n\n    const { modification, modifierArg } = this\n\n    modifierArg.pageCoords = {\n      x: this.startCoords.x + this.targetOffset.x,\n      y: this.startCoords.y + this.targetOffset.y,\n    }\n\n    modification.result = modification.setAll(modifierArg)\n\n    if (modification.result.changed) {\n      this.isModified = true\n      this.modifiedOffset = {\n        x: this.targetOffset.x + modification.result.delta.x,\n        y: this.targetOffset.y + modification.result.delta.y,\n      }\n    }\n\n    this.onNextFrame(() => this.inertiaTick())\n  }\n\n  startSmoothEnd() {\n    this.smoothEnd = true\n    this.isModified = true\n    this.targetOffset = {\n      x: this.modification.result.delta.x,\n      y: this.modification.result.delta.y,\n    }\n\n    this.onNextFrame(() => this.smoothEndTick())\n  }\n\n  onNextFrame(tickFn: () => void) {\n    this.timeout = raf.request(() => {\n      if (this.active) {\n        tickFn()\n      }\n    })\n  }\n\n  inertiaTick() {\n    const { interaction } = this\n    const options = getOptions(interaction)\n    const lambda = options.resistance\n    const t = (interaction._now() - this.t0) / 1000\n\n    if (t < this.te) {\n      const progress = 1 - (Math.exp(-lambda * t) - this.lambda_v0) / this.one_ve_v0\n      let newOffset: Point\n\n      if (this.isModified) {\n        newOffset = getQuadraticCurvePoint(\n          0,\n          0,\n          this.targetOffset.x,\n          this.targetOffset.y,\n          this.modifiedOffset.x,\n          this.modifiedOffset.y,\n          progress,\n        )\n      } else {\n        newOffset = {\n          x: this.targetOffset.x * progress,\n          y: this.targetOffset.y * progress,\n        }\n      }\n\n      const delta = { x: newOffset.x - this.currentOffset.x, y: newOffset.y - this.currentOffset.y }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move()\n\n      this.onNextFrame(() => this.inertiaTick())\n    } else {\n      interaction.offsetBy({\n        x: this.modifiedOffset.x - this.currentOffset.x,\n        y: this.modifiedOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  smoothEndTick() {\n    const { interaction } = this\n    const t = interaction._now() - this.t0\n    const { smoothEndDuration: duration } = getOptions(interaction)\n\n    if (t < duration) {\n      const newOffset = {\n        x: easeOutQuad(t, 0, this.targetOffset.x, duration),\n        y: easeOutQuad(t, 0, this.targetOffset.y, duration),\n      }\n      const delta = {\n        x: newOffset.x - this.currentOffset.x,\n        y: newOffset.y - this.currentOffset.y,\n      }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move({ skipModifiers: this.modifierCount })\n\n      this.onNextFrame(() => this.smoothEndTick())\n    } else {\n      interaction.offsetBy({\n        x: this.targetOffset.x - this.currentOffset.x,\n        y: this.targetOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  resume({ pointer, event, eventTarget }: SignalArgs['interactions:down']) {\n    const { interaction } = this\n\n    // undo inertia changes to interaction coords\n    interaction.offsetBy({\n      x: -this.currentOffset.x,\n      y: -this.currentOffset.y,\n    })\n\n    // update pointer at pointer down position\n    interaction.updatePointer(pointer, event, eventTarget, true)\n\n    // fire resume signals and event\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'resume',\n    })\n    copyCoords(interaction.coords.prev, interaction.coords.cur)\n\n    this.stop()\n  }\n\n  end() {\n    this.interaction.move()\n    this.interaction.end()\n    this.stop()\n  }\n\n  stop() {\n    this.active = this.smoothEnd = false\n    this.interaction.simulation = null\n    raf.cancel(this.timeout)\n  }\n}\n\nfunction start({ interaction, event }: DoPhaseArg<ActionName, 'end'>) {\n  if (!interaction._interacting || interaction.simulation) {\n    return null\n  }\n\n  const started = interaction.inertia.start(event)\n\n  // prevent action end if inertia or smoothEnd\n  return started ? false : null\n}\n\n// Check if the down event hits the current inertia target\n// control should be return to the user\nfunction resume(arg: SignalArgs['interactions:down']) {\n  const { interaction, eventTarget } = arg\n  const state = interaction.inertia\n\n  if (!state.active) return\n\n  let element = eventTarget as Node\n\n  // climb up the DOM tree from the event target\n  while (is.element(element)) {\n    // if interaction element is the current inertia target element\n    if (element === interaction.element) {\n      state.resume(arg)\n      break\n    }\n\n    element = dom.parentNode(element)\n  }\n}\n\nfunction stop({ interaction }: { interaction: Interaction }) {\n  const state = interaction.inertia\n\n  if (state.active) {\n    state.stop()\n  }\n}\n\nfunction getOptions({ interactable, prepared }: Interaction) {\n  return interactable && interactable.options && prepared.name && interactable.options[prepared.name].inertia\n}\n\nconst inertia: Plugin = {\n  id: 'inertia',\n  before: ['modifiers', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.inertia = new InertiaState(interaction)\n    },\n\n    'interactions:before-action-end': start,\n    'interactions:down': resume,\n    'interactions:stop': stop,\n\n    'interactions:before-action-resume': (arg) => {\n      const { modification } = arg.interaction\n\n      modification.stop(arg)\n      modification.start(arg, arg.interaction.coords.cur.page)\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-inertiastart': (arg) => arg.interaction.modification.setAndApply(arg),\n    'interactions:action-resume': modifiers.addEventModifiers,\n    'interactions:action-inertiastart': modifiers.addEventModifiers,\n    'interactions:after-action-inertiastart': (arg) =>\n      arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-resume': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n  },\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nfunction _getQBezierValue(t: number, p1: number, p2: number, p3: number) {\n  const iT = 1 - t\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3\n}\n\nfunction getQuadraticCurvePoint(\n  startX: number,\n  startY: number,\n  cpX: number,\n  cpY: number,\n  endX: number,\n  endY: number,\n  position: number,\n) {\n  return {\n    x: _getQBezierValue(position, startX, cpX, endX),\n    y: _getQBezierValue(position, startY, cpY, endY),\n  }\n}\n\n// http://gizma.com/easing/\nfunction easeOutQuad(t: number, b: number, c: number, d: number) {\n  t /= d\n  return -c * t * (t - 2) + b\n}\n\nexport default inertia\n", "import * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport type { NormalizedListeners } from '@interactjs/utils/normalizeListeners'\nimport normalize from '@interactjs/utils/normalizeListeners'\n\nimport type { Listener, ListenersArg, Rect } from '@interactjs/core/types'\n\nfunction fireUntilImmediateStopped(event: any, listeners: Listener[]) {\n  for (const listener of listeners) {\n    if (event.immediatePropagationStopped) {\n      break\n    }\n\n    listener(event)\n  }\n}\n\nexport class Eventable {\n  options: any\n  types: NormalizedListeners = {}\n  propagationStopped = false\n  immediatePropagationStopped = false\n  global: any\n\n  constructor(options?: { [index: string]: any }) {\n    this.options = extend({}, options || {})\n  }\n\n  fire<T extends { type: string; propagationStopped?: boolean }>(event: T) {\n    let listeners: Listener[]\n    const global = this.global\n\n    // Interactable#on() listeners\n    // tslint:disable no-conditional-assignment\n    if ((listeners = this.types[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n  }\n\n  on(type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      this.types[type] = arr.merge(this.types[type] || [], listeners[type])\n    }\n  }\n\n  off(type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      const eventList = this.types[type]\n\n      if (!eventList || !eventList.length) {\n        continue\n      }\n\n      for (const subListener of listeners[type]) {\n        const index = eventList.indexOf(subListener)\n\n        if (index !== -1) {\n          eventList.splice(index, 1)\n        }\n      }\n    }\n  }\n\n  getRect(_element: Element): Rect {\n    return null\n  }\n}\n", "import * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport pExtend from '@interactjs/utils/pointerExtend'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Scope } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/core/types'\n\nimport type { NativeEventTarget } from './NativeTypes'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    events: ReturnType<typeof install>\n  }\n}\n\ninterface EventOptions {\n  capture: boolean\n  passive: boolean\n}\n\ntype PartialEventTarget = Partial<NativeEventTarget>\n\ntype ListenerEntry = { func: (event: Event | FakeEvent) => any; options: EventOptions }\n\nfunction install(scope: Scope) {\n  const targets: Array<{\n    eventTarget: PartialEventTarget\n    events: { [type: string]: ListenerEntry[] }\n  }> = []\n\n  const delegatedEvents: {\n    [type: string]: Array<{\n      selector: string\n      context: Node\n      listeners: ListenerEntry[]\n    }>\n  } = {}\n  const documents: Document[] = []\n\n  const eventsMethods = {\n    add,\n    remove,\n\n    addDelegate,\n    removeDelegate,\n\n    delegateListener,\n    delegateUseCapture,\n    delegatedEvents,\n    documents,\n\n    targets,\n\n    supportsOptions: false,\n    supportsPassive: false,\n  }\n\n  // check if browser supports passive events and options arg\n  scope.document?.createElement('div').addEventListener('test', null, {\n    get capture() {\n      return (eventsMethods.supportsOptions = true)\n    },\n    get passive() {\n      return (eventsMethods.supportsPassive = true)\n    },\n  })\n\n  scope.events = eventsMethods\n\n  function add(\n    eventTarget: PartialEventTarget,\n    type: string,\n    listener: ListenerEntry['func'],\n    optionalArg?: boolean | EventOptions,\n  ) {\n    if (!eventTarget.addEventListener) return\n\n    const options = getOptions(optionalArg)\n    let target = arr.find(targets, (t) => t.eventTarget === eventTarget)\n\n    if (!target) {\n      target = {\n        eventTarget,\n        events: {},\n      }\n\n      targets.push(target)\n    }\n\n    if (!target.events[type]) {\n      target.events[type] = []\n    }\n\n    if (!arr.find(target.events[type], (l) => l.func === listener && optionsMatch(l.options, options))) {\n      eventTarget.addEventListener(\n        type,\n        listener as any,\n        eventsMethods.supportsOptions ? options : options.capture,\n      )\n      target.events[type].push({ func: listener, options })\n    }\n  }\n\n  function remove(\n    eventTarget: PartialEventTarget,\n    type: string,\n    listener?: 'all' | ListenerEntry['func'],\n    optionalArg?: boolean | EventOptions,\n  ) {\n    if (!eventTarget.addEventListener || !eventTarget.removeEventListener) return\n\n    const targetIndex = arr.findIndex(targets, (t) => t.eventTarget === eventTarget)\n    const target = targets[targetIndex]\n\n    if (!target || !target.events) {\n      return\n    }\n\n    if (type === 'all') {\n      for (type in target.events) {\n        if (target.events.hasOwnProperty(type)) {\n          remove(eventTarget, type, 'all')\n        }\n      }\n      return\n    }\n\n    let typeIsEmpty = false\n    const typeListeners = target.events[type]\n\n    if (typeListeners) {\n      if (listener === 'all') {\n        for (let i = typeListeners.length - 1; i >= 0; i--) {\n          const entry = typeListeners[i]\n          remove(eventTarget, type, entry.func, entry.options)\n        }\n        return\n      } else {\n        const options = getOptions(optionalArg)\n\n        for (let i = 0; i < typeListeners.length; i++) {\n          const entry = typeListeners[i]\n          if (entry.func === listener && optionsMatch(entry.options, options)) {\n            eventTarget.removeEventListener(\n              type,\n              listener as any,\n              eventsMethods.supportsOptions ? options : options.capture,\n            )\n            typeListeners.splice(i, 1)\n\n            if (typeListeners.length === 0) {\n              delete target.events[type]\n              typeIsEmpty = true\n            }\n\n            break\n          }\n        }\n      }\n    }\n\n    if (typeIsEmpty && !Object.keys(target.events).length) {\n      targets.splice(targetIndex, 1)\n    }\n  }\n\n  function addDelegate(\n    selector: string,\n    context: Node,\n    type: string,\n    listener: ListenerEntry['func'],\n    optionalArg?: any,\n  ) {\n    const options = getOptions(optionalArg)\n    if (!delegatedEvents[type]) {\n      delegatedEvents[type] = []\n\n      // add delegate listener functions\n      for (const doc of documents) {\n        add(doc, type, delegateListener)\n        add(doc, type, delegateUseCapture, true)\n      }\n    }\n\n    const delegates = delegatedEvents[type]\n    let delegate = arr.find(delegates, (d) => d.selector === selector && d.context === context)\n\n    if (!delegate) {\n      delegate = { selector, context, listeners: [] }\n      delegates.push(delegate)\n    }\n\n    delegate.listeners.push({ func: listener, options })\n  }\n\n  function removeDelegate(\n    selector: string,\n    context: Document | Element,\n    type: string,\n    listener?: ListenerEntry['func'],\n    optionalArg?: any,\n  ) {\n    const options = getOptions(optionalArg)\n    const delegates = delegatedEvents[type]\n    let matchFound = false\n    let index: number\n\n    if (!delegates) return\n\n    // count from last index of delegated to 0\n    for (index = delegates.length - 1; index >= 0; index--) {\n      const cur = delegates[index]\n      // look for matching selector and context Node\n      if (cur.selector === selector && cur.context === context) {\n        const { listeners } = cur\n\n        // each item of the listeners array is an array: [function, capture, passive]\n        for (let i = listeners.length - 1; i >= 0; i--) {\n          const entry = listeners[i]\n\n          // check if the listener functions and capture and passive flags match\n          if (entry.func === listener && optionsMatch(entry.options, options)) {\n            // remove the listener from the array of listeners\n            listeners.splice(i, 1)\n\n            // if all listeners for this target have been removed\n            // remove the target from the delegates array\n            if (!listeners.length) {\n              delegates.splice(index, 1)\n\n              // remove delegate function from context\n              remove(context, type, delegateListener)\n              remove(context, type, delegateUseCapture, true)\n            }\n\n            // only remove one listener\n            matchFound = true\n            break\n          }\n        }\n\n        if (matchFound) {\n          break\n        }\n      }\n    }\n  }\n\n  // bound to the interactable context when a DOM event\n  // listener is added to a selector interactable\n  function delegateListener(event: Event | FakeEvent, optionalArg?: any) {\n    const options = getOptions(optionalArg)\n    const fakeEvent = new FakeEvent(event as Event)\n    const delegates = delegatedEvents[event.type]\n    const [eventTarget] = pointerUtils.getEventTargets(event as Event)\n    let element: Node = eventTarget\n\n    // climb up document tree looking for selector matches\n    while (is.element(element)) {\n      for (let i = 0; i < delegates.length; i++) {\n        const cur = delegates[i]\n        const { selector, context } = cur\n\n        if (\n          domUtils.matchesSelector(element, selector) &&\n          domUtils.nodeContains(context, eventTarget) &&\n          domUtils.nodeContains(context, element)\n        ) {\n          const { listeners } = cur\n\n          fakeEvent.currentTarget = element\n\n          for (const entry of listeners) {\n            if (optionsMatch(entry.options, options)) {\n              entry.func(fakeEvent)\n            }\n          }\n        }\n      }\n\n      element = domUtils.parentNode(element)\n    }\n  }\n\n  function delegateUseCapture(this: Element, event: Event | FakeEvent) {\n    return delegateListener.call(this, event, true)\n  }\n\n  // for type inferrence\n  return eventsMethods\n}\n\nclass FakeEvent implements Partial<Event> {\n  currentTarget: Node\n  originalEvent: Event\n  type: string\n\n  constructor(originalEvent: Event) {\n    this.originalEvent = originalEvent\n    // duplicate the event so that currentTarget can be changed\n    pExtend(this, originalEvent)\n  }\n\n  preventOriginalDefault() {\n    this.originalEvent.preventDefault()\n  }\n\n  stopPropagation() {\n    this.originalEvent.stopPropagation()\n  }\n\n  stopImmediatePropagation() {\n    this.originalEvent.stopImmediatePropagation()\n  }\n}\n\nfunction getOptions(param: { [index: string]: any } | boolean): { capture: boolean; passive: boolean } {\n  if (!is.object(param)) {\n    return { capture: !!param, passive: false }\n  }\n\n  return {\n    capture: !!param.capture,\n    passive: !!param.passive,\n  }\n}\n\nfunction optionsMatch(a: Partial<EventOptions> | boolean, b: Partial<EventOptions>) {\n  if (a === b) return true\n\n  if (typeof a === 'boolean') return !!b.capture === a && !!b.passive === false\n\n  return !!a.capture === !!b.capture && !!a.passive === !!b.passive\n}\n\nexport default {\n  id: 'events',\n  install,\n}\n", "import * as dom from '@interactjs/utils/domUtils'\n\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerType } from '@interactjs/core/types'\n\nexport interface SearchDetails {\n  pointer: PointerType\n  pointerId: number\n  pointerType: string\n  eventType: string\n  eventTarget: EventTarget\n  curEventTarget: EventTarget\n  scope: Scope\n}\n\nconst finder = {\n  methodOrder: ['simulationResume', 'mouseOrPen', 'hasPointer', 'idle'] as const,\n\n  search(details: SearchDetails) {\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details)\n\n      if (interaction) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume({ pointerType, eventType, eventTarget, scope }: SearchDetails) {\n    if (!/down|start/i.test(eventType)) {\n      return null\n    }\n\n    for (const interaction of scope.interactions.list) {\n      let element = eventTarget as Node\n\n      if (\n        interaction.simulation &&\n        interaction.simulation.allowResume &&\n        interaction.pointerType === pointerType\n      ) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction\n          }\n          element = dom.parentNode(element)\n        }\n      }\n    }\n\n    return null\n  },\n\n  // if it's a mouse or pen interaction\n  mouseOrPen({ pointerId, pointerType, eventType, scope }: SearchDetails) {\n    if (pointerType !== 'mouse' && pointerType !== 'pen') {\n      return null\n    }\n\n    let firstNonActive\n\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !hasPointerId(interaction, pointerId)) {\n          continue\n        }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive\n    }\n\n    // find any mouse or pen interaction.\n    // ignore the interaction if the eventType is a *down, and a simulation\n    // is active\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType && !(/down/i.test(eventType) && interaction.simulation)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get interaction that has this pointer\n  hasPointer({ pointerId, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      if (hasPointerId(interaction, pointerId)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get first idle interaction with a matching pointerType\n  idle({ pointerType, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      // if there's already a pointer held down\n      if (interaction.pointers.length === 1) {\n        const target = interaction.interactable\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !(target.options.gesture && target.options.gesture.enabled)) {\n          continue\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointers.length >= 2) {\n        continue\n      }\n\n      if (!interaction.interacting() && pointerType === interaction.pointerType) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n}\n\nfunction hasPointerId(interaction: Interaction, pointerId: number) {\n  return interaction.pointers.some(({ id }) => id === pointerId)\n}\n\nexport default finder\n", "import browser from '@interactjs/utils/browser'\nimport domObjects from '@interactjs/utils/domObjects'\nimport { nodeContains } from '@interactjs/utils/domUtils'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, Listener } from '@interactjs/core/types'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './interactablePreventDefault'\nimport interactablePreventDefault from './interactablePreventDefault'\nimport InteractionBase from './Interaction'\n/* eslint-enable import/no-duplicates */\nimport type { SearchDetails } from './interactionFinder'\nimport finder from './interactionFinder'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    Interaction: typeof InteractionBase\n    interactions: {\n      new: <T extends ActionName>(options: any) => InteractionBase<T>\n      list: Array<InteractionBase<ActionName>>\n      listeners: { [type: string]: Listener }\n      docEvents: Array<{ type: string; listener: Listener }>\n      pointerMoveTolerance: number\n    }\n    prevTouchTime: number\n  }\n\n  interface SignalArgs {\n    'interactions:find': {\n      interaction: InteractionBase\n      searchDetails: SearchDetails\n    }\n  }\n}\n\nconst methodNames = [\n  'pointerDown',\n  'pointerMove',\n  'pointerUp',\n  'updatePointer',\n  'removePointer',\n  'windowBlur',\n]\n\nfunction install(scope: Scope) {\n  const listeners = {} as any\n\n  for (const method of methodNames) {\n    listeners[method] = doOnInteractions(method, scope)\n  }\n\n  const pEventTypes = browser.pEventTypes\n  let docEvents: typeof scope.interactions.docEvents\n\n  if (domObjects.PointerEvent) {\n    docEvents = [\n      { type: pEventTypes.down, listener: releasePointersOnRemovedEls },\n      { type: pEventTypes.down, listener: listeners.pointerDown },\n      { type: pEventTypes.move, listener: listeners.pointerMove },\n      { type: pEventTypes.up, listener: listeners.pointerUp },\n      { type: pEventTypes.cancel, listener: listeners.pointerUp },\n    ]\n  } else {\n    docEvents = [\n      { type: 'mousedown', listener: listeners.pointerDown },\n      { type: 'mousemove', listener: listeners.pointerMove },\n      { type: 'mouseup', listener: listeners.pointerUp },\n\n      { type: 'touchstart', listener: releasePointersOnRemovedEls },\n      { type: 'touchstart', listener: listeners.pointerDown },\n      { type: 'touchmove', listener: listeners.pointerMove },\n      { type: 'touchend', listener: listeners.pointerUp },\n      { type: 'touchcancel', listener: listeners.pointerUp },\n    ]\n  }\n\n  docEvents.push({\n    type: 'blur',\n    listener(event) {\n      for (const interaction of scope.interactions.list) {\n        interaction.documentBlur(event)\n      }\n    },\n  })\n\n  // for ignoring browser's simulated mouse events\n  scope.prevTouchTime = 0\n\n  scope.Interaction = class<T extends ActionName> extends InteractionBase<T> {\n    get pointerMoveTolerance() {\n      return scope.interactions.pointerMoveTolerance\n    }\n\n    set pointerMoveTolerance(value) {\n      scope.interactions.pointerMoveTolerance = value\n    }\n\n    _now() {\n      return scope.now()\n    }\n  }\n\n  scope.interactions = {\n    // all active and idle interactions\n    list: [],\n    new<T extends ActionName>(options: { pointerType?: string; scopeFire?: Scope['fire'] }) {\n      options.scopeFire = (name, arg) => scope.fire(name, arg)\n\n      const interaction = new scope.Interaction<T>(options as Required<typeof options>)\n\n      scope.interactions.list.push(interaction)\n      return interaction\n    },\n    listeners,\n    docEvents,\n    pointerMoveTolerance: 1,\n  }\n\n  function releasePointersOnRemovedEls() {\n    // for all inactive touch interactions with pointers down\n    for (const interaction of scope.interactions.list) {\n      if (!interaction.pointerIsDown || interaction.pointerType !== 'touch' || interaction._interacting) {\n        continue\n      }\n\n      // if a pointer is down on an element that is no longer in the DOM tree\n      for (const pointer of interaction.pointers) {\n        if (!scope.documents.some(({ doc }) => nodeContains(doc, pointer.downTarget))) {\n          // remove the pointer from the interaction\n          interaction.removePointer(pointer.pointer, pointer.event)\n        }\n      }\n    }\n  }\n\n  scope.usePlugin(interactablePreventDefault)\n}\n\nfunction doOnInteractions(method: string, scope: Scope) {\n  return function (event: Event) {\n    const interactions = scope.interactions.list\n\n    const pointerType = pointerUtils.getPointerType(event)\n    const [eventTarget, curEventTarget] = pointerUtils.getEventTargets(event)\n    const matches: any[] = [] // [ [pointer, interaction], ...]\n\n    if (/^touch/.test(event.type)) {\n      scope.prevTouchTime = scope.now()\n\n      // @ts-expect-error\n      for (const changedTouch of event.changedTouches) {\n        const pointer = changedTouch\n        const pointerId = pointerUtils.getPointerId(pointer)\n        const searchDetails: SearchDetails = {\n          pointer,\n          pointerId,\n          pointerType,\n          eventType: event.type,\n          eventTarget,\n          curEventTarget,\n          scope,\n        }\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    } else {\n      let invalidPointer = false\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < interactions.length && !invalidPointer; i++) {\n          invalidPointer = interactions[i].pointerType !== 'mouse' && interactions[i].pointerIsDown\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer =\n          invalidPointer ||\n          scope.now() - scope.prevTouchTime < 500 ||\n          // on iOS and Firefox Mobile, MouseEvent.timeStamp is zero if simulated\n          event.timeStamp === 0\n      }\n\n      if (!invalidPointer) {\n        const searchDetails = {\n          pointer: event as PointerEvent,\n          pointerId: pointerUtils.getPointerId(event as PointerEvent),\n          pointerType,\n          eventType: event.type,\n          curEventTarget,\n          eventTarget,\n          scope,\n        }\n\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n\n    // eslint-disable-next-line no-shadow\n    for (const [pointer, eventTarget, curEventTarget, interaction] of matches) {\n      interaction[method](pointer, event, eventTarget, curEventTarget)\n    }\n  }\n}\n\nfunction getInteraction(searchDetails: SearchDetails) {\n  const { pointerType, scope } = searchDetails\n\n  const foundInteraction = finder.search(searchDetails)\n  const signalArg = { interaction: foundInteraction, searchDetails }\n\n  scope.fire('interactions:find', signalArg)\n\n  return signalArg.interaction || scope.interactions.new({ pointerType })\n}\n\nfunction onDocSignal<T extends 'scope:add-document' | 'scope:remove-document'>(\n  { doc, scope, options }: SignalArgs[T],\n  eventMethodName: 'add' | 'remove',\n) {\n  const {\n    interactions: { docEvents },\n    events,\n  } = scope\n  const eventMethod = events[eventMethodName]\n\n  if (scope.browser.isIOS && !options.events) {\n    options.events = { passive: false }\n  }\n\n  // delegate event listener\n  for (const eventType in events.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener)\n    eventMethod(doc, eventType, events.delegateUseCapture, true)\n  }\n\n  const eventOptions = options && options.events\n\n  for (const { type, listener } of docEvents) {\n    eventMethod(doc, type, listener, eventOptions)\n  }\n}\n\nconst interactions: Plugin = {\n  id: 'core/interactions',\n  install,\n  listeners: {\n    'scope:add-document': (arg) => onDocSignal(arg, 'add'),\n    'scope:remove-document': (arg) => onDocSignal(arg, 'remove'),\n    'interactable:unset': ({ interactable }, scope) => {\n      // Stop and destroy related interactions when an Interactable is unset\n      for (let i = scope.interactions.list.length - 1; i >= 0; i--) {\n        const interaction = scope.interactions.list[i]\n\n        if (interaction.interactable !== interactable) {\n          continue\n        }\n\n        interaction.stop()\n        scope.fire('interactions:destroy', { interaction })\n        interaction.destroy()\n\n        if (scope.interactions.list.length > 2) {\n          scope.interactions.list.splice(i, 1)\n        }\n      }\n    },\n  },\n  onDocSignal,\n  doOnInteractions,\n  methodNames,\n}\n\nexport default interactions\n", "/* eslint-disable no-dupe-class-members */\nimport * as arr from '@interactjs/utils/arr'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport { getElementRect, matchesUpTo, nodeContains, trySelector } from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport isNonNativeEvent from '@interactjs/utils/isNonNativeEvent'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport { getWindow } from '@interactjs/utils/window'\n\nimport type { Scope } from '@interactjs/core/scope'\nimport type {\n  ActionMap,\n  ActionMethod,\n  ActionName,\n  Actions,\n  Context,\n  Element,\n  EventTypes,\n  Listeners,\n  ListenersArg,\n  OrBoolean,\n  Target,\n} from '@interactjs/core/types'\n\nimport { Eventable } from './Eventable'\nimport type { ActionDefaults, Defaults, OptionsArg, PerActionDefaults, Options } from './options'\n\ntype IgnoreValue = string | Element | boolean\ntype DeltaSource = 'page' | 'client'\n\nconst enum OnOffMethod {\n  On,\n  Off,\n}\n\n/**\n * ```ts\n * const interactable = interact('.cards')\n *   .draggable({\n *     listeners: { move: event => console.log(event.type, event.pageX, event.pageY) }\n *   })\n *   .resizable({\n *     listeners: { move: event => console.log(event.rect) },\n *     modifiers: [interact.modifiers.restrictEdges({ outer: 'parent' })]\n *   })\n * ```\n */\nexport class Interactable implements Partial<Eventable> {\n  /** @internal */ get _defaults(): Defaults {\n    return {\n      base: {},\n      perAction: {},\n      actions: {} as ActionDefaults,\n    }\n  }\n\n  readonly target: Target\n  /** @internal */ readonly options!: Required<Options>\n  /** @internal */ readonly _actions: Actions\n  /** @internal */ readonly events = new Eventable()\n  /** @internal */ readonly _context: Context\n  /** @internal */ readonly _win: Window\n  /** @internal */ readonly _doc: Document\n  /** @internal */ readonly _scopeEvents: Scope['events']\n\n  constructor(\n    target: Target,\n    options: any,\n    defaultContext: Document | Element,\n    scopeEvents: Scope['events'],\n  ) {\n    this._actions = options.actions\n    this.target = target\n    this._context = options.context || defaultContext\n    this._win = getWindow(trySelector(target) ? this._context : target)\n    this._doc = this._win.document\n    this._scopeEvents = scopeEvents\n\n    this.set(options)\n  }\n\n  setOnEvents(actionName: ActionName, phases: NonNullable<any>) {\n    if (is.func(phases.onstart)) {\n      this.on(`${actionName}start`, phases.onstart)\n    }\n    if (is.func(phases.onmove)) {\n      this.on(`${actionName}move`, phases.onmove)\n    }\n    if (is.func(phases.onend)) {\n      this.on(`${actionName}end`, phases.onend)\n    }\n    if (is.func(phases.oninertiastart)) {\n      this.on(`${actionName}inertiastart`, phases.oninertiastart)\n    }\n\n    return this\n  }\n\n  updatePerActionListeners(actionName: ActionName, prev: Listeners | undefined, cur: Listeners | undefined) {\n    const actionFilter = (this._actions.map[actionName] as { filterEventType?: (type: string) => boolean })\n      ?.filterEventType\n    const filter = (type: string) =>\n      (actionFilter == null || actionFilter(type)) && isNonNativeEvent(type, this._actions)\n\n    if (is.array(prev) || is.object(prev)) {\n      this._onOff(OnOffMethod.Off, actionName, prev, undefined, filter)\n    }\n\n    if (is.array(cur) || is.object(cur)) {\n      this._onOff(OnOffMethod.On, actionName, cur, undefined, filter)\n    }\n  }\n\n  setPerAction(actionName: ActionName, options: OrBoolean<Options>) {\n    const defaults = this._defaults\n\n    // for all the default per-action options\n    for (const optionName_ in options) {\n      const optionName = optionName_ as keyof PerActionDefaults\n      const actionOptions = this.options[actionName]\n      const optionValue: any = options[optionName]\n\n      // remove old event listeners and add new ones\n      if (optionName === 'listeners') {\n        this.updatePerActionListeners(actionName, actionOptions.listeners, optionValue as Listeners)\n      }\n\n      // if the option value is an array\n      if (is.array(optionValue)) {\n        ;(actionOptions[optionName] as any) = arr.from(optionValue)\n      }\n      // if the option value is an object\n      else if (is.plainObject(optionValue)) {\n        // copy the object\n        ;(actionOptions[optionName] as any) = extend(\n          actionOptions[optionName] || ({} as any),\n          clone(optionValue),\n        )\n\n        // set anabled field to true if it exists in the defaults\n        if (\n          is.object(defaults.perAction[optionName]) &&\n          'enabled' in (defaults.perAction[optionName] as any)\n        ) {\n          ;(actionOptions[optionName] as any).enabled = optionValue.enabled !== false\n        }\n      }\n      // if the option value is a boolean and the default is an object\n      else if (is.bool(optionValue) && is.object(defaults.perAction[optionName])) {\n        ;(actionOptions[optionName] as any).enabled = optionValue\n      }\n      // if it's anything else, do a plain assignment\n      else {\n        ;(actionOptions[optionName] as any) = optionValue\n      }\n    }\n  }\n\n  /**\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using {@link Interactable.rectChecker}.\n   *\n   * @param {Element} [element] The element to measure.\n   * @return {Rect} The object's bounding rectangle.\n   */\n  getRect(element: Element) {\n    element = element || (is.element(this.target) ? this.target : null)\n\n    if (is.string(this.target)) {\n      element = element || this._context.querySelector(this.target)\n    }\n\n    return getElementRect(element)\n  }\n\n  /**\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   * @param {function} [checker] A function which returns this Interactable's\n   * bounding rectangle. See {@link Interactable.getRect}\n   * @return {function | object} The checker function or this Interactable\n   */\n  rectChecker(): (element: Element) => any | null\n  rectChecker(checker: (element: Element) => any): this\n  rectChecker(checker?: (element: Element) => any) {\n    if (is.func(checker)) {\n      this.getRect = (element) => {\n        const rect = extend({}, checker.apply(this, element))\n\n        if (!(('width' in rect) as unknown)) {\n          rect.width = rect.right - rect.left\n          rect.height = rect.bottom - rect.top\n        }\n\n        return rect\n      }\n\n      return this\n    }\n\n    if (checker === null) {\n      delete (this as Partial<typeof this>).getRect\n\n      return this\n    }\n\n    return this.getRect\n  }\n\n  /** @internal */\n  _backCompatOption(optionName: keyof Options, newValue: any) {\n    if (trySelector(newValue) || is.object(newValue)) {\n      ;(this.options[optionName] as any) = newValue\n\n      for (const action in this._actions.map) {\n        ;(this.options[action as keyof ActionMap] as any)[optionName] = newValue\n      }\n\n      return this\n    }\n\n    return this.options[optionName]\n  }\n\n  /**\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\n   * rect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\n   * or any CSS selector\n   *\n   * @return {object} The current origin or this Interactable\n   */\n  origin(newValue: any) {\n    return this._backCompatOption('origin', newValue)\n  }\n\n  /**\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   * @param {string} [newValue] Use 'client' if you will be scrolling while\n   * interacting; Use 'page' if you want autoScroll to work\n   * @return {string | object} The current deltaSource or this Interactable\n   */\n  deltaSource(): DeltaSource\n  deltaSource(newValue: DeltaSource): this\n  deltaSource(newValue?: DeltaSource) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue\n\n      return this\n    }\n\n    return this.options.deltaSource\n  }\n\n  /** @internal */\n  getAllElements(): Element[] {\n    const { target } = this\n\n    if (is.string(target)) {\n      return Array.from(this._context.querySelectorAll(target))\n    }\n\n    if (is.func(target) && (target as any).getAllElements) {\n      return (target as any).getAllElements()\n    }\n\n    return is.element(target) ? [target] : []\n  }\n\n  /**\n   * Gets the selector context Node of the Interactable. The default is\n   * `window.document`.\n   *\n   * @return {Node} The context Node of this Interactable\n   */\n  context() {\n    return this._context\n  }\n\n  inContext(element: Document | Node) {\n    return this._context === element.ownerDocument || nodeContains(this._context, element)\n  }\n\n  /** @internal */\n  testIgnoreAllow(\n    this: Interactable,\n    options: { ignoreFrom?: IgnoreValue; allowFrom?: IgnoreValue },\n    targetNode: Node,\n    eventTarget: Node,\n  ) {\n    return (\n      !this.testIgnore(options.ignoreFrom, targetNode, eventTarget) &&\n      this.testAllow(options.allowFrom, targetNode, eventTarget)\n    )\n  }\n\n  /** @internal */\n  testAllow(this: Interactable, allowFrom: IgnoreValue | undefined, targetNode: Node, element: Node) {\n    if (!allowFrom) {\n      return true\n    }\n\n    if (!is.element(element)) {\n      return false\n    }\n\n    if (is.string(allowFrom)) {\n      return matchesUpTo(element, allowFrom, targetNode)\n    } else if (is.element(allowFrom)) {\n      return nodeContains(allowFrom, element)\n    }\n\n    return false\n  }\n\n  /** @internal */\n  testIgnore(this: Interactable, ignoreFrom: IgnoreValue | undefined, targetNode: Node, element: Node) {\n    if (!ignoreFrom || !is.element(element)) {\n      return false\n    }\n\n    if (is.string(ignoreFrom)) {\n      return matchesUpTo(element, ignoreFrom, targetNode)\n    } else if (is.element(ignoreFrom)) {\n      return nodeContains(ignoreFrom, element)\n    }\n\n    return false\n  }\n\n  /**\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\n   * Interactable\n   * @return {Interactable} this Interactable\n   */\n  fire<E extends { type: string }>(iEvent: E) {\n    this.events.fire(iEvent)\n\n    return this\n  }\n\n  /** @internal */\n  _onOff(\n    method: OnOffMethod,\n    typeArg: EventTypes,\n    listenerArg?: ListenersArg | null,\n    options?: any,\n    filter?: (type: string) => boolean,\n  ) {\n    if (is.object(typeArg) && !is.array(typeArg)) {\n      options = listenerArg\n      listenerArg = null\n    }\n\n    const listeners = normalizeListeners(typeArg, listenerArg, filter)\n\n    for (let type in listeners) {\n      if (type === 'wheel') {\n        type = browser.wheelEvent\n      }\n\n      for (const listener of listeners[type]) {\n        // if it is an action event type\n        if (isNonNativeEvent(type, this._actions)) {\n          this.events[method === OnOffMethod.On ? 'on' : 'off'](type, listener)\n        }\n        // delegated event\n        else if (is.string(this.target)) {\n          this._scopeEvents[method === OnOffMethod.On ? 'addDelegate' : 'removeDelegate'](\n            this.target,\n            this._context,\n            type,\n            listener,\n            options,\n          )\n        }\n        // remove listener from this Interactable's element\n        else {\n          this._scopeEvents[method === OnOffMethod.On ? 'add' : 'remove'](\n            this.target,\n            type,\n            listener,\n            options,\n          )\n        }\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   * @param {string | array | object} types The types of events to listen\n   * for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * addEventListener\n   * @return {Interactable} This Interactable\n   */\n  on(types: EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff(OnOffMethod.On, types, listener, options)\n  }\n\n  /**\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\n   *\n   * @param {string | array | object} types The types of events that were\n   * listened for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * removeEventListener\n   * @return {Interactable} This Interactable\n   */\n  off(types: string | string[] | EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff(OnOffMethod.Off, types, listener, options)\n  }\n\n  /**\n   * Reset the options of this Interactable\n   *\n   * @param {object} options The new settings to apply\n   * @return {object} This Interactable\n   */\n  set(options: OptionsArg) {\n    const defaults = this._defaults\n\n    if (!is.object(options)) {\n      options = {}\n    }\n\n    ;(this.options as Required<Options>) = clone(defaults.base) as Required<Options>\n\n    for (const actionName_ in this._actions.methodDict) {\n      const actionName = actionName_ as ActionName\n      const methodName = this._actions.methodDict[actionName]\n\n      this.options[actionName] = {}\n      this.setPerAction(actionName, extend(extend({}, defaults.perAction), defaults.actions[actionName]))\n      ;(this[methodName] as ActionMethod<unknown>)(options[actionName])\n    }\n\n    for (const setting in options) {\n      if (setting === 'getRect') {\n        this.rectChecker(options.getRect)\n        continue\n      }\n\n      if (is.func((this as any)[setting])) {\n        ;(this as any)[setting](options[setting as keyof typeof options])\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Remove this interactable from the list of interactables and remove it's\n   * action capabilities and event listeners\n   */\n  unset() {\n    if (is.string(this.target)) {\n      // remove delegated events\n      for (const type in this._scopeEvents.delegatedEvents) {\n        const delegated = this._scopeEvents.delegatedEvents[type]\n\n        for (let i = delegated.length - 1; i >= 0; i--) {\n          const { selector, context, listeners } = delegated[i]\n\n          if (selector === this.target && context === this._context) {\n            delegated.splice(i, 1)\n          }\n\n          for (let l = listeners.length - 1; l >= 0; l--) {\n            this._scopeEvents.removeDelegate(\n              this.target,\n              this._context,\n              type,\n              listeners[l][0],\n              listeners[l][1],\n            )\n          }\n        }\n      }\n    } else {\n      this._scopeEvents.remove(this.target, 'all')\n    }\n  }\n}\n", "import * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { OptionsArg, Options } from '@interactjs/core/options'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { Target } from '@interactjs/core/types'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactable:new': {\n      interactable: Interactable\n      target: Target\n      options: OptionsArg\n      win: Window\n    }\n  }\n}\n\nexport class InteractableSet {\n  // all set interactables\n  list: Interactable[] = []\n\n  selectorMap: {\n    [selector: string]: Interactable[]\n  } = {}\n\n  scope: Scope\n\n  constructor(scope: Scope) {\n    this.scope = scope\n    scope.addListeners({\n      'interactable:unset': ({ interactable }) => {\n        const { target } = interactable\n        const interactablesOnTarget: Interactable[] = is.string(target)\n          ? this.selectorMap[target]\n          : (target as any)[this.scope.id]\n\n        const targetIndex = arr.findIndex(interactablesOnTarget, (i) => i === interactable)\n        interactablesOnTarget.splice(targetIndex, 1)\n      },\n    })\n  }\n\n  new(target: Target, options?: any): Interactable {\n    options = extend(options || {}, {\n      actions: this.scope.actions,\n    })\n    const interactable = new this.scope.Interactable(target, options, this.scope.document, this.scope.events)\n\n    this.scope.addDocument(interactable._doc)\n    this.list.push(interactable)\n\n    if (is.string(target)) {\n      if (!this.selectorMap[target]) {\n        this.selectorMap[target] = []\n      }\n      this.selectorMap[target].push(interactable)\n    } else {\n      if (!(interactable.target as any)[this.scope.id]) {\n        Object.defineProperty(target, this.scope.id, {\n          value: [],\n          configurable: true,\n        })\n      }\n\n      ;(target as any)[this.scope.id].push(interactable)\n    }\n\n    this.scope.fire('interactable:new', {\n      target,\n      options,\n      interactable,\n      win: this.scope._win,\n    })\n\n    return interactable\n  }\n\n  getExisting(target: Target, options?: Options) {\n    const context = (options && options.context) || this.scope.document\n    const isSelector = is.string(target)\n    const interactablesOnTarget: Interactable[] = isSelector\n      ? this.selectorMap[target as string]\n      : (target as any)[this.scope.id]\n\n    if (!interactablesOnTarget) return undefined\n\n    return arr.find(\n      interactablesOnTarget,\n      (interactable) =>\n        interactable._context === context && (isSelector || interactable.inContext(target as any)),\n    )\n  }\n\n  forEachMatch<T>(node: Node, callback: (interactable: Interactable) => T): T | void {\n    for (const interactable of this.list) {\n      let ret: T\n\n      if (\n        (is.string(interactable.target)\n          ? // target is a selector and the element matches\n            is.element(node) && domUtils.matchesSelector(node, interactable.target)\n          : // target is the element\n            node === interactable.target) &&\n        // the element is in context\n        interactable.inContext(node)\n      ) {\n        ret = callback(interactable)\n      }\n\n      if (ret !== undefined) {\n        return ret\n      }\n    }\n  }\n}\n", "import browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport domObjects from '@interactjs/utils/domObjects'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport * as win from '@interactjs/utils/window'\n\nimport type Interaction from '@interactjs/core/Interaction'\n\nimport { Eventable } from './Eventable'\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './events'\nimport './interactions'\nimport events from './events'\nimport { Interactable as InteractableBase } from './Interactable'\nimport { InteractableSet } from './InteractableSet'\nimport { InteractEvent } from './InteractEvent'\nimport interactions from './interactions'\n/* eslint-enable import/no-duplicates */\nimport { createInteractStatic } from './InteractStatic'\nimport type { OptionsArg } from './options'\nimport { defaults } from './options'\nimport type { Actions } from './types'\n\nexport interface SignalArgs {\n  'scope:add-document': DocSignalArg\n  'scope:remove-document': DocSignalArg\n  'interactable:unset': { interactable: InteractableBase }\n  'interactable:set': { interactable: InteractableBase; options: OptionsArg }\n  'interactions:destroy': { interaction: Interaction }\n}\n\nexport type ListenerName = keyof SignalArgs\n\nexport type ListenerMap = {\n  [P in ListenerName]?: (arg: SignalArgs[P], scope: Scope, signalName: P) => void | boolean\n}\n\ninterface DocSignalArg {\n  doc: Document\n  window: Window\n  scope: Scope\n  options: Record<string, any>\n}\n\n/** @internal */\nexport interface Plugin {\n  [key: string]: any\n  id?: string\n  listeners?: ListenerMap\n  before?: string[]\n  install?(scope: Scope, options?: any): void\n}\n\n/** @internal */\nexport class Scope {\n  id = `__interact_scope_${Math.floor(Math.random() * 100)}`\n  isInitialized = false\n  listenerMaps: Array<{\n    map: ListenerMap\n    id?: string\n  }> = []\n\n  browser = browser\n  defaults = clone(defaults) as typeof defaults\n  Eventable = Eventable\n  actions: Actions = {\n    map: {},\n    phases: {\n      start: true,\n      move: true,\n      end: true,\n    },\n    methodDict: {} as any,\n    phaselessTypes: {},\n  }\n\n  interactStatic = createInteractStatic(this)\n  InteractEvent = InteractEvent\n  Interactable: typeof InteractableBase\n  interactables = new InteractableSet(this)\n\n  // main window\n  _win!: Window\n\n  // main document\n  document!: Document\n\n  // main window\n  window!: Window\n\n  // all documents being listened to\n  documents: Array<{ doc: Document; options: any }> = []\n\n  _plugins: {\n    list: Plugin[]\n    map: { [id: string]: Plugin }\n  } = {\n    list: [],\n    map: {},\n  }\n\n  constructor() {\n    const scope = this\n\n    this.Interactable = class extends InteractableBase {\n      get _defaults() {\n        return scope.defaults\n      }\n\n      set<T extends InteractableBase>(this: T, options: OptionsArg) {\n        super.set(options)\n\n        scope.fire('interactable:set', {\n          options,\n          interactable: this,\n        })\n\n        return this\n      }\n\n      unset(this: InteractableBase) {\n        super.unset()\n\n        const index = scope.interactables.list.indexOf(this)\n        if (index < 0) return\n\n        scope.interactables.list.splice(index, 1)\n        scope.fire('interactable:unset', { interactable: this })\n      }\n    }\n  }\n\n  addListeners(map: ListenerMap, id?: string) {\n    this.listenerMaps.push({ id, map })\n  }\n\n  fire<T extends ListenerName>(name: T, arg: SignalArgs[T]): void | false {\n    for (const {\n      map: { [name]: listener },\n    } of this.listenerMaps) {\n      if (!!listener && listener(arg as any, this, name as never) === false) {\n        return false\n      }\n    }\n  }\n\n  onWindowUnload = (event: BeforeUnloadEvent) => this.removeDocument(event.target as Document)\n\n  init(window: Window | typeof globalThis) {\n    return this.isInitialized ? this : initScope(this, window)\n  }\n\n  pluginIsInstalled(plugin: Plugin) {\n    const { id } = plugin\n    return id ? !!this._plugins.map[id] : this._plugins.list.indexOf(plugin) !== -1\n  }\n\n  usePlugin(plugin: Plugin, options?: { [key: string]: any }) {\n    if (!this.isInitialized) {\n      return this\n    }\n\n    if (this.pluginIsInstalled(plugin)) {\n      return this\n    }\n\n    if (plugin.id) {\n      this._plugins.map[plugin.id] = plugin\n    }\n    this._plugins.list.push(plugin)\n\n    if (plugin.install) {\n      plugin.install(this, options)\n    }\n\n    if (plugin.listeners && plugin.before) {\n      let index = 0\n      const len = this.listenerMaps.length\n      const before = plugin.before.reduce((acc, id) => {\n        acc[id] = true\n        acc[pluginIdRoot(id)] = true\n        return acc\n      }, {})\n\n      for (; index < len; index++) {\n        const otherId = this.listenerMaps[index].id\n\n        if (otherId && (before[otherId] || before[pluginIdRoot(otherId)])) {\n          break\n        }\n      }\n\n      this.listenerMaps.splice(index, 0, { id: plugin.id, map: plugin.listeners })\n    } else if (plugin.listeners) {\n      this.listenerMaps.push({ id: plugin.id, map: plugin.listeners })\n    }\n\n    return this\n  }\n\n  addDocument(doc: Document, options?: any): void | false {\n    // do nothing if document is already known\n    if (this.getDocIndex(doc) !== -1) {\n      return false\n    }\n\n    const window = win.getWindow(doc)\n\n    options = options ? extend({}, options) : {}\n\n    this.documents.push({ doc, options })\n    this.events.documents.push(doc)\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== this.document) {\n      this.events.add(window, 'unload', this.onWindowUnload)\n    }\n\n    this.fire('scope:add-document', { doc, window, scope: this, options })\n  }\n\n  removeDocument(doc: Document) {\n    const index = this.getDocIndex(doc)\n\n    const window = win.getWindow(doc)\n    const options = this.documents[index].options\n\n    this.events.remove(window, 'unload', this.onWindowUnload)\n\n    this.documents.splice(index, 1)\n    this.events.documents.splice(index, 1)\n\n    this.fire('scope:remove-document', { doc, window, scope: this, options })\n  }\n\n  getDocIndex(doc: Document) {\n    for (let i = 0; i < this.documents.length; i++) {\n      if (this.documents[i].doc === doc) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getDocOptions(doc: Document) {\n    const docIndex = this.getDocIndex(doc)\n\n    return docIndex === -1 ? null : this.documents[docIndex].options\n  }\n\n  now() {\n    return (((this.window as any).Date as typeof Date) || Date).now()\n  }\n}\n\n/** @internal */\nexport function initScope(scope: Scope, window: Window | typeof globalThis) {\n  scope.isInitialized = true\n\n  if (is.window(window)) {\n    win.init(window)\n  }\n\n  domObjects.init(window)\n  browser.init(window)\n  raf.init(window)\n\n  // @ts-expect-error\n  scope.window = window\n  scope.document = window.document\n\n  scope.usePlugin(interactions)\n  scope.usePlugin(events)\n\n  return scope\n}\n\nfunction pluginIdRoot(id: string) {\n  return id && id.replace(/\\/.*$/, '')\n}\n", "import browser from '@interactjs/utils/browser'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport isNonNativeEvent from '@interactjs/utils/isNonNativeEvent'\nimport { warnOnce } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Context, EventTypes, Listener, ListenersArg, Target } from '@interactjs/core/types'\n\nimport type { Interactable } from './Interactable'\nimport type { Options } from './options'\n\n/**\n * ```js\n * interact('#draggable').draggable(true)\n *\n * var rectables = interact('rect')\n * rectables\n *   .gesturable(true)\n *   .on('gesturemove', function (event) {\n *       // ...\n *   })\n * ```\n *\n * The methods of this variable can be used to set elements as interactables\n * and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to configure\n * it.\n *\n * @param {Element | string} target The HTML or SVG Element to interact with\n * or CSS selector\n * @return {Interactable}\n */\nexport interface InteractStatic {\n  (target: Target, options?: Options): Interactable\n  getPointerAverage: typeof pointerUtils.pointerAverage\n  getTouchBBox: typeof pointerUtils.touchBBox\n  getTouchDistance: typeof pointerUtils.touchDistance\n  getTouchAngle: typeof pointerUtils.touchAngle\n  getElementRect: typeof domUtils.getElementRect\n  getElementClientRect: typeof domUtils.getElementClientRect\n  matchesSelector: typeof domUtils.matchesSelector\n  closest: typeof domUtils.closest\n  /** @internal */ globalEvents: any\n  version: string\n  /** @internal */ scope: Scope\n  /**\n   * Use a plugin\n   */\n  use(\n    plugin: Plugin,\n    options?: {\n      [key: string]: any\n    },\n  ): any\n  /**\n   * Check if an element or selector has been set with the `interact(target)`\n   * function\n   *\n   * @return {boolean} Indicates if the element or CSS selector was previously\n   * passed to interact\n   */\n  isSet(\n    /* The Element or string being searched for */\n    target: Target,\n    options?: any,\n  ): boolean\n  on(type: string | EventTypes, listener: ListenersArg, options?: object): any\n  off(type: EventTypes, listener: any, options?: object): any\n  debug(): any\n  /**\n   * Whether or not the browser supports touch input\n   */\n  supportsTouch(): boolean\n  /**\n   * Whether or not the browser supports PointerEvents\n   */\n  supportsPointerEvent(): boolean\n  /**\n   * Cancels all interactions (end events are not fired)\n   */\n  stop(): InteractStatic\n  /**\n   * Returns or sets the distance the pointer must be moved before an action\n   * sequence occurs. This also affects tolerance for tap events.\n   */\n  pointerMoveTolerance(\n    /** The movement from the start position must be greater than this value */\n    newValue?: number,\n  ): InteractStatic | number\n  addDocument(doc: Document, options?: object): void\n  removeDocument(doc: Document): void\n}\n\nexport function createInteractStatic(scope: Scope): InteractStatic {\n  const interact = ((target: Target, options: Options) => {\n    let interactable = scope.interactables.getExisting(target, options)\n\n    if (!interactable) {\n      interactable = scope.interactables.new(target, options)\n      interactable.events.global = interact.globalEvents\n    }\n\n    return interactable\n  }) as InteractStatic\n\n  // expose the functions used to calculate multi-touch properties\n  interact.getPointerAverage = pointerUtils.pointerAverage\n  interact.getTouchBBox = pointerUtils.touchBBox\n  interact.getTouchDistance = pointerUtils.touchDistance\n  interact.getTouchAngle = pointerUtils.touchAngle\n\n  interact.getElementRect = domUtils.getElementRect\n  interact.getElementClientRect = domUtils.getElementClientRect\n  interact.matchesSelector = domUtils.matchesSelector\n  interact.closest = domUtils.closest\n\n  interact.globalEvents = {} as any\n\n  // eslint-disable-next-line no-undef\n  interact.version = process.env.npm_package_version\n  interact.scope = scope\n  interact.use = function (plugin, options) {\n    this.scope.usePlugin(plugin, options)\n\n    return this\n  }\n\n  interact.isSet = function (target: Target, options?: { context?: Context }): boolean {\n    return !!this.scope.interactables.get(target, options && options.context)\n  }\n\n  interact.on = warnOnce(function on(type: string | EventTypes, listener: ListenersArg, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type as any[]) {\n        this.on(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.on(prop, (type as any)[prop], listener)\n      }\n\n      return this\n    }\n\n    // if it is an InteractEvent type, add listener to globalEvents\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      // if this type of event was never bound\n      if (!this.globalEvents[type]) {\n        this.globalEvents[type] = [listener]\n      } else {\n        this.globalEvents[type].push(listener)\n      }\n    }\n    // If non InteractEvent type, addEventListener to document\n    else {\n      this.scope.events.add(this.scope.document, type, listener as Listener, { options })\n    }\n\n    return this\n  }, 'The interact.on() method is being deprecated')\n\n  interact.off = warnOnce(function off(type: EventTypes, listener: any, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type) {\n        this.off(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.off(prop, type[prop], listener)\n      }\n\n      return this\n    }\n\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      let index: number\n\n      if (type in this.globalEvents && (index = this.globalEvents[type].indexOf(listener)) !== -1) {\n        this.globalEvents[type].splice(index, 1)\n      }\n    } else {\n      this.scope.events.remove(this.scope.document, type, listener, options)\n    }\n\n    return this\n  }, 'The interact.off() method is being deprecated')\n\n  interact.debug = function () {\n    return this.scope\n  }\n\n  interact.supportsTouch = function () {\n    return browser.supportsTouch\n  }\n\n  interact.supportsPointerEvent = function () {\n    return browser.supportsPointerEvent\n  }\n\n  interact.stop = function () {\n    for (const interaction of this.scope.interactions.list) {\n      interaction.stop()\n    }\n\n    return this\n  }\n\n  interact.pointerMoveTolerance = function (newValue?: number) {\n    if (is.number(newValue)) {\n      this.scope.interactions.pointerMoveTolerance = newValue\n\n      return this\n    }\n\n    return this.scope.interactions.pointerMoveTolerance\n  }\n\n  interact.addDocument = function (doc: Document, options?: object) {\n    this.scope.addDocument(doc, options)\n  }\n\n  interact.removeDocument = function (doc: Document) {\n    this.scope.removeDocument(doc)\n  }\n\n  return interact\n}\n", "import { Scope } from '@interactjs/core/scope'\n\nconst scope = new Scope()\n\nconst interact = scope.interactStatic\n\nexport default interact\n\nconst _global = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : this\nscope.init(_global)\n", "export default () => {}\n", "export default () => {}\n", "import type { Rect, Point } from '@interactjs/core/types'\nimport type { SnapFunction, SnapTarget } from '@interactjs/modifiers/snap/pointer'\n\nexport interface GridOptionsBase {\n  range?: number\n  limits?: Rect\n  offset?: Point\n}\nexport interface GridOptionsXY extends GridOptionsBase {\n  x: number\n  y: number\n}\nexport interface GridOptionsTopLeft extends GridOptionsBase {\n  top?: number\n  left?: number\n}\nexport interface GridOptionsBottomRight extends GridOptionsBase {\n  bottom?: number\n  right?: number\n}\nexport interface GridOptionsWidthHeight extends GridOptionsBase {\n  width?: number\n  height?: number\n}\n\nexport type GridOptions = GridOptionsXY | GridOptionsTopLeft | GridOptionsBottomRight | GridOptionsWidthHeight\n\nexport default (grid: GridOptions) => {\n  const coordFields = (\n    [\n      ['x', 'y'],\n      ['left', 'top'],\n      ['right', 'bottom'],\n      ['width', 'height'],\n    ] as const\n  ).filter(([xField, yField]) => xField in grid || yField in grid)\n\n  const gridFunc: SnapFunction & {\n    grid: typeof grid\n    coordFields: typeof coordFields\n  } = (x, y) => {\n    const {\n      range,\n      limits = {\n        left: -Infinity,\n        right: Infinity,\n        top: -Infinity,\n        bottom: Infinity,\n      },\n      offset = { x: 0, y: 0 },\n    } = grid\n\n    const result: SnapTarget & {\n      grid: typeof grid\n    } = { range, grid, x: null as number, y: null as number }\n\n    for (const [xField, yField] of coordFields) {\n      const gridx = Math.round((x - offset.x) / (grid as any)[xField])\n      const gridy = Math.round((y - offset.y) / (grid as any)[yField])\n\n      result[xField] = Math.max(limits.left, Math.min(limits.right, gridx * (grid as any)[xField] + offset.x))\n      result[yField] = Math.max(limits.top, Math.min(limits.bottom, gridy * (grid as any)[yField] + offset.y))\n    }\n\n    return result\n  }\n\n  gridFunc.grid = grid\n  gridFunc.coordFields = coordFields\n\n  return gridFunc\n}\n", "import type { Plugin } from '@interactjs/core/scope'\nimport extend from '@interactjs/utils/extend'\n\nimport * as allSnappers from './all'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    snappers: typeof allSnappers\n    createSnapGrid: typeof allSnappers.grid\n  }\n}\n\nconst snappersPlugin: Plugin = {\n  id: 'snappers',\n  install(scope) {\n    const { interactStatic: interact } = scope\n\n    interact.snappers = extend(interact.snappers || {}, allSnappers)\n    interact.createSnapGrid = interact.snappers.grid\n  },\n}\n\nexport default snappersPlugin\n", "/**\n * @module modifiers/aspectRatio\n *\n * @description\n * This modifier forces elements to be resized with a specified dx/dy ratio.\n *\n * ```js\n * interact(target).resizable({\n *   modifiers: [\n *     interact.modifiers.snapSize({\n *       targets: [ interact.snappers.grid({ x: 20, y: 20 }) ],\n *     }),\n *     interact.aspectRatio({ ratio: 'preserve' }),\n *   ],\n * });\n * ```\n */\n\nimport type { Point, Rect, EdgeOptions } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport { addEdges } from '@interactjs/utils/rect'\n\nimport { makeModifier } from './base'\nimport { Modification } from './Modification'\nimport type { Modifier, ModifierModule, ModifierState } from './types'\n\nexport interface AspectRatioOptions {\n  ratio?: number | 'preserve'\n  equalDelta?: boolean\n  modifiers?: Modifier[]\n  enabled?: boolean\n}\n\nexport type AspectRatioState = ModifierState<\n  AspectRatioOptions,\n  {\n    startCoords: Point\n    startRect: Rect\n    linkedEdges: EdgeOptions\n    ratio: number\n    equalDelta: boolean\n    xIsPrimaryAxis: boolean\n    edgeSign: {\n      x: number\n      y: number\n    }\n    subModification: Modification\n  }\n>\n\nconst aspectRatio: ModifierModule<AspectRatioOptions, AspectRatioState> = {\n  start(arg) {\n    const { state, rect, edges, pageCoords: coords } = arg\n    let { ratio, enabled } = state.options\n    const { equalDelta, modifiers } = state.options\n\n    if (ratio === 'preserve') {\n      ratio = rect.width / rect.height\n    }\n\n    state.startCoords = extend({}, coords)\n    state.startRect = extend({}, rect)\n    state.ratio = ratio\n    state.equalDelta = equalDelta\n\n    const linkedEdges = (state.linkedEdges = {\n      top: edges.top || (edges.left && !edges.bottom),\n      left: edges.left || (edges.top && !edges.right),\n      bottom: edges.bottom || (edges.right && !edges.top),\n      right: edges.right || (edges.bottom && !edges.left),\n    })\n\n    state.xIsPrimaryAxis = !!(edges.left || edges.right)\n\n    if (state.equalDelta) {\n      const sign = (linkedEdges.left ? 1 : -1) * (linkedEdges.top ? 1 : -1)\n      state.edgeSign = {\n        x: sign,\n        y: sign,\n      }\n    } else {\n      state.edgeSign = {\n        x: linkedEdges.left ? -1 : 1,\n        y: linkedEdges.top ? -1 : 1,\n      }\n    }\n\n    if (enabled !== false) {\n      extend(edges, linkedEdges)\n    }\n\n    if (!modifiers?.length) return\n\n    const subModification = new Modification(arg.interaction)\n\n    subModification.copyFrom(arg.interaction.modification)\n    subModification.prepareStates(modifiers)\n\n    state.subModification = subModification\n    subModification.startAll({ ...arg })\n  },\n\n  set(arg) {\n    const { state, rect, coords } = arg\n    const { linkedEdges } = state\n    const initialCoords = extend({}, coords)\n    const aspectMethod = state.equalDelta ? setEqualDelta : setRatio\n\n    extend(arg.edges, linkedEdges)\n    aspectMethod(state, state.xIsPrimaryAxis, coords, rect)\n\n    if (!state.subModification) {\n      return null\n    }\n\n    const correctedRect = extend({}, rect)\n\n    addEdges(linkedEdges, correctedRect, {\n      x: coords.x - initialCoords.x,\n      y: coords.y - initialCoords.y,\n    })\n\n    const result = state.subModification.setAll({\n      ...arg,\n      rect: correctedRect,\n      edges: linkedEdges,\n      pageCoords: coords,\n      prevCoords: coords,\n      prevRect: correctedRect,\n    })\n\n    const { delta } = result\n\n    if (result.changed) {\n      const xIsCriticalAxis = Math.abs(delta.x) > Math.abs(delta.y)\n\n      // do aspect modification again with critical edge axis as primary\n      aspectMethod(state, xIsCriticalAxis, result.coords, result.rect)\n      extend(coords, result.coords)\n    }\n\n    return result.eventProps\n  },\n\n  defaults: {\n    ratio: 'preserve',\n    equalDelta: false,\n    modifiers: [],\n    enabled: false,\n  },\n}\n\nfunction setEqualDelta({ startCoords, edgeSign }: AspectRatioState, xIsPrimaryAxis: boolean, coords: Point) {\n  if (xIsPrimaryAxis) {\n    coords.y = startCoords.y + (coords.x - startCoords.x) * edgeSign.y\n  } else {\n    coords.x = startCoords.x + (coords.y - startCoords.y) * edgeSign.x\n  }\n}\n\nfunction setRatio(\n  { startRect, startCoords, ratio, edgeSign }: AspectRatioState,\n  xIsPrimaryAxis: boolean,\n  coords: Point,\n  rect: Rect,\n) {\n  if (xIsPrimaryAxis) {\n    const newHeight = rect.width / ratio\n\n    coords.y = startCoords.y + (newHeight - startRect.height) * edgeSign.y\n  } else {\n    const newWidth = rect.height * ratio\n\n    coords.x = startCoords.x + (newWidth - startRect.width) * edgeSign.x\n  }\n}\n\nexport default makeModifier(aspectRatio, 'aspectRatio')\nexport { aspectRatio }\n", "import type { ModifierFunction } from './types'\n\nconst noop = (() => {}) as unknown as ModifierFunction<any, any, 'noop'>\n\nnoop._defaults = {}\n\nexport default noop\n", "import type Interaction from '@interactjs/core/Interaction'\nimport type { RectResolvable, Rect, Point } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierModule, ModifierState } from '../types'\n\nexport interface RestrictOptions {\n  // where to drag over\n  restriction: RectResolvable<[number, number, Interaction]>\n  // what part of self is allowed to drag over\n  elementRect: Rect\n  offset: Rect\n  // restrict just before the end drag\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictState = ModifierState<\n  RestrictOptions,\n  {\n    offset: Rect\n  }\n>\n\nfunction start({ rect, startOffset, state, interaction, pageCoords }: ModifierArg<RestrictState>) {\n  const { options } = state\n  const { elementRect } = options\n  const offset: Rect = extend(\n    {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    },\n    options.offset || {},\n  )\n\n  if (rect && elementRect) {\n    const restriction = getRestrictionRect(options.restriction, interaction, pageCoords)\n\n    if (restriction) {\n      const widthDiff = restriction.right - restriction.left - rect.width\n      const heightDiff = restriction.bottom - restriction.top - rect.height\n\n      if (widthDiff < 0) {\n        offset.left += widthDiff\n        offset.right += widthDiff\n      }\n      if (heightDiff < 0) {\n        offset.top += heightDiff\n        offset.bottom += heightDiff\n      }\n    }\n\n    offset.left += startOffset.left - rect.width * elementRect.left\n    offset.top += startOffset.top - rect.height * elementRect.top\n\n    offset.right += startOffset.right - rect.width * (1 - elementRect.right)\n    offset.bottom += startOffset.bottom - rect.height * (1 - elementRect.bottom)\n  }\n\n  state.offset = offset\n}\n\nfunction set({ coords, interaction, state }: ModifierArg<RestrictState>) {\n  const { options, offset } = state\n\n  const restriction = getRestrictionRect(options.restriction, interaction, coords)\n\n  if (!restriction) return\n\n  const rect = rectUtils.xywhToTlbr(restriction)\n\n  coords.x = Math.max(Math.min(rect.right - offset.right, coords.x), rect.left + offset.left)\n  coords.y = Math.max(Math.min(rect.bottom - offset.bottom, coords.y), rect.top + offset.top)\n}\n\nexport function getRestrictionRect(\n  value: RectResolvable<[number, number, Interaction]>,\n  interaction: Interaction,\n  coords?: Point,\n) {\n  if (is.func(value)) {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element, [\n      coords.x,\n      coords.y,\n      interaction,\n    ])\n  } else {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element)\n  }\n}\n\nconst defaults: RestrictOptions = {\n  restriction: null,\n  elementRect: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrict: ModifierModule<RestrictOptions, RestrictState> = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrict, 'restrict')\nexport { restrict }\n", "// This modifier adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     inner: { top: 200, left: 200, right: 400, bottom: 400 },\n//     outer: { top:   0, left:   0, right: 600, bottom: 600 },\n//   },\n// })\n\nimport type { Point, Rect } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nexport interface RestrictEdgesOptions {\n  inner: RestrictOptions['restriction']\n  outer: RestrictOptions['restriction']\n  offset?: RestrictOptions['offset']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictEdgesState = ModifierState<\n  RestrictEdgesOptions,\n  {\n    inner: Rect\n    outer: Rect\n    offset: RestrictEdgesOptions['offset']\n  }\n>\n\nconst noInner = { top: +Infinity, left: +Infinity, bottom: -Infinity, right: -Infinity }\nconst noOuter = { top: -Infinity, left: -Infinity, bottom: +Infinity, right: +Infinity }\n\nfunction start({ interaction, startOffset, state }: ModifierArg<RestrictEdgesState>) {\n  const { options } = state\n  let offset: Point\n\n  if (options) {\n    const offsetRect = getRestrictionRect(options.offset, interaction, interaction.coords.start.page)\n\n    offset = rectUtils.rectToXY(offsetRect)\n  }\n\n  offset = offset || { x: 0, y: 0 }\n\n  state.offset = {\n    top: offset.y + startOffset.top,\n    left: offset.x + startOffset.left,\n    bottom: offset.y - startOffset.bottom,\n    right: offset.x - startOffset.right,\n  }\n}\n\nfunction set({ coords, edges, interaction, state }: ModifierArg<RestrictEdgesState>) {\n  const { offset, options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const page = extend({}, coords)\n  const inner = getRestrictionRect(options.inner, interaction, page) || ({} as Rect)\n  const outer = getRestrictionRect(options.outer, interaction, page) || ({} as Rect)\n\n  fixRect(inner, noInner)\n  fixRect(outer, noOuter)\n\n  if (edges.top) {\n    coords.y = Math.min(Math.max(outer.top + offset.top, page.y), inner.top + offset.top)\n  } else if (edges.bottom) {\n    coords.y = Math.max(Math.min(outer.bottom + offset.bottom, page.y), inner.bottom + offset.bottom)\n  }\n  if (edges.left) {\n    coords.x = Math.min(Math.max(outer.left + offset.left, page.x), inner.left + offset.left)\n  } else if (edges.right) {\n    coords.x = Math.max(Math.min(outer.right + offset.right, page.x), inner.right + offset.right)\n  }\n}\n\nfunction fixRect(rect: Rect, defaults: Rect) {\n  for (const edge of ['top', 'left', 'bottom', 'right']) {\n    if (!(edge in rect)) {\n      rect[edge] = defaults[edge]\n    }\n  }\n\n  return rect\n}\n\nconst defaults: RestrictEdgesOptions = {\n  inner: null,\n  outer: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictEdges = {\n  noInner,\n  noOuter,\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictEdges, 'restrictEdges')\nexport { restrictEdges }\n", "import extend from '@interactjs/utils/extend'\n\nimport { makeModifier } from '../base'\n\nimport { restrict } from './pointer'\n\nconst defaults = extend(\n  {\n    get elementRect() {\n      return { top: 0, left: 0, bottom: 1, right: 1 }\n    },\n    set elementRect(_) {},\n  },\n  restrict.defaults,\n)\n\nconst restrictRect = {\n  start: restrict.start,\n  set: restrict.set,\n  defaults,\n}\n\nexport default makeModifier(restrictRect, 'restrictRect')\nexport { restrictRect }\n", "import type { Point, Rect, Size } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nimport type { RestrictEdgesState } from './edges'\nimport { restrictEdges } from './edges'\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nconst noMin = { width: -Infinity, height: -Infinity }\nconst noMax = { width: +Infinity, height: +Infinity }\n\nexport interface RestrictSizeOptions {\n  min?: Size | Point | RestrictOptions['restriction']\n  max?: Size | Point | RestrictOptions['restriction']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nfunction start(arg: ModifierArg<RestrictEdgesState>) {\n  return restrictEdges.start(arg)\n}\n\nexport type RestrictSizeState = RestrictEdgesState &\n  ModifierState<\n    RestrictSizeOptions & { inner: Rect; outer: Rect },\n    {\n      min: Rect\n      max: Rect\n    }\n  >\n\nfunction set(arg: ModifierArg<RestrictSizeState>) {\n  const { interaction, state, rect, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const minSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.min as any, interaction, arg.coords)) || noMin\n  const maxSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.max as any, interaction, arg.coords)) || noMax\n\n  state.options = {\n    endOnly: options.endOnly,\n    inner: extend({}, restrictEdges.noInner),\n    outer: extend({}, restrictEdges.noOuter),\n  }\n\n  if (edges.top) {\n    state.options.inner.top = rect.bottom - minSize.height\n    state.options.outer.top = rect.bottom - maxSize.height\n  } else if (edges.bottom) {\n    state.options.inner.bottom = rect.top + minSize.height\n    state.options.outer.bottom = rect.top + maxSize.height\n  }\n  if (edges.left) {\n    state.options.inner.left = rect.right - minSize.width\n    state.options.outer.left = rect.right - maxSize.width\n  } else if (edges.right) {\n    state.options.inner.right = rect.left + minSize.width\n    state.options.outer.right = rect.left + maxSize.width\n  }\n\n  restrictEdges.set(arg)\n\n  state.options = options\n}\n\nconst defaults: RestrictSizeOptions = {\n  min: null,\n  max: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictSize, 'restrictSize')\nexport { restrictSize }\n", "import type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName, Point, RectResolvable, Element } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { resolveRectLike, rectToXY } from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nexport interface Offset {\n  x: number\n  y: number\n  index: number\n  relativePoint?: Point | null\n}\n\nexport interface SnapPosition {\n  x?: number\n  y?: number\n  range?: number\n  offset?: Offset\n  [index: string]: any\n}\n\nexport type SnapFunction = (\n  x: number,\n  y: number,\n  interaction: InteractionProxy<ActionName>,\n  offset: Offset,\n  index: number,\n) => SnapPosition\nexport type SnapTarget = SnapPosition | SnapFunction\nexport interface SnapOptions {\n  targets?: SnapTarget[]\n  // target range\n  range?: number\n  // self points for snapping. [0,0] = top left, [1,1] = bottom right\n  relativePoints?: Point[]\n  // startCoords = offset snapping from drag start page position\n  offset?: Point | RectResolvable<[Interaction]> | 'startCoords'\n  offsetWithOrigin?: boolean\n  origin?: RectResolvable<[Element]> | Point\n  endOnly?: boolean\n  enabled?: boolean\n}\n\nexport type SnapState = ModifierState<\n  SnapOptions,\n  {\n    offsets?: Offset[]\n    closest?: any\n    targetFields?: string[][]\n  }\n>\n\nfunction start(arg: ModifierArg<SnapState>) {\n  const { interaction, interactable, element, rect, state, startOffset } = arg\n  const { options } = state\n  const origin = options.offsetWithOrigin ? getOrigin(arg) : { x: 0, y: 0 }\n\n  let snapOffset: Point\n\n  if (options.offset === 'startCoords') {\n    snapOffset = {\n      x: interaction.coords.start.page.x,\n      y: interaction.coords.start.page.y,\n    }\n  } else {\n    const offsetRect = resolveRectLike(options.offset as any, interactable, element, [interaction])\n\n    snapOffset = rectToXY(offsetRect) || { x: 0, y: 0 }\n    snapOffset.x += origin.x\n    snapOffset.y += origin.y\n  }\n\n  const { relativePoints } = options\n\n  state.offsets =\n    rect && relativePoints && relativePoints.length\n      ? relativePoints.map((relativePoint, index) => ({\n          index,\n          relativePoint,\n          x: startOffset.left - rect.width * relativePoint.x + snapOffset.x,\n          y: startOffset.top - rect.height * relativePoint.y + snapOffset.y,\n        }))\n      : [\n          {\n            index: 0,\n            relativePoint: null,\n            x: snapOffset.x,\n            y: snapOffset.y,\n          },\n        ]\n}\n\nfunction set(arg: ModifierArg<SnapState>) {\n  const { interaction, coords, state } = arg\n  const { options, offsets } = state\n\n  const origin = getOriginXY(interaction.interactable!, interaction.element!, interaction.prepared.name)\n  const page = extend({}, coords)\n  const targets: SnapPosition[] = []\n\n  if (!options.offsetWithOrigin) {\n    page.x -= origin.x\n    page.y -= origin.y\n  }\n\n  for (const offset of offsets!) {\n    const relativeX = page.x - offset.x\n    const relativeY = page.y - offset.y\n\n    for (let index = 0, len = options.targets!.length; index < len; index++) {\n      const snapTarget = options.targets![index]\n      let target: SnapPosition\n\n      if (is.func(snapTarget)) {\n        target = snapTarget(relativeX, relativeY, interaction._proxy, offset, index)\n      } else {\n        target = snapTarget\n      }\n\n      if (!target) {\n        continue\n      }\n\n      targets.push({\n        x: (is.number(target.x) ? target.x : relativeX) + offset.x,\n        y: (is.number(target.y) ? target.y : relativeY) + offset.y,\n\n        range: is.number(target.range) ? target.range : options.range,\n        source: snapTarget,\n        index,\n        offset,\n      })\n    }\n  }\n\n  const closest = {\n    target: null,\n    inRange: false,\n    distance: 0,\n    range: 0,\n    delta: { x: 0, y: 0 },\n  }\n\n  for (const target of targets) {\n    const range = target.range\n    const dx = target.x - page.x\n    const dy = target.y - page.y\n    const distance = hypot(dx, dy)\n    let inRange = distance <= range\n\n    // Infinite targets count as being out of range\n    // compared to non infinite ones that are in range\n    if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n      inRange = false\n    }\n\n    if (\n      !closest.target ||\n      (inRange\n        ? // is the closest target in range?\n          closest.inRange && range !== Infinity\n          ? // the pointer is relatively deeper in this target\n            distance / range < closest.distance / closest.range\n          : // this target has Infinite range and the closest doesn't\n            (range === Infinity && closest.range !== Infinity) ||\n            // OR this target is closer that the previous closest\n            distance < closest.distance\n        : // The other is not in range and the pointer is closer to this target\n          !closest.inRange && distance < closest.distance)\n    ) {\n      closest.target = target\n      closest.distance = distance\n      closest.range = range\n      closest.inRange = inRange\n      closest.delta.x = dx\n      closest.delta.y = dy\n    }\n  }\n\n  if (closest.inRange) {\n    coords.x = closest.target.x\n    coords.y = closest.target.y\n  }\n\n  state.closest = closest\n  return closest\n}\n\nfunction getOrigin(arg: Partial<ModifierArg<SnapState>>) {\n  const { element } = arg.interaction\n  const optionsOrigin = rectToXY(resolveRectLike(arg.state.options.origin as any, null, null, [element]))\n  const origin = optionsOrigin || getOriginXY(arg.interactable, element, arg.interaction.prepared.name)\n\n  return origin\n}\n\nconst defaults: SnapOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  offsetWithOrigin: true,\n  origin: null,\n  relativePoints: null,\n  endOnly: false,\n  enabled: false,\n}\nconst snap = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snap, 'snap')\nexport { snap }\n", "// This modifier allows snapping of the size of targets during resize\n// interactions.\n\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg } from '../types'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snap } from './pointer'\n\nexport type SnapSizeOptions = Pick<SnapOptions, 'targets' | 'offset' | 'endOnly' | 'range' | 'enabled'>\n\nfunction start(arg: ModifierArg<SnapState>) {\n  const { state, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state = {\n    options: {\n      targets: null,\n      relativePoints: [\n        {\n          x: edges.left ? 0 : 1,\n          y: edges.top ? 0 : 1,\n        },\n      ],\n      offset: options.offset || 'self',\n      origin: { x: 0, y: 0 },\n      range: options.range,\n    },\n  }\n\n  state.targetFields = state.targetFields || [\n    ['width', 'height'],\n    ['x', 'y'],\n  ]\n\n  snap.start(arg)\n  state.offsets = arg.state.offsets\n\n  arg.state = state\n}\n\nfunction set(arg) {\n  const { interaction, state, coords } = arg\n  const { options, offsets } = state\n  const relative = {\n    x: coords.x - offsets[0].x,\n    y: coords.y - offsets[0].y,\n  }\n\n  state.options = extend({}, options)\n  state.options.targets = []\n\n  for (const snapTarget of options.targets || []) {\n    let target\n\n    if (is.func(snapTarget)) {\n      target = snapTarget(relative.x, relative.y, interaction)\n    } else {\n      target = snapTarget\n    }\n\n    if (!target) {\n      continue\n    }\n\n    for (const [xField, yField] of state.targetFields) {\n      if (xField in target || yField in target) {\n        target.x = target[xField]\n        target.y = target[yField]\n\n        break\n      }\n    }\n\n    state.options.targets.push(target)\n  }\n\n  const returnValue = snap.set(arg)\n\n  state.options = options\n\n  return returnValue\n}\n\nconst defaults: SnapSizeOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst snapSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snapSize, 'snapSize')\nexport { snapSize }\n", "/**\n * @module modifiers/snapEdges\n *\n * @description\n * This modifier allows snapping of the edges of targets during resize\n * interactions.\n *\n * ```js\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * })\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * })\n * ```\n */\n\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierModule } from '../types'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snapSize } from './size'\n\nexport type SnapEdgesOptions = Pick<SnapOptions, 'targets' | 'range' | 'offset' | 'endOnly' | 'enabled'>\n\nfunction start(arg: ModifierArg<SnapState>) {\n  const { edges } = arg\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state.targetFields = arg.state.targetFields || [\n    [edges.left ? 'left' : 'right', edges.top ? 'top' : 'bottom'],\n  ]\n\n  return snapSize.start(arg)\n}\n\nconst snapEdges: ModifierModule<SnapEdgesOptions, SnapState, ReturnType<typeof snapSize.set>> = {\n  start,\n  set: snapSize.set,\n  defaults: extend(clone(snapSize.defaults), {\n    targets: undefined,\n    range: undefined,\n    offset: { x: 0, y: 0 },\n  } as const),\n}\n\nexport default makeModifier(snapEdges, 'snapEdges')\nexport { snapEdges }\n", "/* eslint-disable n/no-extraneous-import, import/no-unresolved */\nimport aspectRatio from './aspectRatio'\nimport avoid from './avoid/avoid'\nimport restrictEdges from './restrict/edges'\nimport restrict from './restrict/pointer'\nimport restrictRect from './restrict/rect'\nimport restrictSize from './restrict/size'\nimport rubberband from './rubberband/rubberband'\nimport snapEdges from './snap/edges'\nimport snap from './snap/pointer'\nimport snapSize from './snap/size'\nimport spring from './spring/spring'\nimport transform from './transform/transform'\n\nexport default {\n  aspectRatio,\n  restrictEdges,\n  restrict,\n  restrictRect,\n  restrictSize,\n  snapEdges,\n  snap,\n  snapSize,\n\n  spring,\n  avoid,\n  transform,\n  rubberband,\n}\n", "import type { Plugin } from '@interactjs/core/scope'\nimport snappers from '@interactjs/snappers/plugin'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './all'\nimport './base'\n\nimport all from './all'\nimport base from './base'\n/* eslint-enable import/no-duplicates */\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    modifiers: typeof all\n  }\n}\n\nconst modifiers: Plugin = {\n  id: 'modifiers',\n  install(scope) {\n    const { interactStatic: interact } = scope\n\n    scope.usePlugin(base)\n    scope.usePlugin(snappers)\n\n    interact.modifiers = all\n\n    // for backwrads compatibility\n    for (const type in all) {\n      const { _defaults, _methods } = all[type as keyof typeof all]\n\n      ;(_defaults as any)._methods = _methods\n      ;(scope.defaults.perAction as any)[type] = _defaults\n    }\n  },\n}\n\nexport default modifiers\n", "import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { PointerEventType, PointerType, Point } from '@interactjs/core/types'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nexport class PointerEvent<T extends string = any> extends BaseEvent<never> {\n  declare type: T\n  declare originalEvent: PointerEventType\n  declare pointerId: number\n  declare pointerType: string\n  declare double: boolean\n  declare pageX: number\n  declare pageY: number\n  declare clientX: number\n  declare clientY: number\n  declare dt: number\n  declare eventable: any;\n  [key: string]: any\n\n  constructor(\n    type: T,\n    pointer: PointerType | PointerEvent<any>,\n    event: PointerEventType,\n    eventTarget: Node,\n    interaction: Interaction<never>,\n    timeStamp: number,\n  ) {\n    super(interaction)\n    pointerUtils.pointerExtend(this, event)\n\n    if (event !== pointer) {\n      pointerUtils.pointerExtend(this, pointer)\n    }\n\n    this.timeStamp = timeStamp\n    this.originalEvent = event\n    this.type = type\n    this.pointerId = pointerUtils.getPointerId(pointer)\n    this.pointerType = pointerUtils.getPointerType(pointer)\n    this.target = eventTarget\n    this.currentTarget = null\n\n    if (type === 'tap') {\n      const pointerIndex = interaction.getPointerIndex(pointer)\n      this.dt = this.timeStamp - interaction.pointers[pointerIndex].downTime\n\n      const interval = this.timeStamp - interaction.tapTime\n\n      this.double =\n        !!interaction.prevTap &&\n        interaction.prevTap.type !== 'doubletap' &&\n        interaction.prevTap.target === this.target &&\n        interval < 500\n    } else if (type === 'doubletap') {\n      this.dt = (pointer as PointerEvent<'tap'>).timeStamp - interaction.tapTime\n      this.double = true\n    }\n  }\n\n  _subtractOrigin({ x: originX, y: originY }: Point) {\n    this.pageX -= originX\n    this.pageY -= originY\n    this.clientX -= originX\n    this.clientY -= originY\n\n    return this\n  }\n\n  _addOrigin({ x: originX, y: originY }: Point) {\n    this.pageX += originX\n    this.pageY += originY\n    this.clientX += originX\n    this.clientY += originY\n\n    return this\n  }\n\n  /**\n   * Prevent the default behaviour of the original Event\n   */\n  preventDefault() {\n    this.originalEvent.preventDefault()\n  }\n}\n", "import type { Eventable } from '@interactjs/core/Eventable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { Point, PointerType, PointerEventType, Element } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\n\nimport { PointerEvent } from './PointerEvent'\n\nexport type EventTargetList = Array<{\n  node: Node\n  eventable: Eventable\n  props: { [key: string]: any }\n}>\n\nexport interface PointerEventOptions extends PerActionDefaults {\n  enabled?: undefined // not used\n  holdDuration?: number\n  ignoreFrom?: any\n  allowFrom?: any\n  origin?: Point | string | Element\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    pointerEvents: typeof pointerEvents\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    prevTap?: PointerEvent<string>\n    tapTime?: number\n  }\n}\n\ndeclare module '@interactjs/core/PointerInfo' {\n  interface PointerInfo {\n    hold?: {\n      duration: number\n      timeout: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    pointerEvents: Options\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'pointerEvents:new': { pointerEvent: PointerEvent<any> }\n    'pointerEvents:fired': {\n      interaction: Interaction<null>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      pointerEvent: PointerEvent<any>\n      targets?: EventTargetList\n      type: string\n    }\n    'pointerEvents:collect-targets': {\n      interaction: Interaction<any>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      targets?: EventTargetList\n      type: string\n      path: Node[]\n      node: null\n    }\n  }\n}\n\nconst defaults: PointerEventOptions = {\n  holdDuration: 600,\n  ignoreFrom: null,\n  allowFrom: null,\n  origin: { x: 0, y: 0 },\n}\n\nconst pointerEvents: Plugin = {\n  id: 'pointer-events/base',\n  before: ['inertia', 'modifiers', 'auto-start', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': addInteractionProps,\n    'interactions:update-pointer': addHoldInfo,\n    'interactions:move': moveAndClearHold,\n    'interactions:down': (arg, scope) => {\n      downAndStartHold(arg, scope)\n      fire(arg, scope)\n    },\n    'interactions:up': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n      tapAfterUp(arg, scope)\n    },\n    'interactions:cancel': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n    },\n  },\n  PointerEvent,\n  fire,\n  collectEventTargets,\n  defaults,\n  types: {\n    down: true,\n    move: true,\n    up: true,\n    cancel: true,\n    tap: true,\n    doubletap: true,\n    hold: true,\n  } as { [type: string]: true },\n}\n\nfunction fire<T extends string>(\n  arg: {\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    interaction: Interaction<never>\n    type: T\n    targets?: EventTargetList\n  },\n  scope: Scope,\n) {\n  const { interaction, pointer, event, eventTarget, type, targets = collectEventTargets(arg, scope) } = arg\n\n  const pointerEvent = new PointerEvent(type, pointer, event, eventTarget, interaction, scope.now())\n\n  scope.fire('pointerEvents:new', { pointerEvent })\n\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    targets,\n    type,\n    pointerEvent,\n  }\n\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i]\n\n    for (const prop in target.props || {}) {\n      ;(pointerEvent as any)[prop] = target.props[prop]\n    }\n\n    const origin = getOriginXY(target.eventable, target.node)\n\n    pointerEvent._subtractOrigin(origin)\n    pointerEvent.eventable = target.eventable\n    pointerEvent.currentTarget = target.node\n\n    target.eventable.fire(pointerEvent)\n\n    pointerEvent._addOrigin(origin)\n\n    if (\n      pointerEvent.immediatePropagationStopped ||\n      (pointerEvent.propagationStopped &&\n        i + 1 < targets.length &&\n        targets[i + 1].node !== pointerEvent.currentTarget)\n    ) {\n      break\n    }\n  }\n\n  scope.fire('pointerEvents:fired', signalArg)\n\n  if (type === 'tap') {\n    // if pointerEvent should make a double tap, create and fire a doubletap\n    // PointerEvent and use that as the prevTap\n    const prevTap = pointerEvent.double\n      ? fire(\n          {\n            interaction,\n            pointer,\n            event,\n            eventTarget,\n            type: 'doubletap',\n          },\n          scope,\n        )\n      : pointerEvent\n\n    interaction.prevTap = prevTap\n    interaction.tapTime = prevTap.timeStamp\n  }\n\n  return pointerEvent\n}\n\nfunction collectEventTargets<T extends string>(\n  {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n  }: {\n    interaction: Interaction<any>\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    type: T\n  },\n  scope: Scope,\n) {\n  const pointerIndex = interaction.getPointerIndex(pointer)\n  const pointerInfo = interaction.pointers[pointerIndex]\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (\n    type === 'tap' &&\n    (interaction.pointerWasMoved ||\n      // or if the pointerup target is different to the pointerdown target\n      !(pointerInfo && pointerInfo.downTarget === eventTarget))\n  ) {\n    return []\n  }\n\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n    path,\n    targets: [] as EventTargetList,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (type === 'hold') {\n    signalArg.targets = signalArg.targets.filter(\n      (target) =>\n        target.eventable.options.holdDuration === interaction.pointers[pointerIndex]?.hold?.duration,\n    )\n  }\n\n  return signalArg.targets\n}\n\nfunction addInteractionProps({ interaction }) {\n  interaction.prevTap = null // the most recent tap event on this interaction\n  interaction.tapTime = 0 // time of the most recent tap event\n}\n\nfunction addHoldInfo({ down, pointerInfo }: SignalArgs['interactions:update-pointer']) {\n  if (!down && pointerInfo.hold) {\n    return\n  }\n\n  pointerInfo.hold = { duration: Infinity, timeout: null }\n}\n\nfunction clearHold({ interaction, pointerIndex }) {\n  const hold = interaction.pointers[pointerIndex].hold\n\n  if (hold && hold.timeout) {\n    clearTimeout(hold.timeout)\n    hold.timeout = null\n  }\n}\n\nfunction moveAndClearHold(arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction, pointer, event, eventTarget, duplicate } = arg\n\n  if (!duplicate && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearHold(arg)\n    }\n\n    fire(\n      {\n        interaction,\n        pointer,\n        event,\n        eventTarget: eventTarget as Element,\n        type: 'move',\n      },\n      scope,\n    )\n  }\n}\n\nfunction downAndStartHold(\n  { interaction, pointer, event, eventTarget, pointerIndex }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  const timer = interaction.pointers[pointerIndex].hold!\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type: 'hold',\n    targets: [] as EventTargetList,\n    path,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (!signalArg.targets.length) return\n\n  let minDuration = Infinity\n\n  for (const target of signalArg.targets) {\n    const holdDuration = target.eventable.options.holdDuration\n\n    if (holdDuration < minDuration) {\n      minDuration = holdDuration\n    }\n  }\n\n  timer.duration = minDuration\n  timer.timeout = setTimeout(() => {\n    fire(\n      {\n        interaction,\n        eventTarget,\n        pointer,\n        event,\n        type: 'hold',\n      },\n      scope,\n    )\n  }, minDuration)\n}\n\nfunction tapAfterUp(\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:up'],\n  scope: Scope,\n) {\n  if (!interaction.pointerWasMoved) {\n    fire({ interaction, eventTarget, pointer, event, type: 'tap' }, scope)\n  }\n}\n\nfunction install(scope: Scope) {\n  scope.pointerEvents = pointerEvents\n  scope.defaults.actions.pointerEvents = pointerEvents.defaults\n  extend(scope.actions.phaselessTypes, pointerEvents.types)\n}\n\nexport default pointerEvents\n", "import type Interaction from '@interactjs/core/Interaction'\nimport type { ListenerMap, Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './base'\nimport basePlugin from './base'\n/* eslint-enable import/no-duplicates */\nimport { type PointerEvent } from './PointerEvent'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    holdIntervalHandle?: any\n  }\n}\n\ndeclare module '@interactjs/pointer-events/PointerEvent' {\n  interface PointerEvent<T extends string = any> {\n    count?: number\n  }\n}\n\ndeclare module '@interactjs/pointer-events/base' {\n  interface PointerEventOptions {\n    holdRepeatInterval?: number\n  }\n}\n\nfunction install(scope: Scope) {\n  scope.usePlugin(basePlugin)\n\n  const { pointerEvents } = scope\n\n  // don't repeat by default\n  pointerEvents.defaults.holdRepeatInterval = 0\n  pointerEvents.types.holdrepeat = scope.actions.phaselessTypes.holdrepeat = true\n}\n\nfunction onNew({ pointerEvent }: { pointerEvent: PointerEvent<any> }) {\n  if (pointerEvent.type !== 'hold') return\n\n  pointerEvent.count = (pointerEvent.count || 0) + 1\n}\n\nfunction onFired(\n  { interaction, pointerEvent, eventTarget, targets }: SignalArgs['pointerEvents:fired'],\n  scope: Scope,\n) {\n  if (pointerEvent.type !== 'hold' || !targets.length) return\n\n  // get the repeat interval from the first eventable\n  const interval = targets[0].eventable.options.holdRepeatInterval\n\n  // don't repeat if the interval is 0 or less\n  if (interval <= 0) return\n\n  // set a timeout to fire the holdrepeat event\n  interaction.holdIntervalHandle = setTimeout(() => {\n    scope.pointerEvents.fire(\n      {\n        interaction,\n        eventTarget,\n        type: 'hold',\n        pointer: pointerEvent,\n        event: pointerEvent,\n      },\n      scope,\n    )\n  }, interval)\n}\n\nfunction endHoldRepeat({ interaction }: { interaction: Interaction }) {\n  // set the interaction's holdStopTime property\n  // to stop further holdRepeat events\n  if (interaction.holdIntervalHandle) {\n    clearInterval(interaction.holdIntervalHandle)\n    interaction.holdIntervalHandle = null\n  }\n}\n\nconst holdRepeat: Plugin = {\n  id: 'pointer-events/holdRepeat',\n  install,\n  listeners: ['move', 'up', 'cancel', 'endall'].reduce(\n    (acc, enderTypes) => {\n      ;(acc as any)[`pointerEvents:${enderTypes}`] = endHoldRepeat\n      return acc\n    },\n    {\n      'pointerEvents:new': onNew,\n      'pointerEvents:fired': onFired,\n    } as ListenerMap,\n  ),\n}\n\nexport default holdRepeat\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\n\nimport type { PointerEventOptions } from '@interactjs/pointer-events/base'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    pointerEvents(options: Partial<PointerEventOptions>): this\n    /** @internal */\n    __backCompatOption: (optionName: string, newValue: any) => any\n  }\n}\n\nfunction install(scope: Scope) {\n  const { Interactable } = scope\n\n  Interactable.prototype.pointerEvents = function (\n    this: Interactable,\n    options: Partial<PointerEventOptions>,\n  ) {\n    extend(this.events.options, options)\n\n    return this\n  }\n\n  const __backCompatOption = Interactable.prototype._backCompatOption\n\n  Interactable.prototype._backCompatOption = function (optionName, newValue) {\n    const ret = __backCompatOption.call(this, optionName, newValue)\n\n    if (ret === this) {\n      this.events.options[optionName] = newValue\n    }\n\n    return ret\n  }\n}\n\nconst plugin: Plugin = {\n  id: 'pointer-events/interactableTargets',\n  install,\n  listeners: {\n    'pointerEvents:collect-targets': ({ targets, node, type, eventTarget }, scope) => {\n      scope.interactables.forEachMatch(node, (interactable: Interactable) => {\n        const eventable = interactable.events\n        const options = eventable.options\n\n        if (\n          eventable.types[type] &&\n          eventable.types[type].length &&\n          interactable.testIgnoreAllow(options, node, eventTarget)\n        ) {\n          targets.push({\n            node,\n            eventable,\n            props: { interactable },\n          })\n        }\n      })\n    },\n\n    'interactable:new': ({ interactable }) => {\n      interactable.events.getRect = function (element: Element) {\n        return interactable.getRect(element)\n      }\n    },\n\n    'interactable:set': ({ interactable, options }, scope) => {\n      extend(interactable.events.options, scope.pointerEvents.defaults)\n      extend(interactable.events.options, options.pointerEvents || {})\n    },\n  },\n}\n\nexport default plugin\n", "import type { Plugin } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './base'\nimport './holdRepeat'\nimport './interactableTargets'\n\nimport * as pointerEvents from './base'\nimport holdRepeat from './holdRepeat'\nimport interactableTargets from './interactableTargets'\n/* eslint-enable import/no-duplicates */\n\nconst plugin: Plugin = {\n  id: 'pointer-events',\n  install(scope) {\n    scope.usePlugin(pointerEvents)\n    scope.usePlugin(holdRepeat)\n    scope.usePlugin(interactableTargets)\n  },\n}\n\nexport default plugin\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { DoAnyPhaseArg, Interaction } from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, ActionProps, Element } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport { copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport { tlbrToXywh } from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-reflow': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-reflow': DoAnyPhaseArg\n    'interactions:after-action-reflow': DoAnyPhaseArg\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    /**\n     * ```js\n     * const interactable = interact(target)\n     * const drag = { name: drag, axis: 'x' }\n     * const resize = { name: resize, edges: { left: true, bottom: true }\n     *\n     * interactable.reflow(drag)\n     * interactable.reflow(resize)\n     * ```\n     *\n     * Start an action sequence to re-apply modifiers, check drops, etc.\n     *\n     * @param { Object } action The action to begin\n     * @param { string } action.name The name of the action\n     * @returns { Promise } A promise that resolves to the `Interactable` when actions on all targets have ended\n     */\n    reflow<T extends ActionName>(action: ActionProps<T>): ReturnType<typeof doReflow>\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    _reflowPromise: Promise<void>\n    _reflowResolve: (...args: unknown[]) => void\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    reflow?: true\n  }\n}\n\nfunction install(scope: Scope) {\n  const { Interactable } = scope\n\n  scope.actions.phases.reflow = true\n\n  Interactable.prototype.reflow = function (action: ActionProps) {\n    return doReflow(this, action, scope)\n  }\n}\n\nfunction doReflow<T extends ActionName>(\n  interactable: Interactable,\n  action: ActionProps<T>,\n  scope: Scope,\n): Promise<Interactable> {\n  const elements = interactable.getAllElements()\n\n  // tslint:disable-next-line variable-name\n  const Promise = (scope.window as any).Promise\n  const promises: Array<Promise<null>> | null = Promise ? [] : null\n\n  for (const element of elements) {\n    const rect = interactable.getRect(element as HTMLElement | SVGElement)\n\n    if (!rect) {\n      break\n    }\n\n    const runningInteraction = arr.find(scope.interactions.list, (interaction: Interaction) => {\n      return (\n        interaction.interacting() &&\n        interaction.interactable === interactable &&\n        interaction.element === element &&\n        interaction.prepared.name === action.name\n      )\n    })\n    let reflowPromise: Promise<null>\n\n    if (runningInteraction) {\n      runningInteraction.move()\n\n      if (promises) {\n        reflowPromise =\n          runningInteraction._reflowPromise ||\n          new Promise((resolve: any) => {\n            runningInteraction._reflowResolve = resolve\n          })\n      }\n    } else {\n      const xywh = tlbrToXywh(rect)\n      const coords = {\n        page: { x: xywh.x, y: xywh.y },\n        client: { x: xywh.x, y: xywh.y },\n        timeStamp: scope.now(),\n      }\n\n      const event = pointerUtils.coordsToEvent(coords)\n      reflowPromise = startReflow<T>(scope, interactable, element, action, event)\n    }\n\n    if (promises) {\n      promises.push(reflowPromise)\n    }\n  }\n\n  return promises && Promise.all(promises).then(() => interactable)\n}\n\nfunction startReflow<T extends ActionName>(\n  scope: Scope,\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  event: any,\n) {\n  const interaction = scope.interactions.new({ pointerType: 'reflow' })\n  const signalArg = {\n    interaction,\n    event,\n    pointer: event,\n    eventTarget: element,\n    phase: 'reflow',\n  } as const\n\n  interaction.interactable = interactable\n  interaction.element = element\n  interaction.prevEvent = event\n  interaction.updatePointer(event, event, element, true)\n  pointerUtils.setZeroCoords(interaction.coords.delta)\n\n  copyAction(interaction.prepared, action)\n  interaction._doPhase(signalArg)\n\n  const { Promise } = scope.window as unknown as { Promise: PromiseConstructor }\n  const reflowPromise = Promise\n    ? new Promise<undefined>((resolve) => {\n        interaction._reflowResolve = resolve\n      })\n    : undefined\n\n  interaction._reflowPromise = reflowPromise\n  interaction.start(action, interactable, element)\n\n  if (interaction._interacting) {\n    interaction.move(signalArg)\n    interaction.end(event)\n  } else {\n    interaction.stop()\n    interaction._reflowResolve()\n  }\n\n  interaction.removePointer(event, event)\n\n  return reflowPromise\n}\n\nconst reflow: Plugin = {\n  id: 'reflow',\n  install,\n  listeners: {\n    // remove completed reflow interactions\n    'interactions:stop': ({ interaction }, scope) => {\n      if (interaction.pointerType === 'reflow') {\n        if (interaction._reflowResolve) {\n          interaction._reflowResolve()\n        }\n\n        arr.remove(scope.interactions.list, interaction)\n      }\n    },\n  },\n}\n\nexport default reflow\n", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport interact from '@interactjs/interactjs'\n\nexport default interact\n\nif (typeof module === 'object' && !!module) {\n  try {\n    module.exports = interact\n  } catch {}\n}\n\n;(interact as any).default = interact\n", "/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '@interactjs/actions/plugin'\nimport '@interactjs/auto-scroll/plugin'\nimport '@interactjs/auto-start/plugin'\nimport '@interactjs/core/interactablePreventDefault'\nimport '@interactjs/dev-tools/plugin'\nimport '@interactjs/inertia/plugin'\nimport '@interactjs/interact'\nimport '@interactjs/modifiers/plugin'\nimport '@interactjs/offset/plugin'\nimport '@interactjs/pointer-events/plugin'\nimport '@interactjs/reflow/plugin'\n\nimport actions from '@interactjs/actions/plugin'\nimport autoScroll from '@interactjs/auto-scroll/plugin'\nimport autoStart from '@interactjs/auto-start/plugin'\nimport interactablePreventDefault from '@interactjs/core/interactablePreventDefault'\nimport devTools from '@interactjs/dev-tools/plugin'\nimport inertia from '@interactjs/inertia/plugin'\nimport interact from '@interactjs/interact'\nimport modifiers from '@interactjs/modifiers/plugin'\nimport offset from '@interactjs/offset/plugin'\nimport pointerEvents from '@interactjs/pointer-events/plugin'\nimport reflow from '@interactjs/reflow/plugin'\n/* eslint-enable import/no-duplicates */\n\ninteract.use(interactablePreventDefault)\n\ninteract.use(offset)\n\n// pointerEvents\ninteract.use(pointerEvents)\n\n// inertia\ninteract.use(inertia)\n\n// snap, resize, etc.\ninteract.use(modifiers)\n\n// autoStart, hold\ninteract.use(autoStart)\n\n// drag and drop, resize, gesture\ninteract.use(actions)\n\n// autoScroll\ninteract.use(autoScroll)\n\n// reflow\ninteract.use(reflow)\n\n// eslint-disable-next-line no-undef\nif (process.env.NODE_ENV !== 'production') {\n  interact.use(devTools)\n}\n\nexport default interact\n;(interact as any).default = interact\n", "/** 当前环境是否为客户端 */\nexport const isClient = typeof window !== 'undefined'\n/** 当前环境是否为 IOS */\nexport const isIOS =\n  /* #__PURE__ */ isClient &&\n  window?.navigator?.userAgent &&\n  /iP(ad|hone|od)/.test(window.navigator.userAgent)\n\nconst toString = Object.prototype.toString\nconst hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * 判断一个值是否为指定的类型\n *\n * @param value 需判断的值\n * @param type 指定的类型，注意大小写\n *\n * @returns 类型是否匹配\n */\nexport function is(value: unknown, type: string) {\n  return toString.call(value) === `[object ${type}]`\n}\n\n/**\n * 判断一个对象是否包含指定的键值\n *\n * @param value 需判断的对象\n * @param key 指定的键值\n *\n * @returns 是否包含键值\n */\nexport function has(value: Record<string, any>, key: string | symbol): key is keyof typeof value {\n  return hasOwnProperty.call(value, key)\n}\n\n/**\n * 判断一个值是否已定义\n *\n * @param value 需判断的值\n *\n * @returns 是否已定义\n */\nexport function isDefined<T = unknown>(\n  value: T | undefined | null\n): value is Exclude<T, undefined | null> {\n  return value !== undefined && value !== null\n}\n\n/**\n * 判断一个值是否未被定义\n *\n * @param value 需判断的值\n *\n * @returns 是否未定义\n */\nexport function isNull(value: unknown): value is null | undefined {\n  return value === undefined || value === null\n}\n\n/**\n * 判断一个值是否为数字\n *\n * @param value 需判断的值\n *\n * @returns 是否为数字\n */\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number'\n}\n\n/**\n * 判断一个值是否为 `NaN`\n *\n * @param value 需判断的值\n *\n * @returns 是否为 `NaN`\n */\nexport function isNaN(value: unknown): value is number {\n  return Number.isNaN(value)\n}\n\n/**\n * 判断一个值是否为字符串\n *\n * @param value 需判断的值\n *\n * @returns 是否为字符串\n */\nexport function isString(value: unknown): value is string {\n  return typeof value === 'string'\n}\n\n/**\n * 判断一个值是否为布尔值\n *\n * @param value 需判断的值\n *\n * @returns 是否为布尔值\n */\nexport function isBoolean(value: unknown): value is boolean {\n  return typeof value === 'boolean'\n}\n\n/**\n * 判断一个值是否为 `true`\n *\n * @param value 需判断的值\n *\n * @returns 是否为 `true`\n */\nexport function isTrue(value: unknown): value is true {\n  return value === true\n}\n\n/**\n * 判断一个值是否为 `false`\n *\n * @param value 需判断的值\n *\n * @returns 是否为 `false`\n */\nexport function isFalse(value: unknown): value is false {\n  return value === false\n}\n\n/**\n * 判断一个值是否为 `Symbol`\n *\n * @param value 需判断的值\n *\n * @returns 是否为 `Symbol`\n */\nexport function isSymbol(value: unknown): value is symbol {\n  return typeof value === 'symbol'\n}\n\n/**\n * 判断一个值是否为 `BigInt`\n *\n * @param value 需判断的值\n *\n * @returns 是否为 `BigInt`\n */\nexport function isBigInt(value: unknown): value is bigint {\n  return typeof value === 'bigint'\n}\n\n/**\n * 判断一个值是否为数组\n *\n * @param value 需判断的值\n *\n * @returns 是否为数组\n */\nexport function isArray<T = any>(value: unknown): value is T[] {\n  return Array.isArray(value)\n}\n\n/**\n * 判断一个值是否为对象\n *\n * 注意，`null` 与原生的特殊对象不被包含\n *\n * @param value 需判断的值\n *\n * @returns 是否为对象\n */\nexport function isObject<T extends Record<any, any> = Record<any, any>>(\n  value: unknown\n): value is T {\n  return is(value, 'Object')\n}\n\n/**\n * 判断一个值是否为 `Promise`\n *\n * 如果一个对象包含 `then` 和 `catch` 方法，则被认为是一个 `Promise`\n *\n * @param value 需判断的值\n *\n * @returns 是否为 `Promise`\n */\nexport function isPromise<T = any>(value: unknown): value is Promise<T> {\n  return (\n    !!value &&\n    typeof (value as any).then === 'function' &&\n    typeof (value as any).catch === 'function'\n  )\n}\n\n/**\n * 判断一个值是否为函数\n *\n * @param value 需判断的值\n *\n * @returns 是否为函数\n */\nexport function isFunction(value: unknown): value is (...any: any[]) => any {\n  return typeof value === 'function'\n}\n\n/**\n * 判断一个值是否为 `Set`\n *\n * @param value 需判断的值\n *\n * @returns 是否为 `Set`\n */\nexport function isSet<T = any>(value: unknown): value is Set<T> {\n  return is(value, 'Set')\n}\n\n/**\n * 判断一个值是否为 `Map`\n *\n * @param value 需判断的值\n *\n * @returns 是否为 `Map`\n */\nexport function isMap<K = any, V = any>(value: unknown): value is Map<K, V> {\n  return is(value, 'Map')\n}\n\n/**\n * 判断一个值是否为 `Date`\n *\n * @param value 需判断的值\n *\n * @returns 是否为 `Date`\n */\nexport function isDate(value: unknown): value is Date {\n  return is(value, 'Date')\n}\n\n/**\n * 判断一个值是否为正则\n *\n * @param value 需判断的值\n *\n * @returns 是否为正则\n */\nexport function isRegExp(value: unknown): value is RegExp {\n  return is(value, 'RegExp')\n}\n\n/**\n * 判断一个值是否为空\n *\n * - 如果这是一个数组或字符串，则 `length` 为 `0` 时为空\n * - 如果这是一个 `Set` 或 `Map`，则 `size` 为 `0` 时为空\n * - 如果这是一个对象，则无任何键值时为空\n * - 如果这是一个数字，则为 `NaN` 时为空\n * - 其余情况下，未定义时为空\n *\n * @param value 需判断的值\n *\n * @returns 是否为空\n */\nexport function isEmpty(value: unknown) {\n  if (Array.isArray(value) || typeof value === 'string') {\n    return value.length === 0\n  }\n\n  if (value instanceof Map || value instanceof Set) {\n    return value.size === 0\n  }\n\n  if (isObject(value)) {\n    return Object.keys(value).length === 0\n  }\n\n  if (typeof value === 'number') {\n    return isNaN(value)\n  }\n\n  return isNull(value)\n}\n\n/**\n * 判断一个值是否为 `Element`\n *\n * @param value 需判断的值\n * @param ssr 是否考虑服务端渲染\n *\n * @returns 是否为 `Element`\n */\nexport function isElement<T extends Element = Element>(value: unknown, ssr = false): value is T {\n  if (!ssr && !isClient) return false\n\n  return !!(value && 'nodeType' in (value as any))\n}\n\n/**\n * 判断一个值能否被迭代\n *\n * @param value 需判断的值\n *\n * @returns 能否被迭代\n */\nexport function isIterable(value: unknown) {\n  return isDefined(value) && typeof (value as any)[Symbol.iterator] === 'function'\n}\n\n/**\n * 一个空的占位函数\n */\nexport function noop(...args: any[]): any\nexport function noop() {}\n\n/**\n * 一个返回 `true` 的占位函数\n *\n * @returns `true`\n */\nexport function toTrue(...args: any[]): true\nexport function toTrue() {\n  return true\n}\n\n/**\n * 一个返回 `false` 的占位函数\n *\n * @returns `false`\n */\nexport function toFalse(...args: any[]): false\nexport function toFalse() {\n  return false\n}\n\n/**\n * 生成一个值递进的数组\n *\n * @param size 大小\n * @param start 开始的数值，默认为 1\n * @param step 跨度，默认为 1\n *\n * @returns 生成的数组\n */\nexport function range(size: number, start = 1, step = 1) {\n  const array: number[] = []\n\n  for (let i = 0; i < size; ++i) {\n    array.push(start + i * step)\n  }\n\n  return array\n}\n\n/**\n * 获取变量的类型\n *\n * @param value 任意变量\n *\n * @returns 变量的类型\n */\nexport function getType(value: unknown) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\n/**\n * 根据长度生成一串随机的字符串\n *\n * @param length 字符串的长度\n *\n * @returns 生成的字符串\n */\nexport function randomString(length = 16) {\n  const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'\n  const maxPos = chars.length\n\n  let string = ''\n\n  while (length--) {\n    string += chars.charAt(Math.floor(Math.random() * maxPos))\n  }\n\n  return string\n}\n\n/**\n * 根据一系列判断条件，执行第一个为 `true` 的条件所对应的回调函数\n *\n * @param conditions 判断条件及回调函数\n * @param options 额外的选项\n *\n * @returns 是否匹配了任一条件\n */\nexport async function decide(\n  conditions: [boolean | (() => boolean), () => void | Promise<void>][],\n  options: {\n    /**\n     * 当匹配任意一个条件时，会在该条件对应的回调函数执行前执行\n     */\n    beforeMatchAny?: () => void | Promise<void>,\n    /**\n     * 当匹配任意一个条件时，会在该条件对应的回调函数执行完后执行\n     */\n    afterMatchAny?: () => void | Promise<void>\n  } = {}\n) {\n  if (conditions.length) {\n    for (const [condition, callback] of conditions) {\n      if (typeof condition === 'function' ? condition() : condition) {\n        if (typeof options.beforeMatchAny === 'function') {\n          await options.beforeMatchAny()\n        }\n\n        await callback()\n\n        if (typeof options.afterMatchAny === 'function') {\n          await options.afterMatchAny()\n        }\n\n        return true\n      }\n    }\n  }\n\n  return false\n}\n", "import { isClient } from './common'\n\n/**\n * 将指定的文本写入粘贴板\n *\n * @param text 需要写入的文本\n *\n * @returns 是否写入成功\n */\nexport async function writeClipboard(text: string) {\n  if (!isClient) return false\n\n  try {\n    await navigator.clipboard.writeText(text)\n\n    return true\n  } catch {\n    let isSuccess = false\n\n    const textarea = document.createElement('textarea')\n    const prevFocused = document.activeElement\n\n    textarea.value = text\n\n    // Prevent keyboard from showing on mobile\n    textarea.setAttribute('readonly', '')\n\n    textarea.style.contain = 'strict'\n    textarea.style.position = 'absolute'\n    textarea.style.height = '0'\n    textarea.style.fontSize = '12pt' // Prevent zooming on iOS\n\n    const selection = document.getSelection()\n    const originalRange = selection ? selection.rangeCount > 0 && selection.getRangeAt(0) : null\n\n    document.body.appendChild(textarea)\n    textarea.select()\n\n    // Explicit selection workaround for iOS\n    textarea.selectionStart = 0\n    textarea.selectionEnd = text.length\n\n    isSuccess = document.execCommand('copy')\n    document.body.removeChild(textarea)\n\n    if (originalRange) {\n      selection!.removeAllRanges() // originalRange can't be truthy when selection is falsy\n      selection!.addRange(originalRange)\n    }\n\n    // Get the focus back on the previously focused element, if any\n    if (prevFocused) {\n      ;(prevFocused as HTMLElement).focus()\n    }\n\n    return isSuccess\n  }\n}\n", "import { isDefined } from './common'\n\ninterface RGB extends Record<any, any> {\n  r: number,\n  g: number,\n  b: number,\n  a?: number\n}\n\nexport interface RGBColor extends RGB {\n  a?: 1,\n  format?: 'name' | 'rgb'\n}\n\nexport interface RGBAColor extends RGB {\n  a: number,\n  format?: 'name' | 'rgba'\n}\n\nexport interface HEX3Color extends RGB {\n  a?: 1,\n  format?: 'name' | 'hex3'\n}\nexport interface HEX4Color extends RGB {\n  a: number,\n  format?: 'name' | 'hex4'\n}\nexport interface HEX6Color extends RGB {\n  a?: 1,\n  format?: 'name' | 'hex6'\n}\nexport interface HEX8Color extends RGB {\n  a: number,\n  format?: 'name' | 'hex8'\n}\n\ninterface HSL extends Record<any, any> {\n  h: number,\n  s: number,\n  l: number,\n  a?: number\n}\n\nexport interface HSLColor extends HSL {\n  a?: 1,\n  format?: 'name' | 'hsl'\n}\n\nexport interface HSLAColor extends HSL {\n  a: number,\n  format?: 'name' | 'hsla'\n}\n\ninterface HSV extends Record<any, any> {\n  h: number,\n  s: number,\n  v: number,\n  a?: number\n}\n\nexport interface HSVColor extends HSV {\n  a?: 1,\n  format?: 'name' | 'hsv'\n}\n\nexport interface HSVAColor extends HSV {\n  a: number,\n  format?: 'name' | 'hsva'\n}\n\nexport type Color =\n  | string\n  | RGBColor\n  | RGBAColor\n  | HSLColor\n  | HSLAColor\n  | HSVColor\n  | HSVAColor\n  | HEX3Color\n  | HEX4Color\n  | HEX6Color\n  | HEX8Color\n\nexport type ObjectColor = Exclude<Color, string>\n\nexport interface ColorMeta {\n  rgb: RGBColor,\n  hsl: HSLColor,\n  hsv: HSVColor,\n  hex: string,\n  alpha: number,\n  rgba: RGBAColor,\n  hsla: HSLAColor,\n  hsva: HSVAColor,\n  hex8: string,\n  gray: number,\n  origin: Color\n}\n\nexport type ColorType = 'hex' | 'rgb' | 'hsv' | 'hsl'\n\nconst INTEGER_REG = '[-\\\\+]?\\\\d+%?'\nconst NUMBER_REG = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?'\n\nconst NUMBER_UNIT = `(?:${NUMBER_REG})|(?:${INTEGER_REG})`\n\nconst COLOR_REG_3 = `[\\\\s|\\\\(]+(${NUMBER_UNIT})[,|\\\\s]+(${NUMBER_UNIT})[,|\\\\s]+(${NUMBER_UNIT})\\\\s*\\\\)?`\nconst COLOR_REG_4 = `[\\\\s|\\\\(]+(${NUMBER_UNIT})[,|\\\\s]+(${NUMBER_UNIT})[,|\\\\s]+(${NUMBER_UNIT})[,|\\\\s]+(${NUMBER_UNIT})\\\\s*\\\\)?`\n\n// const UNIT_REG = new RegExp(NUMBER_UNIT)\n\n// const FORMAT_REG = /^((((?:rgb)|(?:hsl)|(?:hsv))a?)|hex[3468]?|name)$/\n\nexport const RGB_REG = new RegExp(`rgb${COLOR_REG_3}`)\nexport const RGBA_REG = new RegExp(`rgba${COLOR_REG_4}`)\nexport const HSL_REG = new RegExp(`hsl${COLOR_REG_4}`)\nexport const HSLA_REG = new RegExp(`hsla${COLOR_REG_4}`)\nexport const HSV_REG = new RegExp(`hsv${COLOR_REG_4}`)\nexport const HSVA_REG = new RegExp(`hsva${COLOR_REG_4}`)\n\nexport const HEX_REG_3 = /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/\nexport const HEX_REG_4 = /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/\nexport const HEX_REG_6 = /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\nexport const HEX_REG_8 = /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n\nexport const NAMED_COLORS = Object.freeze({\n  aliceblue: 'f0f8ff',\n  antiquewhite: 'faebd7',\n  aqua: '0ff',\n  aquamarine: '7fffd4',\n  azure: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '000',\n  blanchedalmond: 'ffebcd',\n  blue: '00f',\n  blueviolet: '8a2be2',\n  brown: 'a52a2a',\n  burlywood: 'deb887',\n  burntsienna: 'ea7e5d',\n  cadetblue: '5f9ea0',\n  chartreuse: '7fff00',\n  chocolate: 'd2691e',\n  coral: 'ff7f50',\n  cornflowerblue: '6495ed',\n  cornsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: '0ff',\n  darkblue: '00008b',\n  darkcyan: '008b8b',\n  darkgoldenrod: 'b8860b',\n  darkgray: 'a9a9a9',\n  darkgreen: '006400',\n  darkgrey: 'a9a9a9',\n  darkkhaki: 'bdb76b',\n  darkmagenta: '8b008b',\n  darkolivegreen: '556b2f',\n  darkorange: 'ff8c00',\n  darkorchid: '9932cc',\n  darkred: '8b0000',\n  darksalmon: 'e9967a',\n  darkseagreen: '8fbc8f',\n  darkslateblue: '483d8b',\n  darkslategray: '2f4f4f',\n  darkslategrey: '2f4f4f',\n  darkturquoise: '00ced1',\n  darkviolet: '9400d3',\n  deeppink: 'ff1493',\n  deepskyblue: '00bfff',\n  dimgray: '696969',\n  dimgrey: '696969',\n  dodgerblue: '1e90ff',\n  firebrick: 'b22222',\n  floralwhite: 'fffaf0',\n  forestgreen: '228b22',\n  fuchsia: 'f0f',\n  gainsboro: 'dcdcdc',\n  ghostwhite: 'f8f8ff',\n  gold: 'ffd700',\n  goldenrod: 'daa520',\n  gray: '808080',\n  green: '008000',\n  greenyellow: 'adff2f',\n  grey: '808080',\n  honeydew: 'f0fff0',\n  hotpink: 'ff69b4',\n  indianred: 'cd5c5c',\n  indigo: '4b0082',\n  ivory: 'fffff0',\n  khaki: 'f0e68c',\n  lavender: 'e6e6fa',\n  lavenderblush: 'fff0f5',\n  lawngreen: '7cfc00',\n  lemonchiffon: 'fffacd',\n  lightblue: 'add8e6',\n  lightcoral: 'f08080',\n  lightcyan: 'e0ffff',\n  lightgoldenrodyellow: 'fafad2',\n  lightgray: 'd3d3d3',\n  lightgreen: '90ee90',\n  lightgrey: 'd3d3d3',\n  lightpink: 'ffb6c1',\n  lightsalmon: 'ffa07a',\n  lightseagreen: '20b2aa',\n  lightskyblue: '87cefa',\n  lightslategray: '789',\n  lightslategrey: '789',\n  lightsteelblue: 'b0c4de',\n  lightyellow: 'ffffe0',\n  lime: '0f0',\n  limegreen: '32cd32',\n  linen: 'faf0e6',\n  magenta: 'f0f',\n  maroon: '800000',\n  mediumaquamarine: '66cdaa',\n  mediumblue: '0000cd',\n  mediumorchid: 'ba55d3',\n  mediumpurple: '9370db',\n  mediumseagreen: '3cb371',\n  mediumslateblue: '7b68ee',\n  mediumspringgreen: '00fa9a',\n  mediumturquoise: '48d1cc',\n  mediumvioletred: 'c71585',\n  midnightblue: '191970',\n  mintcream: 'f5fffa',\n  mistyrose: 'ffe4e1',\n  moccasin: 'ffe4b5',\n  navajowhite: 'ffdead',\n  navy: '000080',\n  oldlace: 'fdf5e6',\n  olive: '808000',\n  olivedrab: '6b8e23',\n  orange: 'ffa500',\n  orangered: 'ff4500',\n  orchid: 'da70d6',\n  palegoldenrod: 'eee8aa',\n  palegreen: '98fb98',\n  paleturquoise: 'afeeee',\n  palevioletred: 'db7093',\n  papayawhip: 'ffefd5',\n  peachpuff: 'ffdab9',\n  peru: 'cd853f',\n  pink: 'ffc0cb',\n  plum: 'dda0dd',\n  powderblue: 'b0e0e6',\n  purple: '800080',\n  rebeccapurple: '663399',\n  red: 'f00',\n  rosybrown: 'bc8f8f',\n  royalblue: '4169e1',\n  saddlebrown: '8b4513',\n  salmon: 'fa8072',\n  sandybrown: 'f4a460',\n  seagreen: '2e8b57',\n  seashell: 'fff5ee',\n  sienna: 'a0522d',\n  silver: 'c0c0c0',\n  skyblue: '87ceeb',\n  slateblue: '6a5acd',\n  slategray: '708090',\n  slategrey: '708090',\n  snow: 'fffafa',\n  springgreen: '00ff7f',\n  steelblue: '4682b4',\n  tan: 'd2b48c',\n  teal: '008080',\n  thistle: 'd8bfd8',\n  tomato: 'ff6347',\n  turquoise: '40e0d0',\n  violet: 'ee82ee',\n  wheat: 'f5deb3',\n  white: 'fff',\n  whitesmoke: 'f5f5f5',\n  yellow: 'ff0',\n  yellowgreen: '9acd32'\n})\n\nexport type ColorName = keyof typeof NAMED_COLORS\n\nexport const COLOR_NAMES = Object.freeze(new Set(Object.keys(NAMED_COLORS))) as Readonly<\n  Set<ColorName>\n>\n\n/**\n * 判断给定的字符串是否为一个合法颜色值\n *\n * @param value 原始字符串\n *\n * @returns 是否为合法颜色\n */\nexport function isColor(value: string): boolean {\n  value = String(value).trim().toLowerCase()\n\n  if (!value) {\n    return false\n  }\n\n  if (value === 'transparent' || NAMED_COLORS[value as ColorName]) {\n    return true\n  }\n\n  return (\n    value === 'transparent' ||\n    COLOR_NAMES.has(value as ColorName) ||\n    RGB_REG.test(value) ||\n    RGBA_REG.test(value) ||\n    HSL_REG.test(value) ||\n    HSLA_REG.test(value) ||\n    HSV_REG.test(value) ||\n    HSVA_REG.test(value) ||\n    HEX_REG_3.test(value) ||\n    HEX_REG_4.test(value) ||\n    HEX_REG_6.test(value) ||\n    HEX_REG_8.test(value)\n  )\n}\n\n/**\n * 将给定的字符串转化为 {@link ObjectColor}，无法转换时返回 null\n *\n * @param color 原始颜色字符串\n *\n * @returns 解析后的颜色对象\n */\nexport function parseStringColor(color: string): ObjectColor | null {\n  color = color.toString().trim().toLowerCase()\n\n  if (color === 'transparent') {\n    return { r: 0, g: 0, b: 0, a: 0, format: 'name', toString: toRgbString }\n  }\n\n  let named = false\n\n  if (NAMED_COLORS[color as ColorName]) {\n    color = NAMED_COLORS[color as ColorName]\n    named = true\n  }\n\n  let match\n\n  if ((match = RGB_REG.exec(color))) {\n    const { r, g, b } = normalizeRgb(match[1], match[2], match[3])\n\n    return {\n      r: r * 255,\n      g: g * 255,\n      b: b * 255,\n      format: 'rgb',\n      toString: toRgbString\n    }\n  }\n\n  if ((match = RGBA_REG.exec(color))) {\n    const { r, g, b } = normalizeRgb(match[1], match[2], match[3])\n\n    return {\n      r: r * 255,\n      g: g * 255,\n      b: b * 255,\n      a: normalizeAlpha(match[4]),\n      format: 'rgba',\n      toString: toRgbString\n    }\n  }\n\n  if ((match = HSL_REG.exec(color))) {\n    const { h, s, l } = normalizeHsl(match[0], match[1], match[3])\n\n    return { h: h * 360, s, l, format: 'hsl', toString: toHslString }\n  }\n\n  if ((match = HSLA_REG.exec(color))) {\n    const { h, s, l } = normalizeHsl(match[0], match[1], match[3])\n\n    return {\n      h: h * 360,\n      s,\n      l,\n      a: normalizeAlpha(match[4]),\n      format: 'hsla',\n      toString: toHslString\n    }\n  }\n\n  if ((match = HSV_REG.exec(color))) {\n    const { h, s, v } = normalizeHsv(match[0], match[1], match[3])\n\n    return { h: h * 360, s, v, format: 'hsv', toString: toHsvString }\n  }\n\n  if ((match = HSVA_REG.exec(color))) {\n    const { h, s, v } = normalizeHsv(match[0], match[1], match[3])\n\n    return {\n      h: h * 360,\n      s,\n      v,\n      a: normalizeAlpha(match[4]),\n      format: 'hsva',\n      toString: toHsvString\n    }\n  }\n\n  if ((match = HEX_REG_3.exec(color))) {\n    return {\n      r: parseInt(`${match[1]}${match[1]}`, 16),\n      g: parseInt(`${match[2]}${match[2]}`, 16),\n      b: parseInt(`${match[3]}${match[3]}`, 16),\n      format: named ? 'name' : 'hex3',\n      toString: toRgbString\n    }\n  }\n\n  if ((match = HEX_REG_4.exec(color))) {\n    return {\n      r: parseInt(`${match[1]}${match[1]}`, 16),\n      g: parseInt(`${match[2]}${match[2]}`, 16),\n      b: parseInt(`${match[3]}${match[3]}`, 16),\n      a: convertHexToDecimal(`${match[4]}${match[4]}`),\n      format: named ? 'name' : 'hex4',\n      toString: toRgbString\n    }\n  }\n\n  if ((match = HEX_REG_6.exec(color))) {\n    return {\n      r: parseInt(match[1], 16),\n      g: parseInt(match[2], 16),\n      b: parseInt(match[3], 16),\n      format: named ? 'name' : 'hex6',\n      toString: toRgbString\n    }\n  }\n\n  if ((match = HEX_REG_8.exec(color))) {\n    return {\n      r: parseInt(match[1], 16),\n      g: parseInt(match[2], 16),\n      b: parseInt(match[3], 16),\n      a: convertHexToDecimal(match[4]),\n      format: named ? 'name' : 'hex8',\n      toString: toRgbString\n    }\n  }\n\n  return null\n}\n\n/**\n * 将给定的 {@link Color} 解析为 {@link ColorMeta}\n *\n * @param color 原始颜色值\n *\n * @returns 解析后的颜色元数据\n */\nexport function parseColor(color: Color): ColorMeta {\n  const { a, ...rgb } = parseColorToRgba(color)\n\n  delete rgb.format\n\n  const hsl = rgbToHsl(rgb.r, rgb.g, rgb.b)\n  const hsv = rgbToHsv(rgb.r, rgb.g, rgb.b)\n  const hex = rgbToHex(rgb.r, rgb.g, rgb.b)\n\n  const hex8 = rgbaToHex(rgb.r, rgb.g, rgb.b, a)\n\n  return {\n    rgb: rgb as RGBColor,\n    hsl,\n    hsv,\n    hex,\n    alpha: a,\n    rgba: { ...rgb, a, format: 'rgba' },\n    hsla: { ...hsl, a, format: 'hsla' },\n    hsva: { ...hsv, a, format: 'hsva' },\n    hex8,\n    gray: rgbToGrayScale(rgb),\n    origin: color\n  }\n}\n\n/**\n * 将给定的 {@link Color} 解析为 {@link RGBAColor}\n *\n * @param originColor 原始颜色值\n *\n * @returns 解析后的 RGB 颜色对象\n */\nexport function parseColorToRgba(originColor: Color): RGBAColor {\n  let rgb: RGBColor = { r: 0, g: 0, b: 0 }\n  let a = 1\n  let color: Color | null\n\n  if (typeof originColor === 'string') {\n    color = parseStringColor(originColor)\n  } else {\n    color = originColor\n  }\n\n  if (color !== null && typeof color === 'object') {\n    if ('l' in color) {\n      rgb = hslToRgb(color.h, color.s, color.l)\n    } else if ('v' in color) {\n      rgb = hsvToRgb(color.h, color.s, color.v)\n    }\n\n    if ('a' in color) {\n      a = normalizeAlpha(color.a ?? 1)\n\n      if (Number.isNaN(a)) {\n        a = 1\n      }\n    }\n\n    rgb = color as RGBColor\n  }\n\n  return { ...rgb, a, format: 'rgba', toString: toRgbString }\n}\n\n/**\n * 将原始的 h、s、l 值标准化为 0 ~ 1 的值\n *\n * @param h 0 ~ 360\n * @param s 0 ~ 1，0% ~ 100%\n * @param l 0 ~ 1，0% ~ 100%\n *\n * @returns 标准化后的 HSL 对象\n */\nexport function normalizeHsl(h: number | string, s: number | string, l: number | string) {\n  return {\n    h: boundRange(h, 0, 360) / 360,\n    s: boundRange(isPercentage(s) ? parsePercentage(s) : s, 0, 1),\n    l: boundRange(isPercentage(l) ? parsePercentage(l) : l, 0, 1)\n  }\n}\n\n/**\n * 将原始的 r、g、b 值标准化为 0 ~ 1 的值\n *\n * @param r 0 ~ 255\n * @param g 0 ~ 255\n * @param b 0 ~ 255\n *\n * @returns 标准化后 RGB 对象\n */\nexport function normalizeRgb(r: number | string, g: number | string, b: number | string) {\n  return {\n    r: boundRange(r, 0, 255) / 255,\n    g: boundRange(g, 0, 255) / 255,\n    b: boundRange(b, 0, 255) / 255\n  }\n}\n\n/**\n * 将原始的 h、s、v 值标准化为 0 ~ 1 的值\n *\n * @param h 0 ~ 360\n * @param s 0 ~ 1，0% ~ 100%\n * @param v 0 ~ 1，0% ~ 100%\n *\n * @returns 标准化的 HSV 对象\n */\nexport function normalizeHsv(h: number | string, s: number | string, v: number | string) {\n  return {\n    h: boundRange(h, 0, 360) / 360,\n    s: boundRange(isPercentage(s) ? parsePercentage(s) : s, 0, 1),\n    v: boundRange(isPercentage(v) ? parsePercentage(v) : v, 0, 1)\n  }\n}\n\n/**\n * 将原始透明度值标准化为 0 ~ 1 的值\n *\n * @param a 0 ~ 1，0% ~ 100%\n *\n * @returns 标准化后的透明度\n */\nexport function normalizeAlpha(a: number | string) {\n  return boundRange(isPercentage(a) ? parsePercentage(a) : a, 0, 1)\n}\n\n/**\n * 将 HSL 颜色转换为 RGB 颜色\n *\n * @param h 0 ~ 360\n * @param s 0 ~ 1，0% ~ 100%\n * @param l 0 ~ 1，0% ~ 100%\n *\n * @returns 转换后的 RGB 颜色\n */\nexport function hslToRgb(h: number | string, s: number | string, l: number | string): RGBColor {\n  let r, g, b\n  ;({ h, s, l } = normalizeHsl(h, s, l))\n\n  if (s === 0) {\n    r = g = b = l\n  } else {\n    const q = l < 0.5 ? 1 * (1 + s) : l + s - l * s\n    const p = 2 * l - q\n\n    r = hueToRgb(p, q, h + 1 / 3)\n    g = hueToRgb(p, q, h)\n    b = hueToRgb(p, q, h - 1 / 3)\n  }\n\n  r *= 255\n  g *= 255\n  b *= 255\n\n  return { r, g, b, toString: toRgbString }\n}\n\n/**\n * 将 RGB 颜色转换为 HSL 颜色\n *\n * @param r 0 ~ 255\n * @param g 0 ~ 255\n * @param b 0 ~ 255\n *\n * @returns 转换后的 HSL 颜色\n */\nexport function rgbToHsl(r: number | string, g: number | string, b: number | string): HSLColor {\n  ;({ r, g, b } = normalizeRgb(r, g, b))\n\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n  let h, s\n\n  const l = (max + min) / 2\n\n  if (max === min) {\n    h = s = 0\n  } else {\n    const d = max - min\n\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n\n    switch (max) {\n      case r: {\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      }\n      case g: {\n        h = (b - r) / d + 2\n        break\n      }\n      case b: {\n        h = (r - g) / d + 4\n        break\n      }\n      default: {\n        h = 0\n      }\n    }\n\n    h *= 60\n  }\n\n  return { h, s, l, toString: toHslString }\n}\n\n/**\n * 将 HSL 颜色转换为 HSV 颜色\n *\n * @param h 0 ~ 360\n * @param s 0 ~ 1，0% ~ 100%\n * @param l 0 ~ 1，0% ~ 100%\n *\n * @returns 转换后的 HSV 颜色\n */\nexport function hslToHsv(h: number | string, s: number | string, l: number | string): HSVColor {\n  ;({ h, s, l } = normalizeHsl(h, s, l))\n\n  const v = 0.5 * (2 * l + s * (1 - Math.abs(2 * l - 1)))\n\n  s = (2 * (v - l)) / v\n\n  return { h: h * 360, s, v, toString: toHsvString }\n}\n\n/**\n * 将 HSV 颜色转换为 HSL 颜色\n *\n * @param h 0 ~ 360\n * @param s 0 ~ 1，0% ~ 100%\n * @param v 0 ~ 1，0% ~ 100%\n *\n * @returns 转换后的 HSL 颜色\n */\nexport function hsvToHsl(h: number | string, s: number | string, v: number | string): HSLColor {\n  ;({ h, s, v } = normalizeHsv(h, s, v))\n\n  const l = 0.5 * v * (2 - s)\n\n  s = (v * s) / (1 - Math.abs(2 * l - 1))\n\n  return { h: h * 360, s, l, toString: toHslString }\n}\n\n/**\n * 将 HSV 颜色转换为 RGB 颜色\n *\n * @param h 0 ~ 360\n * @param s 0 ~ 1，0% ~ 100%\n * @param v 0 ~ 1，0% ~ 100%\n *\n * @returns 转换后的 RGB 颜色\n */\nexport function hsvToRgb(h: number | string, s: number | string, v: number | string): RGBColor {\n  ;({ h, s, v } = normalizeHsv(h, s, v))\n\n  h *= 6\n\n  const i = Math.floor(h)\n  const f = h - i\n  const p = v * (1 - s)\n  const q = v * (1 - f * s)\n  const t = v * (1 - (1 - f) * s)\n  const mod = i % 6\n\n  let r = [v, q, p, p, t, v][mod]\n  let g = [t, v, v, q, p, p][mod]\n  let b = [p, p, t, v, v, q][mod]\n\n  r *= 255\n  g *= 255\n  b *= 255\n\n  return { r, g, b, toString: toRgbString }\n}\n\n/**\n * 将 RGB 颜色转换为 HSV 颜色\n *\n * @param r 0 ~ 255\n * @param g 0 ~ 255\n * @param b 0 ~ 255\n *\n * @returns 转换后的 HSV 颜色\n */\nexport function rgbToHsv(r: number | string, g: number | string, b: number | string): HSVColor {\n  ;({ r, g, b } = normalizeRgb(r, g, b))\n\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n\n  let h\n\n  const v = max\n  const d = max - min\n  const s = max === 0 ? 0 : d / max\n\n  if (max === min) {\n    h = 0\n  } else {\n    switch (max) {\n      case r: {\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      }\n      case g: {\n        h = (b - r) / d + 2\n        break\n      }\n      case b: {\n        h = (r - g) / d + 4\n        break\n      }\n      default: {\n        h = 0\n      }\n    }\n\n    h *= 60\n  }\n\n  return { h, s, v, toString: toHsvString }\n}\n\n/**\n * 将 RGB 颜色转换为 HEX 颜色\n *\n * @param r 0 ~ 255\n * @param g 0 ~ 255\n * @param b 0 ~ 255\n * @param allow3Char 是否允许 3 位的 HEX 值\n *\n * @returns 转换后的 HEX 颜色\n */\nexport function rgbToHex(\n  r: number | string,\n  g: number | string,\n  b: number | string,\n  allow3Char = false\n) {\n  ;({ r, g, b } = normalizeRgb(r, g, b))\n\n  const hex = [\n    repairDigits(Math.round(r * 255).toString(16)),\n    repairDigits(Math.round(g * 255).toString(16)),\n    repairDigits(Math.round(b * 255).toString(16))\n  ]\n\n  if (allow3Char && isRepetitive(hex[0]) && isRepetitive(hex[1]) && isRepetitive(hex[2])) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0)\n  }\n\n  return '#' + hex.join('')\n}\n\n/**\n * 将 RGBA 颜色转换为 HEX 颜色\n *\n * @param r 0 ~ 255\n * @param g 0 ~ 255\n * @param b 0 ~ 255\n * @param a 0 ~ 1，0% ~ 100%\n * @param allow4Char 是否允许 4 位的 HEX 值\n *\n * @returns 转换后的 HEX 颜色\n */\nexport function rgbaToHex(\n  r: number | string,\n  g: number | string,\n  b: number | string,\n  a: number | string,\n  allow4Char = false\n) {\n  ;({ r, g, b } = normalizeRgb(r, g, b))\n\n  const hex = [\n    repairDigits(Math.round(r * 255).toString(16)),\n    repairDigits(Math.round(g * 255).toString(16)),\n    repairDigits(Math.round(b * 255).toString(16)),\n    repairDigits(convertDecimalToHex(normalizeAlpha(a)))\n  ]\n\n  if (\n    allow4Char &&\n    isRepetitive(hex[0]) &&\n    isRepetitive(hex[1]) &&\n    isRepetitive(hex[2]) &&\n    isRepetitive(hex[3])\n  ) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0)\n  }\n\n  return '#' + hex.join('')\n}\n\n/**\n * 将两种颜色按照一定的比例混合\n *\n * @param color1 第一种颜色\n * @param color2 第二种颜色\n * @param weight 混合比例 0 ~ 1，越小则第一种颜色越少\n *\n * @returns 混合后的颜色\n */\nexport function mixColor(color1: Color, color2: Color, weight = 0.5): RGBAColor {\n  if (!color1 && !color2) return { r: 0, g: 0, b: 0, a: 1 }\n  if (!color1) return parseColorToRgba(color2)\n  if (!color2) return parseColorToRgba(color1)\n\n  const rgba1 = parseColorToRgba(color1)\n  const rgba2 = parseColorToRgba(color2)\n\n  const originalWeight = boundRange(weight, 0, 1)\n  const normalizedWeight = originalWeight * 2 - 1\n\n  const alphaDistance = rgba1.a - rgba2.a\n  const mixWeight =\n    normalizedWeight * alphaDistance === -1\n      ? normalizedWeight\n      : (normalizedWeight + alphaDistance) / (1 + normalizedWeight * alphaDistance)\n  const weight1 = (mixWeight + 1) / 2\n  const weight2 = 1 - weight1\n\n  return {\n    r: Math.round(rgba1.r * weight1 + rgba2.r * weight2),\n    g: Math.round(rgba1.g * weight1 + rgba2.g * weight2),\n    b: Math.round(rgba1.b * weight1 + rgba2.b * weight2),\n    a: Math.round(rgba1.a * originalWeight + rgba2.a * (1 - originalWeight)),\n    format: 'rgba',\n    toString: toRgbString\n  }\n}\n\n/**\n * 调整给定颜色值的透明度\n *\n * @param color 需要调整的颜色\n * @param alpha 调整后的透明度 0 ~ 1，0% ~ 100%\n *\n * @returns 调整后的颜色\n */\nexport function adjustAlpha(color: Color, alpha: number | string) {\n  const rgba = parseColorToRgba(color)\n\n  rgba.a = normalizeAlpha(alpha)\n\n  return rgba\n}\n\n/**\n * 随机生成一个颜色值\n *\n * @param withAlpha 是否具有透明度\n * @param type 颜色的类型\n *\n * @returns 生成的颜色字面值\n */\nexport function randomColor(withAlpha = false, type: ColorType = 'hex') {\n  const r = Math.round(Math.random() * 255)\n  const g = Math.round(Math.random() * 255)\n  const b = Math.round(Math.random() * 255)\n\n  if (type === 'hex') {\n    return withAlpha ? rgbaToHex(r, g, b, Math.random()) : rgbToHex(r, g, b)\n  }\n\n  let color: ObjectColor\n\n  if (type === 'hsl') {\n    color = rgbToHsl(r, g, b)\n  } else if (type === 'hsv') {\n    color = rgbToHsv(r, g, b)\n  } else {\n    color = Object.create({ r, g, b, toString: toRgbString })\n  }\n\n  if (withAlpha) {\n    ;(color as RGBAColor).a = Math.random()\n  }\n\n  return color.toString()\n}\n\n/**\n * 随机生成一个特定色调（冷暖色）的颜色值\n *\n * @param prefer 色调\n * @param withAlpha 是否具有透明度\n * @param type 颜色的类型\n *\n * @returns 生成的颜色字面值\n */\nexport function randomPreferColor(\n  prefer: 'hard' | 'soft',\n  withAlpha = false,\n  type: ColorType = 'hex'\n) {\n  const h = Math.round(Math.random() * 360)\n  const s = Math.round(prefer === 'hard' ? 80 + Math.random() * 20 : 20 + Math.random() * 70) / 100\n  const l = Math.round(prefer === 'hard' ? 40 + Math.random() * 20 : 80 + Math.random() * 15) / 100\n\n  if (type === 'hsl') {\n    return toHslString.bind({ h, s, l })()\n  }\n\n  let color!: ObjectColor\n\n  if (type === 'hex' || type === 'rgb') {\n    color = hslToRgb(h, s, l)\n\n    if (type === 'hex') {\n      const { r, g, b } = color\n\n      return withAlpha ? rgbaToHex(r, g, b, Math.random()) : rgbToHex(r, g, b)\n    }\n  } else if (type === 'hsv') {\n    color = hslToHsv(h, s, l)\n  }\n\n  if (withAlpha) {\n    ;(color as RGBAColor).a = Math.random()\n  }\n\n  return color.toString()\n}\n\n/**\n * 随机生成一个冷色调的颜色值\n *\n * @param withAlpha 是否具有透明度\n * @param type 颜色的类型\n *\n * @returns 生成的颜色字面值\n */\nexport function randomHardColor(withAlpha = false, type: ColorType = 'hex') {\n  return randomPreferColor('hard', withAlpha, type)\n}\n\n/**\n * 随机生成一个暖色调的颜色值\n *\n * @param withAlpha 是否具有透明度\n * @param type 颜色的类型\n *\n * @returns 生成的颜色字面值\n */\nexport function randomSoftColor(withAlpha = false, type: ColorType = 'hex') {\n  return randomPreferColor('soft', withAlpha, type)\n}\n\n/**\n * 获取给定颜色的灰度\n *\n * @param color 颜色字面值\n *\n * @returns 颜色的灰度\n */\nexport function toGrayScale(color: string) {\n  return rgbToGrayScale(parseColorToRgba(color))\n}\n\nfunction repairDigits(str: string) {\n  return str.length === 1 ? `0${str}` : str.toString()\n}\n\nfunction isRepetitive(string: string): boolean {\n  return string.charAt(0) === string.charAt(1)\n}\n\n// function testUnit(color: number | string): boolean {\n//   return UNIT_REG.test(color as string)\n// }\n\nfunction convertDecimalToHex(number: number | string): string {\n  return Math.round(parseFloat(number as string) * 255).toString(16)\n}\n\nfunction convertHexToDecimal(hex: string): number {\n  return parseInt(hex, 16) / 255\n}\n\nfunction boundRange(number: number | string, min: number, max: number): number {\n  return Math.max(min, Math.min(max, parseFloat(number as string)))\n}\n\nfunction hueToRgb(p: number, q: number, t: number): number {\n  if (t < 0) t += 1\n  if (t > 1) t -= 1\n  if (t < 1 / 6) return p + (q - p) * 6 * t\n  if (t < 1 / 2) return q\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n\n  return p\n}\n\nfunction isPercentage(percent: number | string): boolean {\n  return String(percent).trim().includes('%')\n}\n\nfunction parsePercentage(percent: number | string): number {\n  const number = parseFloat(percent as string) / 100\n\n  return Number.isNaN(number) ? 0 : number\n}\n\nfunction toRgbString(this: RGB) {\n  if (isDefined(this.a) && this.a >= 0 && this.a < 1) {\n    return `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})`\n  }\n\n  return `rgb(${this.r}, ${this.g}, ${this.b})`\n}\n\nfunction toHslString(this: HSL) {\n  const s = `${this.s * 100}%`\n  const l = `${this.l * 100}%`\n\n  if (isDefined(this.a) && this.a >= 0 && this.a < 1) {\n    return `hsla(${this.h}, ${s}, ${l}, ${this.a})`\n  }\n\n  return `hsl(${this.h}, ${s}, ${l})`\n}\n\nfunction toHsvString(this: HSV) {\n  const s = `${this.s * 100}%`\n  const v = `${this.v * 100}%`\n\n  if (isDefined(this.a) && this.a >= 0 && this.a < 1) {\n    return `hsva(${this.h}, ${s}, ${v}, ${this.a})`\n  }\n\n  return `hsv(${this.h}, ${s}, ${v})`\n}\n\nfunction rgbToGrayScale(rgb: RGB) {\n  return (rgb.r * 0.2126 + rgb.g * 0.7152 + rgb.b * 0.0722) / 255\n}\n", "export interface BITree {\n  tree: number[],\n  /**\n   * 为第 index 个元素增减值\n   *\n   * @param index 索引值\n   * @param num 增减的值\n   */\n  add(index: number, num: number): void,\n  /**\n   * 求前 index 个元素的和\n   *\n   * @param index 索引值\n   *\n   * @returns 前 index 个元素的和\n   */\n  sum(index?: number): number,\n  /**\n   * 获取第 index 个元素的值\n   *\n   * @param index 索引值\n   *\n   * @returns 第 index 个元素的值\n   */\n  get(index: number): number,\n  /**\n   * 根据目标值寻找一个最接近的元素的索引值\n   *\n   * @param target 目标值\n   *\n   * @returns 最接近的元素的索引值\n   */\n  boundIndex(target: number): number\n}\n\nfunction lowBit(num: number) {\n  return num & -num\n}\n\n/**\n * 创建一个二叉索引树（Fenwick 树）对象\n *\n * 为了节省初始化性能开销，需确保元素最小值已知，其初始值为：元素最小值 * 元素总数\n *\n * @param length 树的大小，即元素的总数\n * @param min 规定元素的最小值\n *\n * @returns 二叉索引树对象\n */\nexport function createBITree(length: number, min = 0): BITree {\n  const tree: number[] = new Array(length + 1).fill(0)\n\n  function add(index: number, delta: number) {\n    if (!delta || index >= length) return\n\n    index += 1\n\n    while (index <= length) {\n      tree[index] += delta\n      index += lowBit(index)\n    }\n  }\n\n  function sum(index = length) {\n    if (index <= 0) return 0\n    if (index > length) index = length\n\n    let sum = index * min\n\n    while (index > 0) {\n      sum += tree[index]\n      index -= lowBit(index)\n    }\n\n    return sum\n  }\n\n  function get(index: number) {\n    return sum(index + 1) - sum(index)\n  }\n\n  function boundIndex(target: number) {\n    let left = 0\n    let right = length\n\n    while (right > left) {\n      const middle = Math.floor((left + right) / 2)\n      const total = sum(middle)\n\n      if (total > target) {\n        right = middle\n        continue\n      } else if (total < target) {\n        if (left === middle) {\n          return sum(left + 1) <= target ? left + 1 : left\n        }\n\n        left = middle\n      } else {\n        return middle\n      }\n    }\n\n    return left\n  }\n\n  return { tree, add, sum, get, boundIndex }\n}\n", "import type { AnyCase } from './word-case'\n\nexport const numberRE = /^\\s*[+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?\\s*$/\n\n/**\n * 检测给定的值是否可以通过 parseFlat 或 Number 方法转为数字\n *\n * 开启严格模式则通过正则以更严格的方法判断\n *\n * @param value 需要检测的值\n * @param strict 是否为严格模式\n *\n * @returns 值是否可以转为数字\n */\nexport function isValidNumber(value: unknown, strict = false) {\n  if (typeof value === 'number') {\n    return !Number.isNaN(value)\n  }\n\n  if (strict) {\n    return numberRE.test(String(value))\n  }\n\n  return !Number.isNaN(parseFloat(value as string)) || !Number.isNaN(Number(value))\n}\n\n/**\n * 将给定的值转成数字，NaN 的情况将会处理成 0\n *\n * @param value 需要转换的值\n *\n * @returns 转换后的数字\n */\nexport function toNumber(value: unknown) {\n  let number = parseFloat(value as string)\n\n  if (Number.isNaN(number)) {\n    number = Number(value)\n  }\n\n  return Number.isNaN(number) ? 0 : number\n}\n\n/**\n * 为给定的整数开头填充 0，直至满足指定的长度\n *\n * @param number 需要处理的整数\n * @param length 填充至的长度\n *\n * @returns 填充后的字面值\n */\nexport function padStartZeros(number: number, length: number) {\n  if (length <= 0) {\n    return number.toString()\n  }\n\n  return `${number < 0 ? '-' : ''}${String(Math.abs(Math.round(number))).padStart(length, '0')}`\n}\n\n/**\n * 将小于 10 整数 N 变成 `0N` 的字符串，方法不会对入参校验\n *\n * @param number 需要处理的整数\n *\n * @returns 填充后的字面值\n */\nexport function doubleDigits(number: number) {\n  return padStartZeros(number, 2)\n}\n\n/**\n * 返回数字的小数位数\n *\n * @param number 指定的数字\n *\n * @returns 数字的小数位数\n */\nexport function decimalLength(number: number | string) {\n  // Get digit length of e\n  const eSplit = number.toString().split(/[eE]/)\n  const len = (eSplit[0].split('.')[1] || '').length - +(eSplit[1] || 0)\n\n  return len > 0 ? len : 0\n}\n\n/**\n * Return decimal length of a number\n *\n * @param number The input number\n * @deprecated Using `decimalLength` to replace it\n */\nexport function digitLength(number: number | string) {\n  return decimalLength(number)\n}\n\n/**\n * 将给定的数字格式化为指定的位阶\n *\n * @param number 需要格式化的数字\n * @param segment 分隔的位数，默认为 3\n * @param separator 分隔的符号，默认为 ','\n *\n * @returns 格式化后的字面值\n */\nexport function segmentNumber(number: number | string, segment = 3, separator = ',') {\n  if (typeof number !== 'number') {\n    number = parseFloat(number)\n  }\n\n  if (Number.isNaN(number)) return '0'\n\n  let [integer, decimal] = String(number).split('.')\n\n  const formatRegExp = new RegExp(`(\\\\d+)(\\\\d{${segment}})`)\n\n  while (formatRegExp.test(integer)) {\n    integer = integer.replace(formatRegExp, `$1${separator}$2`)\n  }\n\n  decimal = decimal ? `.${decimal}` : ''\n\n  return `${integer}${decimal}`\n}\n\n/**\n * 将给定的实数保留一定的小数\n *\n * @param number 需要处理的实数\n * @param decimal 需要保留的小数\n *\n * @returns 保留小数后的值\n */\nexport function toFixed(number: number, decimal: number) {\n  if (decimal === 0) return Math.round(number)\n\n  let snum = number.toFixed(decimalLength(number))\n\n  const pointPos = snum.indexOf('.')\n\n  if (pointPos === -1) return number\n\n  const nums = snum.replace('.', '').split('')\n  const targetPos = pointPos + decimal\n  const datum = nums[targetPos]\n\n  if (!datum) return number\n\n  if (snum.charAt(targetPos + 1) === '5') {\n    snum = snum.substring(0, targetPos + 1) + '6'\n  } else {\n    snum = snum.substring(0, targetPos + 2)\n  }\n\n  return parseFloat(Number(snum).toFixed(decimal))\n}\n\n/**\n * 将给定的实数扩大一定的倍数并保留一定的小数\n *\n * @param number 要处理的实数\n * @param multiple 要扩大的倍数\n * @param decimal 要保留的小数\n *\n * @returns 扩大并保留小数后的值\n */\nexport function multipleFixed(number: number, multiple: number, decimal: number) {\n  return toFixed(number * multiple, decimal)\n}\n\n/**\n * 根据临界值对给定的数字进行舍入\n *\n * @param number 需要舍入的数\n * @param criticalValue 舍入的临界值 (0 ~ 1)，达到临界值进位反之舍弃\n *\n * @returns 舍入后的值\n */\nexport function round(number: number, criticalValue: number) {\n  if (criticalValue < 0 || criticalValue > 1) {\n    return Math.round(number)\n  }\n\n  const ceilValue = Math.ceil(number)\n\n  if (number + 1 - criticalValue >= ceilValue) {\n    return ceilValue\n  } else {\n    return Math.floor(number)\n  }\n}\n\n/**\n * 将给定的数字限定在指定的范围内\n *\n * @param number 需要限定范围的数\n * @param min 边界最小值，包含该值\n * @param max 边界最大值，包含该值\n *\n * @returns 限定在范围内的值\n */\nexport function boundRange(number: number | string, min: number, max: number) {\n  return Math.max(min, Math.min(max, parseFloat(number as string)))\n}\n\n/**\n * 将给定的被除数和除数，不断的取余直至达到次数限制或余数小于除数，返回系列余数\n *\n * @param number 被除数，需大于 0\n * @param divideBy 除数，需大于 1\n * @param limit 次数限制，默认为 0，小于 1 则不作限制\n *\n * @returns 相除过程的系列余数\n */\nexport function leaveNumber(number: number, divideBy: number, limit = 0) {\n  if (number <= 0 || divideBy <= 1) return [number]\n\n  if (limit < 1) {\n    limit = Infinity\n  }\n\n  const remainders: number[] = []\n  let count = 0\n\n  while (number >= divideBy && count < limit) {\n    remainders.push(number % divideBy)\n    number = Math.floor(number / divideBy)\n    ++count\n  }\n\n  remainders.push(number)\n\n  return remainders.reverse()\n}\n\nexport type SizeUnitWithAuto = AnyCase<'B' | 'KB' | 'MB' | 'GB' | 'TB' | 'AUTO'>\nexport type SizeUnit = Exclude<SizeUnitWithAuto, AnyCase<'AUTO'>>\n\nconst SIZE_UNIT_WITH_AUTO = Object.freeze([\n  'B',\n  'KB',\n  'MB',\n  'GB',\n  'TB',\n  'AUTO'\n] as Uppercase<SizeUnitWithAuto>[])\n\n/**\n * 根据给定的 Byte 数值，将其格式化成指定单位的大小\n *\n * @param byte 需要计算的 Byte 数值\n * @param unit 格式化的单位\n * @param precision 结果的精度\n * @param joinUtil 是否加入单位\n *\n * @returns 格式化后的值\n */\nexport function formatByteSize(byte: number, unit?: SizeUnitWithAuto): number\nexport function formatByteSize(byte: number, unit?: SizeUnitWithAuto, precision?: number): number\nexport function formatByteSize(byte: number, unit?: SizeUnitWithAuto, joinUtil?: true): number\nexport function formatByteSize(\n  byte: number,\n  unit?: SizeUnitWithAuto,\n  joinUtil?: true,\n  precision?: number\n): number\nexport function formatByteSize(\n  byte: number,\n  unit: SizeUnitWithAuto = 'AUTO',\n  joinUtil: number | boolean = false,\n  precision?: number\n) {\n  if (typeof precision === 'undefined') {\n    if (typeof joinUtil === 'number') {\n      precision = joinUtil\n      joinUtil = false\n    } else {\n      precision = 2\n    }\n  }\n\n  let upperUnit = unit.toUpperCase() as Uppercase<SizeUnitWithAuto>\n  upperUnit = SIZE_UNIT_WITH_AUTO.includes(upperUnit) ? upperUnit : 'AUTO'\n\n  let power\n  switch (upperUnit) {\n    case 'AUTO':\n      power = 0\n      break\n    case 'KB':\n      power = 1\n      break\n    case 'MB':\n      power = 2\n      break\n    case 'GB':\n      power = 3\n      break\n    case 'TB':\n      power = 4\n      break\n    default:\n      return byte\n  }\n\n  let targetSize\n\n  if (!power) {\n    for (targetSize = byte; targetSize > 1024; ++power) {\n      if (power > 4) break\n      targetSize = targetSize / 1024\n    }\n  } else {\n    targetSize = byte / 1024 ** power\n  }\n\n  targetSize = toFixed(targetSize, precision)\n\n  return joinUtil\n    ? `${targetSize}${upperUnit === 'AUTO' ? SIZE_UNIT_WITH_AUTO[Math.min(power, 4)] : upperUnit}`\n    : targetSize\n}\n\n/**\n * 在给定的范围内随机一个数\n *\n * @param max 最大值\n * @param min 最小值，默认为 0\n *\n * @returns 生成的随机数\n */\nexport function random(max: number, min = 0) {\n  if (min === max) return min\n\n  if (min > max) {\n    ;[min, max] = [max, min]\n  }\n\n  return Math.random() * (max - min) + min\n}\n\n/**\n * 将数字处理为的指定的有效位数\n *\n * @param number 需要处理的数字\n * @param precision 数字的有效位数\n *\n * @returns 处理后的数字\n *\n * @example\n * ```ts\n * toPrecision(0.09999999999999998) === 0.1 // true\n * ```\n */\nexport function toPrecision(number: number | string, precision = 15) {\n  return +parseFloat(Number(number).toPrecision(precision))\n}\n\nfunction multipleInt(number: number | string) {\n  const snum = String(number)\n\n  if (!snum.includes('e')) {\n    return Number(snum.replace('.', ''))\n  }\n\n  const dLength = decimalLength(number)\n\n  return dLength > 0 ? toPrecision(Number(number) * 10 ** dLength) : Number(number)\n}\n\n/**\n * Create an operation to support rest params.\n *\n * @param operation The original operation\n */\nfunction createOperation(operation: (n1: number | string, n2: number | string) => number) {\n  return (...numbers: (number | string)[]) => {\n    let result = numbers[0] as number\n\n    for (let i = 1, len = numbers.length; i < len; ++i) {\n      result = operation(result, numbers[i])\n    }\n\n    return result\n  }\n}\n\n/**\n * 精确的乘法\n *\n * @param numbers 需要依次相乘的数字\n *\n * @returns 乘积\n */\nexport const times = createOperation((number1, number2) => {\n  const int1 = multipleInt(number1)\n  const int2 = multipleInt(number2)\n  const base = decimalLength(number1) + decimalLength(number2)\n  const int = int1 * int2\n\n  return int / 10 ** base\n})\n\n/**\n * 精确的加法\n *\n * @param numbers 需要依次相加的数字\n *\n * @returns 和\n */\nexport const plus = createOperation((number1, number2) => {\n  const base = 10 ** Math.max(decimalLength(number1), decimalLength(number2))\n\n  return (times(number1, base) + times(number2, base)) / base\n})\n\n/**\n * 精确的减法\n *\n * @param numbers 需要依次相减的数字\n *\n * @returns 差值\n */\nexport const minus = createOperation((number1, number2) => {\n  const base = 10 ** Math.max(decimalLength(number1), decimalLength(number2))\n\n  return (times(number1, base) - times(number2, base)) / base\n})\n\n/**\n * 精确的除法\n *\n * @param numbers 需要依次相除的数字\n *\n * @returns 商\n */\nexport const divide = createOperation((number1, number2) => {\n  const int1 = multipleInt(number1)\n  const int2 = multipleInt(number2)\n\n  return times(int1 / int2, toPrecision(10 ** (decimalLength(number2) - decimalLength(number1))))\n})\n", "import { doubleDigits } from './number'\n\nexport type Dateable = number | string | Date\n\n/** @deprecated renames to `SECOND_ON_MILLISECONDS` */\nexport const SECOND_ON_MILLS = 1000\nexport const SECOND_ON_MILLISECONDS = 1000\n\nexport const MINUTE_ON_SECONDS = 60\n/** @deprecated renames to `MINUTE_ON_MILLISECONDS` */\nexport const MINUTE_ON_MILLS = MINUTE_ON_SECONDS * SECOND_ON_MILLISECONDS\nexport const MINUTE_ON_MILLISECONDS = MINUTE_ON_SECONDS * SECOND_ON_MILLISECONDS\n\nexport const HOUR_ON_MINUTES = 60\nexport const HOUR_ON_SECONDS = HOUR_ON_MINUTES * MINUTE_ON_SECONDS\n/** @deprecated renames to `HOUR_ON_MILLISECONDS` */\nexport const HOUR_ON_MILLS = HOUR_ON_SECONDS * SECOND_ON_MILLISECONDS\nexport const HOUR_ON_MILLISECONDS = HOUR_ON_SECONDS * SECOND_ON_MILLISECONDS\n\nexport const DAY_ON_HOURS = 24\nexport const DAY_ON_MINUTES = DAY_ON_HOURS * HOUR_ON_MINUTES\nexport const DAY_ON_SECONDS = DAY_ON_MINUTES * MINUTE_ON_SECONDS\n/** @deprecated renames to `DAY_ON_MILLISECONDS` */\nexport const DAY_ON_MILLS = DAY_ON_SECONDS * SECOND_ON_MILLISECONDS\nexport const DAY_ON_MILLISECONDS = DAY_ON_SECONDS * SECOND_ON_MILLISECONDS\n\nexport const WEEK_ON_DAYS = 7\nexport const WEEK_ON_HOURS = WEEK_ON_DAYS * DAY_ON_HOURS\nexport const WEEK_ON_MINUTES = WEEK_ON_HOURS * HOUR_ON_MINUTES\nexport const WEEK_ON_SECONDS = WEEK_ON_MINUTES * MINUTE_ON_SECONDS\n/** @deprecated renames to `WEEK_ON_MILLISECONDS` */\nexport const WEEK_ON_MILLS = WEEK_ON_SECONDS * SECOND_ON_MILLISECONDS\nexport const WEEK_ON_MILLISECONDS = WEEK_ON_SECONDS * SECOND_ON_MILLISECONDS\n\nexport const QUARTER_ON_MONTHS = 3\n\nexport const YEAR_ON_QUARTERS = 4\nexport const YEAR_ON_MONTHS = YEAR_ON_QUARTERS * QUARTER_ON_MONTHS\n\ntype Formatter = (date: Date, match: string) => string | number\n\ninterface Formatters {\n  [prop: string]: Formatter\n}\n\nconst formatters: Formatters = {\n  y(date, match) {\n    const year = date.getFullYear()\n\n    return match.length === 4 ? year : (year % 1000) % 100\n  },\n  M(date, match) {\n    const month = date.getMonth() + 1\n\n    return match.length === 2 ? doubleDigits(month) : month\n  },\n  d(date, match) {\n    const day = date.getDate()\n\n    return match.length === 2 ? doubleDigits(day) : day\n  },\n  H(date, match) {\n    const hour = date.getHours()\n\n    return match.length === 2 ? doubleDigits(hour) : hour\n  },\n  m(date, match) {\n    const minute = date.getMinutes()\n\n    return match.length === 2 ? doubleDigits(minute) : minute\n  },\n  s(date, match) {\n    const second = date.getSeconds()\n\n    return match.length === 2 ? doubleDigits(second) : second\n  },\n  q(date, match) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3)\n\n    return match.length === 2 ? doubleDigits(quarter) : quarter\n  }\n}\n\nconst formatRegExp = /[yMdHmsq](\\w)*|./g\nconst quotationRegExp = /'(.+?)'/g\n\n/**\n * 将任意可转为 `Date` 对象的变量转为一个新日期\n *\n * @param any 任意可转换的值\n * @param strict 是否在传入非法值时抛错\n *\n * @returns 转换后的 `Date` 对象\n */\nexport function toDate(any: Dateable, strict = false) {\n  const date = new Date(any)\n\n  if (strict && Number.isNaN(+date)) {\n    throw new RangeError('Invalid date value')\n  }\n\n  if (typeof any === 'string' && !any.includes(':')) {\n    date.setHours(0)\n    date.setMinutes(0)\n    date.setSeconds(0)\n  }\n\n  return date\n}\n\n/**\n * 将日期格式化成指定格式\n *\n * @param date 需要格式化的Date对象\n * @param pattern 格式化结构 年-y 月-M 日-d 时-H 分-m 秒-s 季度-q\n *\n * @returns 格式化后的字面值\n *\n * @example\n * ```ts\n * format(new Date(), 'yyyy-MM-dd')\n * ```\n *\n * @example\n * ```ts\n * format(Date.now(), 'yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'')\n * ```\n */\nexport function format(date: Dateable, pattern = 'yyyy-MM-dd HH:mm:ss') {\n  date = toDate(date)\n\n  const matches = pattern.match(formatRegExp)\n  const length = matches?.length\n\n  if (!length) {\n    return pattern\n  }\n\n  let i = 0\n  let result = ''\n\n  while (i < length) {\n    const substring = (matches as RegExpMatchArray)[i]\n    const firstCharacter = substring[0]\n    const formatter = formatters[firstCharacter]\n\n    if (formatter) {\n      result += formatter(date, substring)\n    } else {\n      result += substring\n    }\n\n    ++i\n  }\n\n  return result.replace(quotationRegExp, '$1')\n}\n\n/**\n * 获取日期的时间部分\n *\n * @param date 给定的日期\n *\n * @returns 日期的时间部分\n */\nexport function getTime(date: Dateable) {\n  date = toDate(date)\n\n  return `${doubleDigits(date.getHours())}:${doubleDigits(date.getMinutes())}:${doubleDigits(\n    date.getSeconds()\n  )}`\n}\n\n/**\n * 获取日期所在的季度\n *\n * @param date 给定的日期\n *\n * @returns 日期所在的季度\n */\nexport function getQuarter(date: Dateable) {\n  date = toDate(date)\n\n  return Math.floor(date.getMonth() / 3) + 1\n}\n\nconst weeksForChinese = ['日', '一', '二', '三', '四', '五', '六']\n\n/**\n * 获取中文星期\n *\n * @param date 给定的日期\n *\n * @returns 中文星期\n */\nexport function getChineseWeek(date: Date) {\n  return weeksForChinese[date.getDay()]\n}\n\n/**\n * 为日期增减给定的毫秒\n *\n * @param date 原始日期\n * @param amount 增减的毫秒\n *\n * @returns 修改后的日期\n */\nexport function addMilliseconds(date: Dateable, amount: number) {\n  date = toDate(date)\n  date.setTime(date.getTime() + amount)\n\n  return date\n}\n\n/**\n * 为日期增减给定的秒\n *\n * @param date 原始日期\n * @param amount 增减的秒\n *\n * @returns 修改后的日期\n */\nexport function addSeconds(date: Dateable, amount: number) {\n  amount *= SECOND_ON_MILLISECONDS\n\n  return addMilliseconds(date, amount)\n}\n\n/**\n * 为日期增减给定的分钟\n *\n * @param date 原始日期\n * @param amount 增减的分钟\n *\n * @returns 修改后的日期\n */\nexport function addMinutes(date: Dateable, amount: number) {\n  amount *= MINUTE_ON_SECONDS\n\n  return addSeconds(date, amount)\n}\n\n/**\n * 为日期增减给定的小时\n *\n * @param date 原始日期\n * @param amount 增减的小时\n *\n * @returns 修改后的日期\n */\nexport function addHours(date: Dateable, amount: number) {\n  amount *= HOUR_ON_MINUTES\n\n  return addMinutes(date, amount)\n}\n\n/**\n * 为日期增减给定的半天数（12小时）\n *\n * @param date 原始日期\n * @param amount 增减的半天数\n *\n * @returns 修改后的日期\n */\nexport function addHalfDays(date: Dateable, amount: number) {\n  amount *= 12\n\n  return addHours(date, amount)\n}\n\n/**\n * 为日期增减给定的天数\n *\n * @param date 原始日期\n * @param amount 增减的天数\n *\n * @returns 修改后的日期\n */\nexport function addDays(date: Dateable, amount: number) {\n  date = toDate(date)\n  amount = ~~amount\n\n  date.setDate(date.getDate() + amount)\n\n  return date\n}\n\n/**\n * 为日期增减给定的周数\n *\n * @param date 原始日期\n * @param amount 增减的周数\n *\n * @returns 修改后的日期\n */\nexport function addWeeks(date: Dateable, amount: number) {\n  amount *= WEEK_ON_DAYS\n\n  return addDays(date, amount)\n}\n\n/**\n * 为日期增减给定的月数\n *\n * @param date 原始日期\n * @param amount 增减的月数\n *\n * @returns 修改后的日期\n */\nexport function addMonths(date: Dateable, amount: number) {\n  date = toDate(date)\n  amount = ~~amount\n\n  date.setMonth(date.getMonth() + amount)\n\n  return date\n}\n\n/**\n * 为日期增减给定的季度（3个月）\n *\n * @param date 原始日期\n * @param amount 增减的季度\n *\n * @returns 修改后的日期\n */\nexport function addQuarters(date: Dateable, amount: number) {\n  amount *= QUARTER_ON_MONTHS\n\n  return addMonths(date, amount)\n}\n\n/**\n * 为日期增减给定的年份\n *\n * @param date 原始日期\n * @param amount 增减的年份\n *\n * @returns 修改后的日期\n */\nexport function addYears(date: Dateable, amount: number) {\n  amount *= YEAR_ON_MONTHS\n\n  return addMonths(date, amount)\n}\n\n/**\n * 生成一个天数递进的日期数组\n *\n * @param start 开始日期\n * @param size range 的大小, 默认 42 (一般电子日历为 6 行 7 列)\n * @param step range 的跨幅\n *\n * @returns 生成的日期数组\n */\nexport function rangeDate(start: Dateable, size = 42, step = 1) {\n  start = toDate(start)\n\n  const dateRange: Date[] = []\n\n  for (let i = 0; i < size; ++i) {\n    dateRange.push(addDays(start, i * step))\n  }\n\n  return dateRange\n}\n\n/**\n * 生成一个月份递进的日期数组\n *\n * @param start 开始日期\n * @param size range 的大小, 默认 12 (一年)\n * @param step range 的跨幅\n *\n * @returns 生成的日期数组\n */\nexport function rangeMonth(start: Dateable, size = 12, step = 1) {\n  start = toDate(start)\n\n  const dateRange: Date[] = []\n\n  for (let i = 0; i < size; ++i) {\n    dateRange.push(addMonths(start, i * step))\n  }\n\n  return dateRange\n}\n\n/**\n * 根据给定的日期获取上一个周日\n *\n * @param date 原始日期\n *\n * @returns 上一个周日\n */\nexport function getLastSunday(date: Date) {\n  const day = date.getDay() ?? 7\n\n  return addDays(date, -day)\n}\n\n/**\n * 获取给定的日期所在秒的开始日期（毫秒归零）\n *\n * @param date 原始日期\n *\n * @returns 新的开始日期\n */\nexport function startOfSecond(date: Dateable) {\n  date = toDate(date)\n  date.setMilliseconds(0)\n\n  return date\n}\n\n/**\n * 获取给定的日期所在分钟的开始日期 (秒归零)\n *\n * @param date 原始日期\n *\n * @returns 新的开始日期\n */\nexport function startOfMinute(date: Dateable) {\n  date = toDate(date)\n  date.setSeconds(0, 0)\n\n  return date\n}\n\n/**\n * 获取给定的日期所在小时的开始日期 (分钟归零)\n *\n * @param date 原始日期\n *\n * @returns 新的开始日期\n */\nexport function startOfHour(date: Dateable) {\n  date = toDate(date)\n  date.setMinutes(0, 0, 0)\n\n  return date\n}\n\n/**\n * 获取给定的日期所在天的开始日期\n *\n * @param date 原始日期\n *\n * @returns 新的开始日期\n */\nexport function startOfDay(date: Dateable) {\n  date = toDate(date)\n  date.setHours(0, 0, 0, 0)\n\n  return date\n}\n\n/**\n * 获取给定日期所在天的结束日期\n *\n * @param date 原始日期\n *\n * @returns 新的开始日期\n */\nexport function endOfDay(date: Dateable) {\n  date = toDate(date)\n  date.setHours(23, 59, 59, 999)\n\n  return date\n}\n\n/**\n * 获取给定的日期所在周的第一天的开始日期\n *\n * @param date 需要解析的时间\n * @param startOn 设定周的第一天，默认为周日\n *\n * @returns 新的开始日期\n */\nexport function startOfWeek(date: Dateable, startOn = 0) {\n  startOn = startOn % 7\n\n  if (startOn < 0) {\n    startOn += 7\n  }\n\n  date = toDate(date)\n\n  const day = date.getDay()\n  const difference = (day < startOn ? 7 : 0) + day - startOn\n\n  date.setDate(date.getDate() - difference)\n  date.setHours(0, 0, 0, 0)\n\n  return date\n}\n\n/**\n * 判断给定的年份是否为闰年\n *\n * @param year 原始年份\n *\n * @returns 是否为闰年\n */\nexport function isLeapYear(year: number) {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0\n}\n\n/**\n * 获取给定的日期所在月份的第一天的开始日期\n *\n * @param date 原始日期\n * @param startOn 设定一个月的第一天，默认为 1 号\n *\n * @returns 新的开始日期\n */\nexport function startOfMonth(date: Dateable, startOn = 1) {\n  date = toDate(date)\n\n  const year = date.getFullYear()\n  const month = date.getMonth() + 1\n  const day = date.getDate()\n\n  let lastDay\n\n  if (month < 7) {\n    if (month !== 2) {\n      lastDay = 30 + (month % 2)\n    } else {\n      if (isLeapYear(year)) {\n        lastDay = 29\n      } else {\n        lastDay = 28\n      }\n    }\n  } else {\n    lastDay = 31 - (month % 2)\n  }\n\n  startOn = startOn % lastDay\n\n  if (startOn < 0) {\n    startOn += lastDay\n  }\n\n  if (day < startOn) {\n    date.setMonth(month - 1)\n  }\n\n  date.setDate(startOn)\n  date.setHours(0, 0, 0, 0)\n\n  return date\n}\n\n/**\n * 获取给定日期所在季度的第一天的开始日期\n *\n * @param date 原始日期\n *\n * @returns 新的开始日期\n */\nexport function startOfQuarter(date: Dateable) {\n  date = toDate(date)\n\n  const quarter = getQuarter(date)\n\n  date.setDate(1)\n  date.setHours(0, 0, 0, 0)\n  date.setMonth((quarter - 1) * 3)\n\n  return date\n}\n\n/**\n * 获取给定日期所在年份的第一天的开始日期\n *\n * @param date 原始日期\n * @param startOn 设定年的开始月份，默认为一月\n *\n * @returns 新的开始日期\n */\nexport function startOfYear(date: Dateable, startOn = 0) {\n  startOn = startOn % 11\n\n  if (startOn < 0) {\n    startOn += 11\n  }\n\n  date = toDate(date)\n\n  const month = date.getMonth()\n  const difference = (month < startOn ? 11 : 0) + month - startOn\n\n  date.setMonth(date.getMonth() - difference)\n  date.setDate(1)\n  date.setHours(0, 0, 0, 0)\n\n  return date\n}\n\n/**\n * 比较两个日期相差的毫秒\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 相差的毫秒数\n */\nexport function differenceMilliseconds(left: Dateable, right: Dateable) {\n  left = toDate(left)\n  right = toDate(right)\n\n  return right.getTime() - left.getTime()\n}\n\n/**\n * 比较两个日期相差的秒\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 相差的秒数\n */\nexport function differenceSeconds(left: Dateable, right: Dateable) {\n  const diff = differenceMilliseconds(left, right) / SECOND_ON_MILLS\n\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\n/**\n * 比较两个日期相差的分钟\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 相差的分钟数\n */\nexport function differenceMinutes(left: Dateable, right: Dateable) {\n  const diff = differenceMilliseconds(left, right) / MINUTE_ON_MILLS\n\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\n/**\n * 比较两个日期相差的小时\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 相差的小时数\n */\nexport function differenceHours(left: Dateable, right: Dateable) {\n  const diff = differenceMilliseconds(left, right) / HOUR_ON_MILLS\n\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\n/**\n * 比较两个日期相差的天数\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 相差的天数\n */\nexport function differenceDays(left: Dateable, right: Dateable) {\n  left = startOfDay(left)\n  right = startOfDay(right)\n\n  return (right.getTime() - left.getTime()) / DAY_ON_MILLS\n}\n\n/**\n * 比较两个日期相差的周\n *\n * @param left 原始日期\n * @param right 原始日期\n * @param weekStartOn 设定周的第一天，默认为周日\n *\n * @returns 相差的周数\n */\nexport function differenceWeeks(left: Dateable, right: Dateable, weekStartOn = 0) {\n  left = startOfWeek(left, weekStartOn)\n  right = startOfWeek(right, weekStartOn)\n\n  return (right.getTime() - left.getTime()) / WEEK_ON_MILLS\n}\n\n/**\n * 比较两个日期相差的月\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 相差的月份\n */\nexport function differenceMonths(left: Dateable, right: Dateable) {\n  left = toDate(left)\n  right = toDate(right)\n\n  const yearDiff = right.getFullYear() - left.getFullYear()\n  const monthDiff = right.getMonth() - left.getMonth()\n\n  return yearDiff * 12 + monthDiff\n}\n\n/**\n * 比较两个日期相差的季度\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 相差的季度\n */\nexport function differenceQuarters(left: Dateable, right: Dateable) {\n  left = toDate(left)\n  right = toDate(right)\n\n  const yearDiff = right.getFullYear() - left.getFullYear()\n  const quarterDiff = getQuarter(right) - getQuarter(left)\n\n  return yearDiff * 4 + quarterDiff\n}\n\n/**\n * 比较两个日期相差的年份\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 相差的年份\n */\nexport function differenceYears(left: Dateable, right: Dateable) {\n  left = toDate(left)\n  right = toDate(right)\n\n  return right.getFullYear() - left.getFullYear()\n}\n\n/**\n * 升序比较两个日期大小，用于给数组的 sort 方法使用\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 比较后的结果，`-1` 则左侧小，`1` 则右侧小，`0` 则相等\n */\nexport function compareAsc(left: Dateable, right: Dateable) {\n  left = toDate(left)\n  right = toDate(right)\n\n  const diff = left.getTime() - right.getTime()\n\n  return diff < 0 ? -1 : diff > 0 ? 1 : diff\n}\n\n/**\n * 降序比较两个日期大小，用于给数组的 sort 方法使用\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 比较后的结果，`1` 则左侧小，`-1` 则右侧小，`0` 则相等\n */\nexport function compareDesc(left: Dateable, right: Dateable) {\n  return -compareAsc(left, right)\n}\n\n/**\n * 比较两个日期相差的完整秒\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 相差的完整秒数\n */\nexport function differenceFullSeconds(left: Dateable, right: Dateable) {\n  left = startOfSecond(left)\n  right = startOfSecond(right)\n\n  return differenceSeconds(left, right)\n}\n\n/**\n * 比较两个日期相差的完整分钟\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 相差的完整分钟数\n */\nexport function differenceFullMinutes(left: Dateable, right: Dateable) {\n  left = startOfMinute(left)\n  right = startOfMinute(right)\n\n  return differenceMinutes(left, right)\n}\n\n/**\n * 比较两个日期相差的完整小时\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 相差的完整小时数\n */\nexport function differenceFullHours(left: Dateable, right: Dateable) {\n  left = startOfHour(left)\n  right = startOfHour(right)\n\n  return differenceHours(left, right)\n}\n\n/**\n * 比较两个日期相差的完整天\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 相差的完整天数\n */\nexport function differenceFullDays(left: Dateable, right: Dateable) {\n  const sign = compareDesc(left, right)\n  const difference = Math.abs(differenceDays(left, right))\n\n  left = toDate(left)\n  left.setDate(left.getDate() + sign * difference)\n\n  const isLastNotFull = compareDesc(left, right) === -sign\n\n  return sign * (difference - (isLastNotFull ? 1 : 0))\n}\n\n/**\n * 比较两个日期相差的完整周\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 相差的完整周数\n */\nexport function differenceFullWeeks(left: Dateable, right: Dateable) {\n  const diff = differenceFullDays(left, right) / WEEK_ON_DAYS\n\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\n/**\n * 比较两个日期相差的完整月\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 相差的完整月份\n */\nexport function differenceFullMonths(left: Dateable, right: Dateable) {\n  const sign = compareDesc(left, right)\n  const difference = Math.abs(differenceMonths(left, right))\n\n  left = toDate(left)\n  left.setMonth(left.getMonth() + sign * difference)\n\n  const isLastNotFull = compareDesc(left, right) === -sign\n\n  return sign * (difference - (isLastNotFull ? 1 : 0))\n}\n\n/**\n * 比较两个日期相差的完整季度\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 相差的完整季度\n */\nexport function differenceFullQuarters(left: Dateable, right: Dateable) {\n  const diff = differenceFullMonths(left, right) / 3\n\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\n/**\n * 比较两个日期相差的完整年份\n *\n * @param left 原始日期\n * @param right 原始日期\n *\n * @returns 相差的完整年份\n */\nexport function differenceFullYears(left: Dateable, right: Dateable) {\n  const sign = compareDesc(left, right)\n  const difference = Math.abs(differenceYears(left, right))\n\n  left = toDate(left)\n  left.setFullYear(left.getFullYear() + sign * difference)\n\n  const isLastNotFull = compareDesc(left, right) === -sign\n\n  return sign * (difference - (isLastNotFull ? 1 : 0))\n}\n", "import { getType, noop } from './common'\n\nexport interface DeepCloneOptions {\n  /**\n   * 一个自定义的克隆对象方法，用于处理方法内置以外的对象克隆，如 Class 的实例\n   *\n   * @param type 对象的类型，注意格式为大驼峰\n   * @param obj 原始对象\n   *\n   * @returns 克隆后对象\n   */\n  cloneObject?: (type: string, obj: unknown) => any\n}\n\n/**\n * 深度拷贝对象或数组\n *\n * @param obj 需要拷贝的对象或数组\n *\n * @returns 克隆后的对象\n */\nexport function deepClone<T>(obj: T, options: DeepCloneOptions = {}): T {\n  if (obj == null || typeof obj !== 'object') {\n    return obj\n  }\n\n  const { cloneObject = noop } = options\n  const temp = {} as any\n\n  // 循环数组栈\n  const loopList: Array<{\n    parent: any,\n    prop: any,\n    data: any\n  }> = [\n    {\n      parent: temp,\n      prop: 'root',\n      data: obj\n    }\n  ]\n\n  const referenceMap = new WeakMap<any, any>()\n  const setProps: Array<{ parent: any, prop: any }> = []\n  const mapProps: Array<{ parent: any, prop: any }> = []\n\n  while (loopList.length) {\n    // 先入后出，深度优先\n    const { parent, prop, data } = loopList.pop()!\n\n    if (!parent) continue\n\n    const type = getType(data)\n\n    if (type === 'Date') {\n      parent[prop] = new Date(data as Date)\n      continue\n    }\n\n    if (type !== 'Array') {\n      const result = cloneObject(type, data)\n\n      if (result != null) {\n        parent[prop] = result\n        continue\n      }\n    }\n\n    // 初始化克隆对象\n    const cloned: any = (parent[prop] =\n      type === 'Array' || type === 'Set' || type === 'Map' ? [] : {})\n\n    if (type === 'Set' || type === 'Map') {\n      let i = 0\n\n      if (type === 'Set') {\n        for (const item of data) {\n          if (referenceMap.has(item)) {\n            cloned[i] = referenceMap.get(item)!\n          } else if (item !== null && typeof item === 'object') {\n            loopList.push({\n              parent: cloned,\n              prop: i,\n              data: item\n            })\n          } else {\n            cloned[i] = item\n          }\n\n          ++i\n        }\n\n        setProps.push({ parent, prop })\n      } else {\n        for (const entry of data) {\n          const clonedEntry = []\n          i = 0\n\n          for (const item of entry) {\n            if (referenceMap.has(item)) {\n              clonedEntry[i] = referenceMap.get(item)!\n            } else if (item !== null && typeof item === 'object') {\n              loopList.push({\n                parent: clonedEntry,\n                prop: i,\n                data: item\n              })\n            } else {\n              clonedEntry[i] = item\n            }\n\n            ++i\n          }\n\n          cloned.push(clonedEntry)\n        }\n\n        mapProps.push({ parent, prop })\n      }\n    } else {\n      for (const key of Object.keys(data)) {\n        const item = data[key]\n\n        // 处理循环引用\n        if (referenceMap.has(item)) {\n          cloned[key] = referenceMap.get(item)!\n        } else if (item !== null && typeof item === 'object') {\n          loopList.push({\n            parent: cloned,\n            prop: key,\n            data: item\n          })\n        } else {\n          cloned[key] = item\n        }\n      }\n    }\n\n    referenceMap.set(data, cloned)\n  }\n\n  for (const { parent, prop } of setProps) {\n    parent[prop] = new Set(parent[prop])\n  }\n\n  for (const { parent, prop } of mapProps) {\n    parent[prop] = new Map(parent[prop])\n  }\n\n  return temp.root\n}\n", "const defaultMessage = 'This object was destroyed, do not use it anywhere'\nconst returnTrue = () => true\n\n/**\n * 将一个对象销毁，销毁后的对象所有方法不可用，属性值均为 `null`\n *\n * @param object 要销毁的对象\n * @param message 销毁后，调用方法时的错误信息\n */\nexport function destroyObject(object: any, message = defaultMessage) {\n  const throwDestroyed = () => {\n    throw new Error(message)\n  }\n\n  Object.keys(object).forEach(name => {\n    if (typeof object[name] === 'function') {\n      object[name] = throwDestroyed.bind(object)\n    } else {\n      object[name] = null\n    }\n  })\n\n  Object.getOwnPropertyNames(object.constructor.prototype).forEach(name => {\n    if (name !== 'constructor' && typeof object[name] === 'function') {\n      object[name] = throwDestroyed.bind(object)\n    }\n  })\n\n  object.isDestroyed = returnTrue\n}\n", "import { isClient, isDefined } from './common'\n\n/**\n * 专用的类型，用于适配 Vexip UI 中 `transfer` 属性的处理\n */\nexport interface TransferNode extends Element {\n  __transferElement?: Element | null\n}\n\nexport interface EventPayload extends EventInit {\n  /**\n   * 事件的类型\n   */\n  type: string,\n  [prop: string]: any\n}\n\n/**\n * 当前是否可以使用触摸交互\n */\nexport const USE_TOUCH = isClient && ('ontouchstart' in window || getMaxTouchPoints() > 0)\n/**\n * 当前点击的类型，可以使用触摸交互时为 `pointerdown`，否则为 `click`\n */\nexport const CLICK_TYPE = USE_TOUCH ? 'pointerdown' : 'click'\n\nfunction getMaxTouchPoints() {\n  return typeof navigator !== 'undefined'\n    ? navigator.maxTouchPoints || ((navigator as any).msMaxTouchPoints as number) || 0\n    : 0\n}\n\n/**\n * 为指定的元素派发事件\n *\n * @param el 指定的元素\n * @param payload 事件的属性\n * @param Event 事件类\n *\n * @returns 事件是否派发成功\n */\nexport function dispatchEvent(el: Element, payload: EventPayload, Event = window.Event) {\n  const { type, bubbles = false, cancelable = false, ...data } = payload\n\n  if (!isDefined(type) || type === '') return false\n\n  let event\n\n  if (isDefined(Event)) {\n    event = new Event(type, { bubbles, cancelable })\n  } else {\n    event = document.createEvent('HTMLEvents')\n    event.initEvent(type, bubbles, cancelable)\n  }\n\n  Object.assign(event, data)\n\n  return el.dispatchEvent(event)\n}\n", "import { isClient } from './common'\nimport { isValidNumber, toNumber } from './number'\n\nimport type { TransferNode } from './dom-event'\n\nconst TABABLE_SELECTOR = [\n  'button',\n  '[href]:not(.disabled)',\n  'input',\n  'select',\n  'textarea',\n  '[tabindex]',\n  '[contenteditable]'\n]\n  .map(s => `${s}:not(:disabled):not([disabled])`)\n  .join(', ')\n\nfunction isElement(el?: Element | null): el is HTMLElement {\n  return !!el && el.nodeType === 1\n}\n\nfunction ensureElement(el?: Element | null) {\n  return isElement(el) ? el : document.body\n}\n\n/**\n * 检索匹配指定选择器的所有元素\n *\n * @param selector 选择器\n * @param root 根元素，不指定时为 `document.body`\n *\n * @returns 匹配的所有元素\n */\nexport function queryAll(selector: string, root?: Element | null) {\n  if (!isClient || !selector) return []\n\n  return Array.from(ensureElement(root).querySelectorAll(selector)) as HTMLElement[]\n}\n\n/**\n * 判断指定的元素是否聚焦或包含聚焦的元素\n *\n * @param el 需判断的元素\n *\n * @returns 是否聚焦或包含聚焦的元素\n */\nexport function isFocusIn(el?: Element | null) {\n  if (!isClient) return false\n\n  const activeEl = document.activeElement as HTMLElement\n\n  if (!isElement(el) || !activeEl) return false\n\n  return el === activeEl || contains(activeEl, el)\n}\n\n/**\n * 判断一个元素是否包含另一个元素\n *\n * @param el 被包含的元素（子元素）\n * @param parent 包含的元素（父元素）\n *\n * @returns 元素是否包含另一个元素\n */\nexport function contains(el?: Element | null, parent?: HTMLElement | null) {\n  if (!el || !parent) return false\n\n  const tel = (parent as TransferNode).__transferElement\n\n  return parent.contains(el) || (!!tel && (tel === el || tel.contains(el)))\n}\n\n/**\n * 判断指定的元素是否隐藏\n *\n * @param el 需判断的元素\n *\n * @returns 元素是否隐藏\n */\nexport function isHidden(el?: Element | null) {\n  if (!isClient || !isElement(el) || !el.parentNode || !contains(el, document.body)) {\n    return true\n  }\n\n  if (el.style.display === 'none') {\n    return true\n  }\n\n  const rect = el.getBoundingClientRect()\n\n  return !(rect && rect.width > 0 && rect.height > 0)\n}\n\n/**\n * 判断指定的元素是否可见\n *\n * @param el 需判断的元素\n *\n * @returns 元素是否可见\n */\nexport function isVisible(el?: Element | null) {\n  return !isHidden(el)\n}\n\n/**\n * 判断指定的元素是否被禁用\n *\n * @param el 需判断的元素\n *\n * @returns 元素是否被禁用\n */\nexport function isDisabled(el?: Element | null) {\n  return (\n    !isElement(el) ||\n    (el.hasAttribute('disabled') && el.getAttribute('disabled') !== 'false') ||\n    (el as HTMLInputElement).disabled\n  )\n}\n\n/**\n * 检索可以被切换焦点（Tab）的元素\n *\n * @param root 根元素，不指定时为 `document.body`\n * @param includeDisabled 是否包含被禁用的元素\n *\n * @returns 可以被切换焦点的元素\n */\nexport function queryTabables(root?: HTMLElement, includeDisabled = false) {\n  const isDis = includeDisabled ? () => false : isDisabled\n\n  return queryAll(TABABLE_SELECTOR, root).filter(\n    el => isVisible(el) && el.tabIndex > -1 && !isDis(el)\n  )\n}\n\n/**\n * 获取元素横向的内边距像素值\n *\n * @param el 指定的元素\n *\n * @returns 元素横向的内边距像素值\n */\nexport function getXPadding(el: HTMLElement | null) {\n  if (!isClient || !el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const padding = parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight)\n\n  return padding || 0\n}\n\n/**\n * 获取元素纵向的内边距像素值\n *\n * @param el 指定的元素\n *\n * @returns 元素纵向的内边距像素值\n */\nexport function getYPadding(el: HTMLElement | null) {\n  if (!isClient || !el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const padding = parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom)\n\n  return padding || 0\n}\n\n/**\n * 获取元素横向的外边距像素值\n *\n * @param el 指定的元素\n *\n * @returns 元素横向的外边距像素值\n */\nexport function getXMargin(el: HTMLElement | null) {\n  if (!isClient || !el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const margin = parseFloat(computedStyle.marginLeft) + parseFloat(computedStyle.marginRight)\n\n  return margin || 0\n}\n\n/**\n * 获取元素纵向的外边距像素值\n *\n * @param el 指定的元素\n *\n * @returns 元素纵向的外边距像素值\n */\nexport function getYMargin(el: HTMLElement | null) {\n  if (!isClient || !el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const margin = parseFloat(computedStyle.marginTop) + parseFloat(computedStyle.marginBottom)\n\n  return margin || 0\n}\n\n/**\n * 获取元素横向的边框像素值\n *\n * @param el 指定的元素\n *\n * @returns 元素横向的边框像素值\n */\nexport function getXBorder(el: HTMLElement | null) {\n  if (!isClient || !el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const width =\n    parseFloat(computedStyle.borderLeftWidth) + parseFloat(computedStyle.borderRightWidth)\n\n  return width || 0\n}\n\n/**\n * 获取元素纵向的边框像素值\n *\n * @param el 指定的元素\n *\n * @returns 元素纵向的边框像素值\n */\nexport function getYBorder(el: HTMLElement | null) {\n  if (!isClient || !el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const width =\n    parseFloat(computedStyle.borderTopWidth) + parseFloat(computedStyle.borderBottomWidth)\n\n  return width || 0\n}\n\n/**\n * 获取元素的选中宽度\n *\n * @param el 指定的元素\n *\n * @returns 元素的选中宽度\n */\nexport function getRangeWidth(el: HTMLElement | null) {\n  if (!isClient || !el) return 0\n\n  const range = document.createRange()\n\n  range.setStart(el, 0)\n  range.setEnd(el, el.childNodes.length)\n\n  const rangeWidth = range.getBoundingClientRect().width\n  const xPadding = getXPadding(el)\n\n  return rangeWidth + xPadding\n}\n\n/**\n * 给定的值如果为合法数字，则将转换为像素值\n *\n * @param value 需要判断的值\n */\nexport function toCssSize(value: number | string) {\n  return isValidNumber(value, true) ? `${toNumber(value)}px` : String(value).trim()\n}\n", "const escapeRE = /[\"'&<>]/\n\n/**\n * 将 html 内容的敏感字符进行转换\n *\n * @param string html 内容\n *\n * @returns 转换后的 html 内容\n */\nexport function escapeHtml(string: unknown) {\n  const str = '' + string\n  const match = escapeRE.exec(str)\n\n  if (!match) {\n    return str\n  }\n\n  let html = ''\n  let escaped: string\n  let index: number\n  let lastIndex = 0\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escaped = '&quot;'\n        break\n      case 38: // &\n        escaped = '&amp;'\n        break\n      case 39: // '\n        escaped = '&#39;'\n        break\n      case 60: // <\n        escaped = '&lt;'\n        break\n      case 62: // >\n        escaped = '&gt;'\n        break\n      default:\n        continue\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index)\n    }\n\n    lastIndex = index + 1\n    html += escaped\n  }\n\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html\n}\n", "export type EventType = number | string | symbol\nexport type EventHandler = (...payload: any[]) => void\nexport type EventHandlerSet = Set<EventHandler>\nexport type EventHandlerMap = Map<EventType, EventHandlerSet>\n\nexport interface EventEmitter {\n  /**\n   * 为指定的事件添加回调方法\n   *\n   * @param type 事件类型\n   * @param handler 回调方法\n   */\n  on: (type: EventType, handler: EventHandler) => void,\n  /**\n   * 为指定的事件移除回调方法\n   *\n   * @param type 事件类型\n   * @param handler 回调方法\n   */\n  off: (type: EventType, handler: EventHandler) => void,\n  /**\n   * 为指定的事件清除所有回调方法\n   *\n   * @param type 事件类型\n   */\n  clear: (type: EventType) => void,\n  /**\n   * 清除所有事件的所有回调方法\n   */\n  clearAll: () => void,\n  /**\n   * 派发特定的事件\n   *\n   * @param type 事件类型\n   * @param payload 传入事件回调方法的参数\n   */\n  emit: (type: EventType, ...payload: any[]) => void\n}\n\n/**\n * 创建一个自定义的事件发射器\n *\n * @returns 事件发射器\n */\nexport function createEventEmitter() {\n  const handlerMap: EventHandlerMap = new Map()\n\n  return {\n    on(type, handler) {\n      const handlers = handlerMap.get(type)\n      const added = handlers?.add(handler)\n\n      if (!added) {\n        handlerMap.set(type, new Set([handler]))\n      }\n    },\n    off(type, handler) {\n      const handlers = handlerMap.get(type)\n\n      if (handlers) {\n        handlers.delete(handler)\n      }\n    },\n    clear(type) {\n      const handlers = handlerMap.get(type)\n\n      if (handlers) {\n        handlers.clear()\n      }\n    },\n    clearAll() {\n      handlerMap.clear()\n    },\n    emit(type, ...payload) {\n      const handlers = handlerMap.get(type)\n\n      if (handlers) {\n        handlers.forEach(handler => {\n          handler(...payload)\n        })\n      }\n    }\n  } as EventEmitter\n}\n", "function logOnce(message: string, cache: Set<string>, logFn: (...data: any[]) => void) {\n  if (message && !cache.has(message)) {\n    logFn(message)\n    cache.add(message)\n  }\n}\n\nconst infoCache = new Set<string>()\n\n/**\n * 仅发出一次的提示消息\n *\n * @param message 消息内容\n * @param logFn 输出函数\n */\nexport function infoOnce(message: string, logFn = console.info) {\n  logOnce(message, infoCache, logFn)\n}\n\nconst warnCache = new Set<string>()\n\n/**\n * 仅发出一次的警告消息\n *\n * @param message 消息内容\n * @param logFn 输出函数\n */\nexport function warnOnce(message: string, logFn = console.warn) {\n  logOnce(message, warnCache, logFn)\n}\n\nconst errorCache = new Set<string>()\n\n/**\n * 仅发出一次的错误消息\n *\n * @param message 消息内容\n * @param logFn 输出函数\n */\nexport function errorOnce(message: string, logFn = console.warn) {\n  logOnce(message, errorCache, logFn)\n}\n", "import { isClient, noop } from './common'\n\nexport const raf = isClient\n  ? requestAnimationFrame\n  : (cb: FrameRequestCallback) => {\n      setTimeout(cb, 16)\n    }\n\n/**\n * 将一个方法进行节流\n *\n * @param method 需要节流的方法，需自行绑定 this\n * @param interval 节流后的触发间隔，默认 16 ms (1 帧)\n *\n * @returns 节流后的方法\n */\nexport function throttle<T extends (...args: any[]) => any>(\n  method: T,\n  interval = 16\n): (...args: Parameters<T>) => void {\n  if (typeof method !== 'function') {\n    return noop\n  }\n\n  const invoke = (...args: Parameters<T>) => {\n    method(...args)\n  }\n\n  if (interval <= 0) {\n    return debounceMinor(invoke)\n  }\n\n  let lastCall = 0\n  let timer: ReturnType<typeof setTimeout>\n\n  return function (...args: Parameters<T>) {\n    const current = Date.now()\n    const elapsed = current - lastCall\n\n    clearTimeout(timer)\n\n    if (elapsed >= interval) {\n      lastCall = current\n      invoke(...args)\n    } else {\n      timer = setTimeout(\n        () => {\n          lastCall = Date.now()\n          invoke(...args)\n        },\n        Math.max(0, interval - elapsed)\n      )\n    }\n  }\n}\n\n/**\n * 将一个方法进行防抖\n *\n * @param method 需要防抖的方法，需自行绑定 this\n * @param delay 防抖的限制时间，默认 100ms\n *\n * @returns 防抖后的方法\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  method: T,\n  delay = 100\n): (...args: Parameters<T>) => void {\n  if (typeof method !== 'function') {\n    return noop\n  }\n\n  const invoke = (...args: Parameters<T>) => {\n    method(...args)\n  }\n\n  if (delay <= 0) {\n    return debounceMinor(invoke)\n  }\n\n  let timer: ReturnType<typeof setTimeout>\n\n  return function (...args: Parameters<T>) {\n    clearTimeout(timer)\n\n    timer = setTimeout(() => {\n      invoke(...args)\n    }, delay)\n  }\n}\n\n/**\n * 对给定的方法进行微任务级别的防抖\n *\n * @param method 需要防抖的方法，需自行绑定 this\n *\n * @returns 防抖后的方法\n */\nexport function debounceMinor<T extends (...args: any[]) => any>(method: T) {\n  if (typeof method !== 'function') {\n    return method\n  }\n\n  let called = false\n  let lastArgs: Parameters<T>\n  let promise: Promise<Awaited<ReturnType<T>>>\n\n  return function (...args: Parameters<T>) {\n    lastArgs = args\n\n    if (!called) {\n      called = true\n      promise = Promise.resolve().then(() => {\n        called = false\n        promise = undefined!\n\n        return method(...lastArgs)\n      })\n    }\n\n    return promise\n  }\n}\n\n/**\n * 对给定的方法进行渲染帧级别的防抖\n *\n * @param method 需要防抖的方法，需自行绑定 this\n *\n * @returns 防抖后的方法\n */\nexport function debounceFrame<T extends (...args: any[]) => any>(method: T) {\n  if (typeof method !== 'function') {\n    return method\n  }\n\n  let called = false\n  let lastArgs: Parameters<T>\n  let promise: Promise<Awaited<ReturnType<T>>>\n\n  return function (...args: Parameters<T>) {\n    lastArgs = args\n\n    if (!called) {\n      called = true\n      promise = new Promise(resolve =>\n        raf(() => {\n          called = false\n          promise = undefined!\n\n          resolve(method(...lastArgs))\n        })\n      )\n    }\n\n    return promise\n  }\n}\n\nconst tickCallbacks = new Set<(...args: any[]) => any>()\nconst tickArgsMap = new WeakMap<any, any[]>()\n\nfunction flushTickCallbacks() {\n  tickCallbacks.forEach(fn => {\n    fn(...tickArgsMap.get(fn)!)\n  })\n  tickCallbacks.clear()\n}\n\n/**\n * 在下一微任务，仅执行一次传入的方法\n *\n * @param method 需要执行的方法\n * @param args 方法的额外参数，在方法调用前多次传入将会覆盖之前的参数\n */\nexport function nextTickOnce<T extends (...args: any[]) => any>(method: T, ...args: any[]) {\n  if (typeof method !== 'function') {\n    return method\n  }\n\n  tickArgsMap.set(method, args)\n\n  if (tickCallbacks.has(method)) {\n    return\n  }\n\n  tickCallbacks.add(method)\n\n  if (tickCallbacks.size === 1) {\n    Promise.resolve().then(flushTickCallbacks)\n  }\n}\n\nconst frameCallbacks = new Set<(...args: any[]) => any>()\nconst frameArgsMap = new WeakMap<any, any[]>()\n\nfunction flushFrameCallbacks() {\n  frameCallbacks.forEach(fn => {\n    fn(...frameArgsMap.get(fn)!)\n  })\n  frameCallbacks.clear()\n}\n\n/**\n * 在下一渲染帧，仅执行一次传入的方法\n *\n * @param method 需要执行的方法\n * @param args 方法的额外参数，在方法调用前多次传入将会覆盖之前的参数\n */\nexport function nextFrameOnce<T extends (...args: any[]) => any>(method: T, ...args: any[]) {\n  if (typeof method !== 'function') {\n    return method\n  }\n\n  frameArgsMap.set(method, args)\n\n  if (frameCallbacks.has(method)) {\n    return\n  }\n\n  frameCallbacks.add(method)\n\n  if (frameCallbacks.size === 1) {\n    raf(flushFrameCallbacks)\n  }\n}\n\n/**\n * 按指定的并发数，并行地为系列源数据执行操作\n *\n * @param maxConcurrency 最大的并发数\n * @param source 源数据\n * @param iteratorFn 处理操作的异步函数\n *\n * @returns 等待所有任务执行完的 Promise 对象\n */\nexport async function runParallel<T>(\n  maxConcurrency: number,\n  source: T[],\n  iteratorFn: (item: T, source: T[]) => Promise<any>\n) {\n  const ret: Array<Promise<any>> = []\n  const executing: Array<Promise<any>> = []\n\n  for (const item of source) {\n    const p = Promise.resolve().then(() => iteratorFn(item, source))\n\n    ret.push(p)\n\n    if (maxConcurrency <= source.length) {\n      const e: Promise<any> = p.then(() => executing.splice(executing.indexOf(e), 1))\n\n      executing.push(e)\n\n      if (executing.length >= maxConcurrency) {\n        await Promise.race(executing)\n      }\n    }\n  }\n\n  return Promise.all(ret)\n}\n", "import { isClient } from './common'\n\nlet flexGapSupported: boolean | null = null\n\n/**\n * 判断当前的环境是否支持 CSS 样式：`gap`、`row-gap` 和 `column-gap`\n *\n * @returns 是否支持\n */\nexport function supportFlexGap() {\n  if (!isClient) {\n    return true\n  }\n\n  if (flexGapSupported === null) {\n    const flex = document.createElement('div')\n\n    flex.style.display = 'flex'\n    flex.style.flexDirection = 'column'\n    flex.style.rowGap = '1px'\n\n    flex.appendChild(document.createElement('div'))\n    flex.appendChild(document.createElement('div'))\n    document.body.appendChild(flex)\n\n    flexGapSupported = flex.scrollHeight === 1\n\n    document.body.removeChild(flex)\n  }\n\n  return flexGapSupported\n}\n\nlet imgLoadingSupported: boolean | null = null\n\n/**\n * 判断当前环境是否支持 `<img>` 标签的 `loading` 属性\n *\n * @returns 是否支持\n */\nexport function supportImgLoading() {\n  if (!isClient) {\n    return true\n  }\n\n  if (imgLoadingSupported === null) {\n    imgLoadingSupported = 'loading' in document.createElement('img')\n  }\n\n  return imgLoadingSupported\n}\n", "import { isDefined, isFunction, isIterable, isObject, toTrue } from './common'\nimport { deepClone } from './deep-clone'\nimport { raf } from './performance'\n\n/**\n * 如果一个值不为数组，则将其转换为数组\n *\n * @param value 指定的值\n *\n * @returns 原始数组或转换后的数组\n */\nexport function ensureArray<T>(value: T | T[]) {\n  return Array.isArray(value) ? value : [value]\n}\n\n/**\n * 如果一个值为函数，则执行它并返回结果，否则返回其本身\n *\n * @param value 指定的值\n * @param args 若为函数时，传入的参数\n *\n * @returns 原始值或函数执行结果\n */\nexport function callIfFunc<T, P extends any[] = any[]>(value: T | ((...args: P) => T), ...args: P) {\n  return isFunction(value) ? value(...args) : value\n}\n\n/**\n * 将路径中的 `\\` 替换为 `/`\n *\n * @param path 指定的路径\n *\n * @returns 替换后的路径\n */\nexport function normalizePath(path: string) {\n  return path.replace(/[\\\\/]+/g, '/')\n}\n\n/**\n * 获取字符串的最后一个字符\n *\n * @param value 指定的字符串\n *\n * @returns 最后一个字符\n */\nexport function getLast(value: string): string | undefined\n/**\n * 获取数组的最后一个元素\n *\n * @param value 指定的数组\n *\n * @returns 最后一个元素\n */\nexport function getLast<T>(value: T[]): T | undefined\nexport function getLast(value: string | any[]) {\n  return value[value.length - 1]\n}\n\n/**\n * 根据数组元素中某个或多个属性的值转换为映射对象\n *\n * @param list 需要被转换的数组\n * @param prop 需要被转换的属性或提供一个读取方法\n * @param accessor 映射的值的读取方法，默认返回元素本身\n * @param isMap 是否使用 Map 对象储存结果\n *\n * @returns 转换后的映射对象\n */\nexport function listToMap<T = any, O = T>(\n  list: T[],\n  prop: keyof T | ((item: T) => any),\n  accessor?: (item: T) => O,\n  isMap?: false\n): Record<string, O>\nexport function listToMap<T = any, O = T, K extends keyof T = keyof T>(\n  list: T[],\n  prop: K,\n  accessor?: (item: T) => O,\n  isMap?: true\n): Map<T[K], O>\nexport function listToMap<T = any, O = T, K = any>(\n  list: T[],\n  prop: (item: T) => K,\n  accessor?: (item: T) => O,\n  isMap?: true\n): Map<K extends keyof T ? T[K] : unknown, O>\nexport function listToMap<T = any, O = T>(\n  list: T[],\n  prop: keyof T | ((item: T) => any),\n  accessor: (item: T) => O = v => v as any,\n  isMap = false\n) {\n  const map = (isMap ? new Map<string, any>() : {}) as any\n\n  if (!isDefined(prop)) return map\n\n  const set = isMap\n    ? (key: any, value: O) => map.set(key, value)\n    : (key: any, value: O) => (map[key] = value)\n  const propAccessor = isFunction(prop) ? prop : (item: T) => item[prop]\n\n  list.forEach(item => {\n    const key = propAccessor(item)\n\n    if (isDefined(key)) {\n      set(key, accessor(item))\n    }\n  })\n\n  return map\n}\n\nexport {\n  /** @deprecated please use listToMap to replace it */\n  listToMap as transformListToMap\n}\n\n/**\n * 移除数组中的某个元素\n *\n * @param array 需要被移除元素的数组\n * @param item 需要被移除的元素, 或一个查找方法，如果元素为函数时则需要做一层简单包装\n * @param isFn 标记数组的元素是否为函数\n *\n * @returns 被移除的元素\n */\nexport function removeArrayItem<T = any>(\n  array: T[],\n  item: T | ((item: T) => boolean),\n  isFn = false\n): T | null {\n  let index = -1\n\n  if (isFn || typeof item !== 'function') {\n    index = array.findIndex(current => current === item)\n  } else {\n    index = array.findIndex(item as (item: T) => boolean)\n  }\n\n  if (~index) {\n    return array.splice(index, 1)[0]\n  }\n\n  return null\n}\n\n/**\n * 按照一定顺序的属性对数据进行分组\n *\n * @param list 需要分数的数据\n * @param props 需要按顺序分组的属性\n *\n * @returns 分组后的对象\n */\nexport function groupByProps<T = any>(\n  list: T[],\n  props: Array<string | ((item: T) => any)> | string | ((item: T) => any) = []\n): Record<string, T[]> {\n  if (typeof props === 'string' || typeof props === 'function') {\n    props = [props]\n  }\n\n  const propCount = props.length\n  const zipData: Record<string, any> = {}\n\n  for (const item of list) {\n    let data\n\n    for (let i = 0; i < propCount; ++i) {\n      const isLast = i === propCount - 1\n      const prop = props[i]\n      const value = typeof prop === 'function' ? prop(item) : item[prop as keyof T]\n\n      if (!data) {\n        if (!zipData[value]) {\n          zipData[value] = isLast ? [] : {}\n        }\n\n        data = zipData[value]\n      } else {\n        if (!data[value]) {\n          data[value] = isLast ? [] : {}\n        }\n\n        data = data[value]\n      }\n    }\n\n    data.push(item)\n  }\n\n  return zipData\n}\n\nexport interface TreeOptions<T = string> {\n  keyField?: T,\n  childField?: T,\n  parentField?: T,\n  /** 若指定，`parent` 值等于 `rootId` 的节点被认为是顶级节点 */\n  rootId?: any\n}\n\n/**\n * 将一个展平的列表转换为树\n *\n * @param list 要转换的列表\n * @param options 转换的配置项\n *\n * @returns 转换后的树\n */\nexport function transformTree<T = any>(list: T[], options: TreeOptions<keyof T> = {}) {\n  const {\n    keyField = 'id' as keyof T,\n    childField = 'children' as keyof T,\n    parentField = 'parent' as keyof T,\n    rootId = null\n  } = options\n\n  const hasRootId = isDefined(rootId) && rootId !== ''\n  const tree: T[] = []\n  const record = new Map<T[keyof T], T[]>()\n\n  for (let i = 0, len = list.length; i < len; ++i) {\n    const item = list[i]\n    const id = item[keyField]\n\n    if (hasRootId ? id === rootId : !isDefined(id)) {\n      continue\n    }\n\n    if (record.has(id)) {\n      ;(item as any)[childField] = record.get(id)!\n    } else {\n      ;(item as any)[childField] = []\n      record.set(id, (item as any)[childField])\n    }\n\n    if (item[parentField] && (!hasRootId || item[parentField] !== rootId)) {\n      const parentId = item[parentField]\n\n      if (!record.has(parentId)) {\n        record.set(parentId, [])\n      }\n\n      record.get(parentId)!.push(item)\n    } else {\n      tree.push(item)\n    }\n  }\n\n  return tree\n}\n\nexport { transformTree as buildTree }\n\n/**\n * 将一个树展平成列表\n *\n * @param tree 要展平的树\n * @param options 转换的配置项\n *\n * @returns 展平后的列表\n */\nexport function flatTree<T = any>(\n  tree: T[],\n  options: TreeOptions<keyof T> & {\n    /** 是否为深度优先遍历 */\n    depthFirst?: boolean,\n    /**\n     * 是否为无 ID 的节点插入 ID 值\n     *\n     * @default true\n     */\n    injectId?: boolean,\n    /** 构建节点的 ID 的方法 */\n    buildId?: (index: number) => any,\n    /** 过滤节点的方法 */\n    filter?: (item: T) => boolean,\n    /** 过滤的结果是否会影响其子级 */\n    cascaded?: boolean,\n    /** 是否强制为节点插入 ID 值 */\n    forceInject?: boolean\n  } = {}\n) {\n  const {\n    keyField = 'id' as keyof T,\n    childField = 'children' as keyof T,\n    parentField = 'parent' as keyof T,\n    rootId = null,\n    depthFirst = false,\n    injectId = true,\n    buildId = i => i,\n    filter = toTrue,\n    cascaded = false,\n    forceInject = false\n  } = options\n\n  let idCount = 1\n\n  const hasRootId = isDefined(rootId) && rootId !== ''\n  const list: T[] = []\n  const loop = [...tree]\n\n  while (loop.length) {\n    const item = loop.shift()!\n\n    const childrenValue = item[childField]\n    const children: T[] = Array.isArray(childrenValue) && childrenValue.length ? childrenValue : []\n\n    if (injectId && (forceInject || !item[keyField])) {\n      item[keyField] = buildId(idCount++)\n    }\n\n    const id = item[keyField]\n\n    if (\n      injectId &&\n      parentField &&\n      (hasRootId ? item[parentField] === rootId : !item[parentField])\n    ) {\n      ;(item as any)[parentField] = rootId\n    }\n\n    const filterResult = filter(item)\n\n    if (filterResult) list.push(item)\n\n    if (filterResult || !cascaded) {\n      for (let i = 0, len = children.length; i < len; ++i) {\n        const child = children[i]\n\n        if (injectId && parentField) {\n          child[parentField] = id\n        }\n\n        !depthFirst && loop.push(child)\n      }\n\n      if (depthFirst) {\n        loop.unshift(...children)\n      }\n    }\n  }\n\n  return list\n}\n\n/**\n * 遍历树并为每个节点执行回调方法\n *\n * @param tree 要遍历的树\n * @param cb 回调函数\n * @param options 遍历的配置项\n */\nexport function walkTree<T = any>(\n  tree: T[],\n  cb: (item: T, depth: number, parent: T | null) => void,\n  options: {\n    /** 是否为深度优先遍历 */\n    depthFirst?: boolean,\n    childField?: keyof T\n  } = {}\n) {\n  const { childField = 'children' as keyof T, depthFirst = false } = options\n  const loop = [...tree.map(item => ({ item, depth: 0, parent: null as T | null }))]\n\n  while (loop.length) {\n    const { item, depth, parent } = loop.shift()!\n    const children = item[childField] as T[]\n\n    cb(item, depth, parent)\n\n    if (isIterable(children)) {\n      loop[depthFirst ? 'unshift' : 'push'](\n        ...Array.from(children).map(child => ({ item: child, depth: depth + 1, parent: item }))\n      )\n    }\n  }\n}\n\n/**\n * 遍历树并为每个节点执行回调方法，并用其返回值构建一颗新的树\n *\n * @param tree 要遍历的树\n * @param cb 回调函数\n * @param options 遍历的配置项\n *\n * @returns 构建后新的树\n */\nexport function mapTree<T = any, R = any>(\n  tree: T[],\n  cb: (item: T, depth: number, parent: T | null) => R,\n  options: {\n    /** 是否为深度优先遍历 */\n    depthFirst?: boolean,\n    childField?: keyof T,\n    /** 是否强制重置 `children` 字段 */\n    clearChildren?: boolean\n  } = {}\n) {\n  const { childField = 'children' as keyof T, depthFirst = false, clearChildren = true } = options\n  const result: R[] = []\n  const loop = [...tree.map(item => ({ item, depth: 0, parent: null as T | null, result }))]\n\n  while (loop.length) {\n    const { item, depth, parent, result } = loop.shift()!\n    const children = item[childField] as T[]\n    const newItem = cb(item, depth, parent) ?? ({} as any)\n\n    if (clearChildren) {\n      newItem[childField] = []\n    }\n\n    result.push(newItem)\n\n    if (isIterable(children)) {\n      const items = Array.from(children)\n\n      if (items.length) {\n        newItem[childField] = []\n        loop[depthFirst ? 'unshift' : 'push'](\n          ...Array.from(children).map(child => ({\n            item: child,\n            depth: depth + 1,\n            parent: item,\n            result: newItem[childField]\n          }))\n        )\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * 遍历树并为每个节点执行过滤方法，并用符合条件的节点构建一棵新的树\n *\n * @param tree 要遍历的树\n * @param cb 过滤的方法\n * @param options 遍历的配置项\n *\n * @returns 过滤后新的树\n */\nexport function filterTree<T = any>(\n  tree: T[],\n  cb: (item: T, depth: number, parent: T | null) => boolean,\n  options: {\n    /** 判断一个节点是否为叶子节点 */\n    isLeaf?: (item: T) => boolean,\n    /** 是否只对叶子节点进行过滤 */\n    leafOnly?: boolean,\n    childField?: keyof T\n  } = {}\n) {\n  const {\n    childField = 'children' as keyof T,\n    leafOnly = false,\n    isLeaf = item => !isIterable(item[childField])\n  } = options\n\n  const filter = (data: T[], depth: number, parent: T | null): T[] => {\n    return data\n      .map(item => ({ ...item }))\n      .filter(item => {\n        const children = item[childField] as T[]\n        const leaf = isLeaf(item)\n        const items = isIterable(children) && Array.from(children)\n\n        if (leafOnly && !leaf) {\n          if (items && items.length) {\n            const matched = filter(items, depth + 1, item)\n            item[childField] = matched as any\n\n            return !!matched.length\n          }\n\n          return false\n        }\n\n        const result = cb(item, depth, parent)\n\n        if (leaf) return result\n        if (!leafOnly && result) return true\n\n        if (items && items.length) {\n          const matched = filter(items, depth + 1, item)\n          item[childField] = matched as any\n\n          return !!matched.length\n        }\n\n        return result\n      })\n  }\n\n  return filter(tree, 0, null)\n}\n\nexport interface SortOptions<T = string> {\n  /** 属性名 */\n  key: T,\n  /** 排序方法 */\n  method?: (prev: any, next: any) => number,\n  /** 读取方法 */\n  accessor?: (...args: any[]) => any,\n  /** 升降序 */\n  type?: 'asc' | 'desc',\n  /** 传入读取器的额外参数 */\n  params?: any[]\n}\n\nconst defaultSortMethod = (prev: any, next: any) => {\n  if (Number.isNaN(Number(prev) - Number(next))) {\n    return String(prev).localeCompare(next)\n  }\n\n  return prev - next\n}\n\n/**\n * 根据依赖的属性对数组逐层排序\n *\n * @param list 需要排序的数组\n * @param props 排序依赖的属性\n *\n * @returns 排序后的数组\n */\nexport function sortByProps<T = any>(\n  list: T[],\n  props: keyof T | SortOptions<keyof T> | (keyof T | SortOptions<keyof T>)[]\n) {\n  if (\n    !list.sort ||\n    (isObject<SortOptions>(props) && !props.key) ||\n    !(props as string | SortOptions[]).length\n  ) {\n    return list\n  }\n\n  const sortedList = Array.from(list)\n\n  if (!Array.isArray(props)) {\n    props = [props]\n  }\n\n  const formattedProps = props\n    .map(\n      value =>\n        (typeof value === 'string'\n          ? {\n              key: value,\n              method: defaultSortMethod,\n              type: 'asc'\n            }\n          : value) as SortOptions<keyof T>\n    )\n    .map(value => {\n      if (typeof value.accessor !== 'function') {\n        value.accessor = (data: T) => data[value.key]\n      }\n\n      if (typeof value.method !== 'function') {\n        value.method = defaultSortMethod\n      }\n\n      value.params = Array.isArray(value.params) ? value.params : []\n\n      return value as Required<SortOptions>\n    })\n\n  sortedList.sort((prev, next) => {\n    let lastResult = 0\n\n    for (const prop of formattedProps) {\n      const { method, type, accessor, params } = prop\n      const desc = type === 'desc'\n      const result = method(accessor(prev, ...params), accessor(next, ...params))\n\n      lastResult = desc ? -result : result\n      // 若不为0则无需进行下一层排序\n      if (lastResult) break\n    }\n\n    return lastResult\n  })\n\n  return sortedList\n}\n\n/**\n * 将两个对象进行深度的动态合并\n *\n * @param sourceObj 用于接收合并的源对象\n * @param targetObj 被合并的对象，当属性名相同但值类型不同的情况，此对象的权重更高\n * @param isNewObj 标记合并至一个全新的对象（深度的）\n *\n * @returns 合并后的对象\n */\nexport function mergeObjects<T extends Record<string, any>, U extends Record<string, any>>(\n  sourceObj: T,\n  targetObj: U,\n  isNewObj = true\n) {\n  sourceObj = isNewObj ? deepClone(sourceObj) : sourceObj\n\n  const loop: Array<{\n    source: Record<string, any>,\n    target: Record<string, any>\n  }> = [\n    {\n      source: sourceObj,\n      target: targetObj\n    }\n  ]\n\n  while (loop.length) {\n    const { source, target } = loop.pop()!\n\n    Object.keys(target).forEach(key => {\n      if (isObject(target[key])) {\n        if (!isObject(source[key])) {\n          source[key] = {}\n        }\n\n        loop.push({\n          source: source[key],\n          target: target[key]\n        })\n      } else if (Array.isArray(target[key])) {\n        if (!Array.isArray(source[key])) {\n          source[key] = []\n        }\n\n        loop.push({\n          source: source[key],\n          target: target[key]\n        })\n      } else {\n        source[key] = target[key]\n      }\n    })\n  }\n\n  return sourceObj as T & U\n}\n\n/**\n * 将一个任务队列按每帧一次依次指定，返回一个触发取消的方法\n *\n * @param queue 任务队列\n *\n * @returns 终止队列执行的方法\n */\nexport function runQueueFrame(queue: Array<() => void>) {\n  queue = Array.from(queue)\n\n  let cancelled = false\n\n  const run = () => {\n    if (cancelled) return\n\n    queue.shift()?.()\n    queue.length && raf(run)\n  }\n\n  run()\n\n  return () => (cancelled = true)\n}\n", "/**\n * 将给定的常量字符串类型拓展为不区分大小写的任意组合\n */\nexport type AnyCase<S> = string extends S\n  ? string\n  : S extends `${infer F1}${infer F2}${infer R}`\n    ? `${Uppercase<F1> | Lowercase<F1>}${Uppercase<F2> | Lowercase<F2>}${AnyCase<R>}`\n    : S extends `${infer F}${infer R}`\n      ? `${Uppercase<F> | Lowercase<F>}${AnyCase<R>}`\n      : ''\n\nfunction allCapital(value: string) {\n  const matched = value.match(/[A-Z]+/)\n\n  return matched && matched[0] === value\n}\n\n// const kebabRE = /\\B([A-Z])/g\nconst kebabRE = /\\B([A-Z])(?=[^A-Z_-])/g\n\n/**\n * 将字面值转换为短横线连接\n *\n * @param value 需要转换的字面值\n *\n * @returns 转换后的短横线连接字面值\n *\n * @example\n * ```ts\n * toKebabCase('AaBbCc') // aa-bb-cc\n * toKebabCase('AABb') // aa-bb\n * toKebabCase('AAA') // aaa\n * toKebabCase('AaBb CcDd') // aa-bb cc-dd\n * ```\n */\nexport function toKebabCase(value: string) {\n  // if (allCapital(value)) {\n  //   return value.toLocaleLowerCase()\n  // }\n\n  return value.replace(kebabRE, '-$1').toLowerCase()\n}\n\n/**\n * 将给定的常量字符串类型拓展为大驼峰\n */\nexport type CapitalCase<T extends string> = T extends `${infer First} ${infer Rest}`\n  ? CapitalCase<`${First}-${Rest}`>\n  : T extends `${infer First}-${infer Rest}`\n    ? `${Capitalize<First>}${CapitalCase<Rest>}`\n    : Capitalize<T>\n\n/**\n * 将字面值转换为大驼峰\n *\n * @param value 需要转换的字面值\n *\n * @returns 转换后的大驼峰字面值\n */\nexport function toCapitalCase<T extends string>(value: T) {\n  value = value.trim().replace(/\\s+/g, '-') as T\n  value = value.replace(/-+(\\w)/g, (_, char) => (char ? char.toUpperCase() : '')) as T\n\n  return (value.charAt(0).toLocaleUpperCase() + value.slice(1)).replace(\n    /[^\\w]/g,\n    ''\n  ) as CapitalCase<T>\n}\n\n/**\n *  将字面值转换为小驼峰\n *\n * @param value 需要转换的字面值\n *\n * @returns 转换后的小驼峰字面值\n */\nexport function toCamelCase(value: string) {\n  const capitalName = toCapitalCase(value)\n\n  if (allCapital(capitalName)) {\n    return capitalName.toLocaleLowerCase()\n  }\n\n  return capitalName.charAt(0).toLowerCase() + capitalName.slice(1)\n}\n", "import type { InjectionKey } from 'vue'\nimport type { EventEmitter } from '@vexip-ui/utils'\nimport type { LayoutItem, Layout, LayoutInstance } from './types'\n\nexport const LAYOUT_KEY = Symbol('LAYOUT_KEY') as InjectionKey<LayoutInstance>\nexport const EMITTER_KEY = Symbol('EMITTER_KEY') as InjectionKey<EventEmitter>\n\n/**\n * Return the bottom coordinate of the layout.\n *\n * @param layout Layout array.\n * @return Bottom coordinate.\n */\nexport function bottom(layout: Layout): number {\n  let max = 0\n  let bottomY\n  for (let i = 0, len = layout.length; i < len; i++) {\n    bottomY = layout[i].y + layout[i].h\n    if (bottomY > max) max = bottomY\n  }\n  return max\n}\n\nexport function cloneLayout(layout: Layout): Layout {\n  const newLayout = Array(layout.length)\n  for (let i = 0, len = layout.length; i < len; i++) {\n    newLayout[i] = cloneLayoutItem(layout[i])\n  }\n  return newLayout\n}\n\n// Fast path to cloning, since this is monomorphic\nexport function cloneLayoutItem(layoutItem: LayoutItem): LayoutItem {\n  // return JSON.parse(JSON.stringify(layoutItem))\n  return { ...layoutItem }\n}\n\n/**\n * Given two layoutitems, check if they collide.\n *\n * @return True if colliding.\n */\nexport function collides(l1: LayoutItem, l2: LayoutItem): boolean {\n  if (l1 === l2) return false // same element\n  if (l1.x + l1.w <= l2.x) return false // l1 is left of l2\n  if (l1.x >= l2.x + l2.w) return false // l1 is right of l2\n  if (l1.y + l1.h <= l2.y) return false // l1 is above l2\n  if (l1.y >= l2.y + l2.h) return false // l1 is below l2\n  return true // boxes overlap\n}\n\n/**\n * Given a layout, compact it. This involves going down each y coordinate and removing gaps\n * between items.\n *\n * @param  layout Layout.\n * @param  verticalCompact Whether or not to compact the layout vertically.\n * @param minPositions\n * @return Compacted Layout.\n */\nexport function compact(layout: Layout, verticalCompact?: boolean, minPositions?: any): Layout {\n  // Statics go in the compareWith array right away so items flow around them.\n  const compareWith = getStatics(layout)\n  // We go through the items by row and column.\n  const sorted = sortLayoutItemsByRowCol(layout)\n  // Holding for new items.\n  const out: Layout = Array(layout.length)\n\n  for (let i = 0, len = sorted.length; i < len; i++) {\n    let l = sorted[i]\n\n    // Don't move static elements\n    if (!l.static) {\n      l = compactItem(compareWith, l, verticalCompact, minPositions)\n\n      // Add to comparison array. We only collide with items before this one.\n      // Statics are already in this array.\n      compareWith.push(l)\n    }\n\n    // Add to output array to make sure they still come out in the right order.\n    out[layout.indexOf(l)] = l\n\n    // Clear moved flag, if it exists.\n    l.moved = false\n  }\n\n  return out\n}\n\n/**\n * Compact an item in the layout.\n */\nexport function compactItem(\n  compareWith: Layout,\n  l: LayoutItem,\n  verticalCompact?: boolean,\n  minPositions?: any\n): LayoutItem {\n  if (verticalCompact) {\n    // Move the element up as far as it can go without colliding.\n    while (l.y > 0 && !getFirstCollision(compareWith, l)) {\n      l.y--\n    }\n  } else if (minPositions) {\n    const minY = minPositions[l.i].y\n    while (l.y > minY && !getFirstCollision(compareWith, l)) {\n      l.y--\n    }\n  }\n\n  // Move it down, and keep moving it down if it's colliding.\n  let collides\n  while ((collides = getFirstCollision(compareWith, l))) {\n    l.y = collides.y + collides.h\n  }\n  return l\n}\n\n/**\n * Given a layout, make sure all elements fit within its bounds.\n *\n * @param  layout Layout array.\n * @param  bounds Number of columns.\n */\nexport function correctBounds(layout: Layout, bounds: { cols: number }): Layout {\n  const collidesWith = getStatics(layout)\n  for (let i = 0, len = layout.length; i < len; i++) {\n    const l = layout[i]\n    // Overflows right\n    if (l.x + l.w > bounds.cols) l.x = bounds.cols - l.w\n    // Overflows left\n    if (l.x < 0) {\n      l.x = 0\n      l.w = bounds.cols\n    }\n    if (!l.static) collidesWith.push(l)\n    else {\n      // If this is static and collides with other statics, we must move it down.\n      // We have to do something nicer than just letting them overlap.\n      while (getFirstCollision(collidesWith, l)) {\n        l.y++\n      }\n    }\n  }\n  return layout\n}\n\n/**\n * Get a layout item by ID. Used so we can override later on if necessary.\n *\n * @param    layout Layout array.\n * @param   id     ID\n * @return     Item at ID.\n */\nexport function getLayoutItem(layout: Layout, id: number | string): LayoutItem | undefined {\n  for (let i = 0, len = layout.length; i < len; i++) {\n    if (layout[i].i === id) return layout[i]\n  }\n}\n\n/**\n * Returns the first item this layout collides with.\n * It doesn't appear to matter which order we approach this from, although\n * perhaps that is the wrong thing to do.\n *\n * @param  {Object} layoutItem Layout item.\n * @return {Object|undefined}  A colliding layout item, or undefined.\n */\nexport function getFirstCollision(layout: Layout, layoutItem: LayoutItem): LayoutItem | undefined {\n  for (let i = 0, len = layout.length; i < len; i++) {\n    if (collides(layout[i], layoutItem)) return layout[i]\n  }\n}\n\nexport function getAllCollisions(layout: Layout, layoutItem: LayoutItem): Array<LayoutItem> {\n  return layout.filter(l => collides(l, layoutItem))\n}\n\n/**\n * Get all static elements.\n * @param layout Array of layout objects.\n * @return  Array of static layout items..\n */\nexport function getStatics(layout: Layout): Array<LayoutItem> {\n  return layout.filter(l => l.static)\n}\n\n/**\n * Move an element. Responsible for doing cascading movements of other elements.\n *\n * @param        layout Full layout to modify.\n * @param   layoutItem      element to move.\n * @param       x    X position in grid units.\n * @param       y    Y position in grid units.\n * @param      isUserAction If true, designates that the item we're moving is\n *                                     being dragged/resized by th euser.\n */\nexport function moveElement(\n  layout: Layout,\n  layoutItem: LayoutItem,\n  x?: number,\n  y?: number,\n  isUserAction = false,\n  preventCollision = false\n): Layout {\n  if (layoutItem.static) return layout\n\n  const oldX = layoutItem.x\n  const oldY = layoutItem.y\n\n  const movingUp = y && layoutItem.y > y\n  // This is quite a bit faster than extending the object\n  if (typeof x === 'number') layoutItem.x = x\n  if (typeof y === 'number') layoutItem.y = y\n  layoutItem.moved = true\n\n  // If this collides with anything, move it.\n  // When doing this comparison, we have to sort the items we compare with\n  // to ensure, in the case of multiple collisions, that we're getting the\n  // nearest collision.\n  let sorted = sortLayoutItemsByRowCol(layout)\n  if (movingUp) sorted = sorted.reverse()\n  const collisions = getAllCollisions(sorted, layoutItem)\n\n  if (preventCollision && collisions.length) {\n    layoutItem.x = oldX\n    layoutItem.y = oldY\n    layoutItem.moved = false\n    return layout\n  }\n\n  // Move each item that collides away from this element.\n  for (let i = 0, len = collisions.length; i < len; i++) {\n    const collision = collisions[i]\n\n    // Short circuit so we can't infinite loop\n    if (collision.moved) continue\n\n    // This makes it feel a bit more precise by waiting to swap for just a bit when moving up.\n    if (layoutItem.y > collision.y && layoutItem.y - collision.y > collision.h / 4) continue\n\n    // Don't move static items - we have to move *this* element away\n    if (collision.static) {\n      layout = moveElementAwayFromCollision(layout, collision, layoutItem, isUserAction)\n    } else {\n      layout = moveElementAwayFromCollision(layout, layoutItem, collision, isUserAction)\n    }\n  }\n\n  return layout\n}\n\n/**\n * This is where the magic needs to happen - given a collision, move an element away from the collision.\n * We attempt to move it up if there's room, otherwise it goes below.\n *\n * @param   layout            Full layout to modify.\n * @param   collidesWith Layout item we're colliding with.\n * @param   itemToMove   Layout item we're moving.\n * @param  isUserAction  If true, designates that the item we're moving is being dragged/resized\n *                                   by the user.\n */\nexport function moveElementAwayFromCollision(\n  layout: Layout,\n  collidesWith: LayoutItem,\n  itemToMove: LayoutItem,\n  isUserAction?: boolean\n): Layout {\n  const preventCollision = false // we're already colliding\n  // If there is enough space above the collision to put this element, move it there.\n  // We only do this on the main collision as this can get funky in cascades and cause\n  // unwanted swapping behavior.\n  if (isUserAction) {\n    // Make a mock item so we don't modify the item here, only modify in moveElement.\n    const fakeItem: LayoutItem = {\n      x: itemToMove.x,\n      y: itemToMove.y,\n      w: itemToMove.w,\n      h: itemToMove.h,\n      i: '-1'\n    }\n    fakeItem.y = Math.max(collidesWith.y - itemToMove.h, 0)\n    if (!getFirstCollision(layout, fakeItem)) {\n      return moveElement(layout, itemToMove, undefined, fakeItem.y, preventCollision)\n    }\n  }\n\n  // Previously this was optimized to move below the collision directly, but this can cause problems\n  // with cascading moves, as an item may actually leapflog a collision and cause a reversal in order.\n  return moveElement(layout, itemToMove, undefined, itemToMove.y + 1, preventCollision)\n}\n\n/**\n * Helper to convert a number to a percentage string.\n *\n * @param   num Any number\n * @return      That number as a percentage.\n */\nexport function perc(num: number): string {\n  return num * 100 + '%'\n}\n\nexport function setTransform(top: number, left: number, width: number, height: number) {\n  // Replace unitless items with px\n  const translate = 'translate3d(' + left + 'px,' + top + 'px, 0)'\n  return {\n    transform: translate,\n    WebkitTransform: translate,\n    MozTransform: translate,\n    msTransform: translate,\n    OTransform: translate,\n    width: width + 'px',\n    height: height + 'px',\n    position: 'absolute'\n  }\n}\n/**\n * Just like the setTransform method, but instead it will return a negative value of right.\n *\n * @param top\n * @param right\n * @param width\n * @param height\n * @returns {{transform: string, WebkitTransform: string, MozTransform: string, msTransform: string, OTransform: string, width: string, height: string, position: string}}\n */\nexport function setTransformRtl(top: number, right: number, width: number, height: number) {\n  // Replace unitless items with px\n  const translate = 'translate3d(' + right * -1 + 'px,' + top + 'px, 0)'\n  return {\n    transform: translate,\n    WebkitTransform: translate,\n    MozTransform: translate,\n    msTransform: translate,\n    OTransform: translate,\n    width: width + 'px',\n    height: height + 'px',\n    position: 'absolute'\n  }\n}\n\nexport function setTopLeft(top: number, left: number, width: number, height: number) {\n  return {\n    top: top + 'px',\n    left: left + 'px',\n    width: width + 'px',\n    height: height + 'px',\n    position: 'absolute'\n  }\n}\n/**\n * Just like the setTopLeft method, but instead, it will return a right property instead of left.\n *\n * @param top\n * @param right\n * @param width\n * @param height\n * @returns position style\n */\nexport function setTopRight(top: number, right: number, width: number, height: number) {\n  return {\n    top: top + 'px',\n    right: right + 'px',\n    width: width + 'px',\n    height: height + 'px',\n    position: 'absolute'\n  }\n}\n\n/**\n * Get layout items sorted from top left to right and down.\n *\n * @return Layout, sorted static items first.\n */\nexport function sortLayoutItemsByRowCol(layout: Layout): Layout {\n  return Array.from(layout).sort(function (a, b) {\n    if (a.y === b.y && a.x === b.x) {\n      return 0\n    }\n\n    if (a.y > b.y || (a.y === b.y && a.x > b.x)) {\n      return 1\n    }\n\n    return -1\n  })\n}\n\n/**\n * Validate a layout. Throws errors.\n *\n * @param layout Array of layout items.\n * @param contextName Context name for errors.\n * @throw Validation error.\n */\nexport function validateLayout(layout: Layout, contextName?: string): void {\n  contextName = contextName || 'Layout'\n  const subProps = ['x', 'y', 'w', 'h']\n  const keyArr = []\n  if (!Array.isArray(layout)) throw new Error(contextName + ' must be an array!')\n  for (let i = 0, len = layout.length; i < len; i++) {\n    const item = layout[i]\n    for (let j = 0; j < subProps.length; j++) {\n      if (typeof (item as any)[subProps[j]] !== 'number') {\n        throw new Error(\n          'VueGridLayout: ' + contextName + '[' + i + '].' + subProps[j] + ' must be a number!'\n        )\n      }\n    }\n\n    if (item.i === undefined || item.i === null) {\n      throw new Error('VueGridLayout: ' + contextName + '[' + i + '].i cannot be null!')\n    }\n\n    if (typeof item.i !== 'number' && typeof item.i !== 'string') {\n      throw new Error('VueGridLayout: ' + contextName + '[' + i + '].i must be a string or number!')\n    }\n\n    if (keyArr.indexOf(item.i) >= 0) {\n      throw new Error('VueGridLayout: ' + contextName + '[' + i + '].i must be unique!')\n    }\n    keyArr.push(item.i)\n\n    if (item.static !== undefined && typeof item.static !== 'boolean') {\n      throw new Error('VueGridLayout: ' + contextName + '[' + i + '].static must be a boolean!')\n    }\n  }\n}\n\n// Flow can't really figure this out, so we just use Object\nexport function autoBindHandlers(\n  el: Record<string, (...args: any[]) => any>,\n  fns: Array<string>\n): void {\n  fns.forEach(key => (el[key] = el[key].bind(el)))\n}\n\n/**\n * Convert a JS object to CSS string. Similar to React's output of CSS.\n * @param obj\n * @returns\n */\nexport function createMarkup(obj: Record<string, any>) {\n  const keys = Object.keys(obj)\n  if (!keys.length) return ''\n  let i\n  const len = keys.length\n  let result = ''\n\n  for (i = 0; i < len; i++) {\n    const key = keys[i]\n    const val = obj[key]\n    result += hyphenate(key) + ':' + addPx(key, val) + ';'\n  }\n\n  return result\n}\n\n/* The following list is defined in React's core */\nexport const IS_UNITLESS: Record<string, boolean> = {\n  animationIterationCount: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridColumn: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  stopOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n}\n\n/**\n * Will add px to the end of style values which are Numbers.\n * @param name\n * @param value\n * @returns {*}\n */\nexport function addPx(name: string, value: number | string) {\n  if (typeof value === 'number' && !IS_UNITLESS[name]) {\n    return value + 'px'\n  } else {\n    return value\n  }\n}\n\nexport const hyphenateRE = /([a-z\\d])([A-Z])/g\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param  str\n * @return\n */\nexport function hyphenate(str: string) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase()\n}\n\nexport function findItemInArray(array: any[], property: string, value: any) {\n  for (let i = 0; i < array.length; i++) {\n    if (array[i][property] === value) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport function findAndRemove(array: any[], property: string, value: any) {\n  array.forEach(function (result, index) {\n    if (result[property] === value) {\n      // Remove from array\n      array.splice(index, 1)\n    }\n  })\n}\n\nexport function useNameHelper(block: string, namespace = 'vgl') {\n  /**\n   * @returns `${namespace}-${block}`\n   */\n  const b = () => `${namespace}-${block}`\n  /**\n   * @returns `${namespace}-${block}__${element}`\n   */\n  const be = (element: string) => `${b()}__${element}`\n  /**\n   * @returns `${namespace}-${block}--${modifier}`\n   */\n  const bm = (modifier: string | number) => `${b()}--${modifier}`\n  /**\n   * @returns `${namespace}-${block}__${element}--${modifier}`\n   */\n  const bem = (element: string, modifier: string | number) => `${b()}__${element}--${modifier}`\n\n  return {\n    b,\n    be,\n    bm,\n    bem\n  }\n}\n", "// Get {x, y} positions from event.\nexport function getControlPosition(e: MouseEvent) {\n  return offsetXYFromParentOf(e)\n}\n\n// Get from offsetParent\nexport function offsetXYFromParentOf(evt: MouseEvent) {\n  const offsetParent = (evt.target as HTMLElement)?.offsetParent || document.body\n  const offsetParentRect =\n    (evt as any).offsetParent === document.body\n      ? { left: 0, top: 0 }\n      : offsetParent.getBoundingClientRect()\n\n  const x = evt.clientX + offsetParent.scrollLeft - offsetParentRect.left\n  const y = evt.clientY + offsetParent.scrollTop - offsetParentRect.top\n\n  /* const x = Math.round(evt.clientX + offsetParent.scrollLeft - offsetParentRect.left);\n  const y = Math.round(evt.clientY + offsetParent.scrollTop - offsetParentRect.top); */\n\n  return { x, y }\n}\n\n// Create an data object exposed by <DraggableCore>'s events\nexport function createCoreData(lastX: number, lastY: number, x: number, y: number) {\n  // State changes are often (but not always!) async. We want the latest value.\n  const isStart = !isNum(lastX)\n\n  if (isStart) {\n    // If this is our first move, use the x and y as last coords.\n    return {\n      deltaX: 0,\n      deltaY: 0,\n      lastX: x,\n      lastY: y,\n      x,\n      y\n    }\n  } else {\n    // Otherwise calculate proper values.\n    return {\n      deltaX: x - lastX,\n      deltaY: y - lastY,\n      lastX,\n      lastY,\n      x,\n      y\n    }\n  }\n}\n\nfunction isNum(num: unknown): num is number {\n  return typeof num === 'number' && !Number.isNaN(num)\n}\n", "import { cloneLayout, compact, correctBounds } from './common'\n\nimport type { Layout, Breakpoint, Breakpoints, ResponsiveLayout } from './types'\n\n/**\n * Given a width, find the highest breakpoint that matches is valid for it (width > breakpoint).\n *\n * @param   breakpoints Breakpoints object (e.g. {lg: 1200, md: 960, ...})\n * @param   width Screen width.\n * @return        Highest breakpoint that is less than width.\n */\nexport function getBreakpointFromWidth(breakpoints: Breakpoints, width: number): Breakpoint {\n  const sorted = sortBreakpoints(breakpoints)\n  let matching = sorted[0]\n  for (let i = 1, len = sorted.length; i < len; i++) {\n    const breakpointName = sorted[i]\n    if (width > breakpoints[breakpointName]) matching = breakpointName\n  }\n  return matching\n}\n\n/**\n * Given a breakpoint, get the # of cols set for it.\n * @param   breakpoint Breakpoint name.\n * @param   cols       Map of breakpoints to cols.\n * @return             Number of cols.\n */\nexport function getColsFromBreakpoint(breakpoint: Breakpoint, cols: Breakpoints): number {\n  if (!cols[breakpoint]) {\n    throw new Error('ResponsiveGridLayout: `cols` entry for breakpoint ' + breakpoint + ' is missing!')\n  }\n  return cols[breakpoint]\n}\n\n/**\n * Given existing layouts and a new breakpoint, find or generate a new layout.\n *\n * This finds the layout above the new one and generates from it, if it exists.\n *\n * @param  orgLayout     Original layout.\n * @param  layouts     Existing layouts.\n * @param  breakpoints All breakpoints.\n * @param  breakpoint New breakpoint.\n * @param  breakpoint Last breakpoint (for fallback).\n * @param  cols       Column count at new breakpoint.\n * @param  verticalCompact Whether or not to compact the layout\n *   vertically.\n * @return              New layout.\n */\nexport function findOrGenerateResponsiveLayout(orgLayout: Layout, layouts: ResponsiveLayout, breakpoints: Breakpoints,\n  breakpoint: Breakpoint, lastBreakpoint: Breakpoint,\n  cols: number, verticalCompact: boolean): Layout {\n  // If it already exists, just return it.\n  if (layouts[breakpoint]) return cloneLayout(layouts[breakpoint])\n  // Find or generate the next layout\n  let layout = orgLayout\n\n  const breakpointsSorted = sortBreakpoints(breakpoints)\n  const breakpointsAbove = breakpointsSorted.slice(breakpointsSorted.indexOf(breakpoint))\n  for (let i = 0, len = breakpointsAbove.length; i < len; i++) {\n    const b = breakpointsAbove[i]\n    if (layouts[b]) {\n      layout = layouts[b]\n      break\n    }\n  }\n  layout = cloneLayout(layout || []) // clone layout so we don't modify existing items\n  return compact(correctBounds(layout, { cols }), verticalCompact)\n}\n\nexport function generateResponsiveLayout(layout: Layout, breakpoints: Breakpoints,\n  breakpoint: Breakpoint, lastBreakpoint: Breakpoint,\n  cols: number, verticalCompact: boolean): Layout {\n  // If it already exists, just return it.\n  /* if (layouts[breakpoint]) return cloneLayout(layouts[breakpoint]);\n  // Find or generate the next layout\n  let layout = layouts[lastBreakpoint]; */\n  /* const breakpointsSorted = sortBreakpoints(breakpoints);\nconst breakpointsAbove = breakpointsSorted.slice(breakpointsSorted.indexOf(breakpoint));\nfor (let i = 0, len = breakpointsAbove.length; i < len; i++) {\n  const b = breakpointsAbove[i];\n  if (layouts[b]) {\n    layout = layouts[b];\n    break;\n  }\n} */\n  layout = cloneLayout(layout || []) // clone layout so we don't modify existing items\n  return compact(correctBounds(layout, { cols }), verticalCompact)\n}\n\n/**\n * Given breakpoints, return an array of breakpoints sorted by width. This is usually\n * e.g. ['xxs', 'xs', 'sm', ...]\n *\n * @param  breakpoints Key/value pair of breakpoint names to widths.\n * @return              Sorted breakpoints.\n */\nexport function sortBreakpoints(breakpoints: Breakpoints): Array<Breakpoint> {\n  const keys = Object.keys(breakpoints) as Array<Breakpoint>\n  return keys.sort((a, b) => breakpoints[a] - breakpoints[b])\n}\n", "let currentDir: 'ltr' | 'rtl' | 'auto' = 'auto'\n\nfunction hasDocument() {\n  return typeof document !== 'undefined'\n}\n\nexport function getDocumentDir() {\n  if (!hasDocument()) {\n    return currentDir\n  }\n  const direction =\n    typeof document.dir !== 'undefined'\n      ? document.dir\n      : document.getElementsByTagName('html')[0].getAttribute('dir')\n  return direction\n}\n\nexport function setDocumentDir(dir: 'ltr' | 'rtl' | 'auto') {\n  if (!hasDocument()) {\n    currentDir = dir\n    return\n  }\n\n  const html = document.getElementsByTagName('html')[0]\n  html.setAttribute('dir', dir)\n}\n", "<script setup lang=\"ts\">\nimport {\n  ref,\n  reactive,\n  toRef,\n  computed,\n  watch,\n  watchEffect,\n  inject,\n  onBeforeMount,\n  onMounted,\n  onBeforeUnmount\n} from 'vue'\nimport { isNull, nextTickOnce, throttle } from '@vexip-ui/utils'\nimport {\n  LAYOUT_KEY,\n  EMITTER_KEY,\n  setTopLeft,\n  setTopRight,\n  setTransformRtl,\n  setTransform,\n  useNameHelper\n} from '../helpers/common'\nimport { getControlPosition, createCoreData } from '../helpers/draggable'\nimport { getColsFromBreakpoint } from '../helpers/responsive'\nimport { getDocumentDir } from '../helpers/dom'\n\nimport interact from 'interactjs'\n\nconst props = defineProps({\n  isDraggable: {\n    type: Boolean,\n    default: null\n  },\n  isResizable: {\n    type: Boolean,\n    default: null\n  },\n  isBounded: {\n    type: Boolean,\n    default: null\n  },\n  static: {\n    type: Boolean,\n    default: false\n  },\n  minH: {\n    type: Number,\n    default: 1\n  },\n  minW: {\n    type: Number,\n    default: 1\n  },\n  maxH: {\n    type: Number,\n    default: Infinity\n  },\n  maxW: {\n    type: Number,\n    default: Infinity\n  },\n  x: {\n    type: Number,\n    required: true\n  },\n  y: {\n    type: Number,\n    required: true\n  },\n  w: {\n    type: Number,\n    required: true\n  },\n  h: {\n    type: Number,\n    required: true\n  },\n  i: {\n    type: [Number, String],\n    required: true\n  },\n  dragIgnoreFrom: {\n    type: String,\n    default: 'a, button'\n  },\n  dragAllowFrom: {\n    type: String,\n    default: null\n  },\n  resizeIgnoreFrom: {\n    type: String,\n    default: 'a, button'\n  },\n  preserveAspectRatio: {\n    type: Boolean,\n    default: false\n  },\n  dragOption: {\n    type: Object,\n    default: () => ({})\n  },\n  resizeOption: {\n    type: Object,\n    default: () => ({})\n  }\n})\n\nconst emit = defineEmits(['container-resized', 'resize', 'resized', 'move', 'moved'])\n\nconst layout = inject(LAYOUT_KEY)\nconst emitter = inject(EMITTER_KEY)!\n\nif (!layout) {\n  throw new Error('[grid-layout-plus]: missing layout store, GridItem must under a GridLayout.')\n}\n\nconst interactObj = ref<InstanceType<typeof import('@interactjs/types').Interactable> | null>(null)\n\nconst state = reactive({\n  cols: 1,\n  containerWidth: 100,\n  rowHeight: 30,\n  margin: [10, 10],\n  maxRows: Infinity,\n  draggable: null as boolean | null,\n  resizable: null as boolean | null,\n  bounded: null as boolean | null,\n  transformScale: 1,\n  useCssTransforms: true,\n  useStyleCursor: true,\n\n  isDragging: false,\n  dragging: {\n    top: -1,\n    left: -1\n  },\n  isResizing: false,\n  resizing: {\n    width: -1,\n    height: -1\n  },\n  style: {} as Record<string, string>,\n  rtl: false\n})\n\nlet dragEventSet = false\nlet resizeEventSet = false\n\nlet lastX = NaN\nlet lastY = NaN\nlet lastW = NaN\nlet lastH = NaN\n\nlet previousW = -1\nlet previousH = -1\nlet previousX = -1\nlet previousY = -1\n\nlet innerX = props.x\nlet innerY = props.y\nlet innerW = props.w\nlet innerH = props.h\n\nconst wrapper = ref<HTMLElement>()\n\nconst instance = reactive({\n  i: toRef(props, 'i'),\n  state,\n  wrapper,\n  calcXY\n})\n\nfunction updateWidthHandler(width: number) {\n  updateWidth(width)\n}\n\nfunction compactHandler() {\n  compact()\n}\n\nfunction setDraggableHandler(isDraggable: boolean) {\n  if (isNull(props.isDraggable)) {\n    state.draggable = isDraggable\n  }\n}\n\nfunction setResizableHandler(isResizable: boolean) {\n  if (isNull(props.isResizable)) {\n    state.resizable = isResizable\n  }\n}\n\nfunction setBoundedHandler(isBounded: boolean) {\n  if (isNull(props.isBounded)) {\n    state.bounded = isBounded\n  }\n}\n\nfunction setTransformScaleHandler(transformScale: number) {\n  state.transformScale = transformScale\n}\n\nfunction setRowHeightHandler(rowHeight: number) {\n  state.rowHeight = rowHeight\n}\n\nfunction setMaxRowsHandler(maxRows: number) {\n  state.maxRows = maxRows\n}\n\nfunction directionchangeHandler() {\n  state.rtl = getDocumentDir() === 'rtl'\n  compact()\n}\n\nfunction setColNum(colNum: number) {\n  state.cols = Math.floor(colNum)\n}\n\nlayout.increaseItem(instance)\n\nonBeforeMount(() => {\n  state.rtl = getDocumentDir() === 'rtl'\n})\n\nonMounted(() => {\n  if (layout.responsive && layout.lastBreakpoint) {\n    state.cols = getColsFromBreakpoint(layout.lastBreakpoint, layout.cols)\n  } else {\n    state.cols = layout.colNum\n  }\n  state.rowHeight = layout.rowHeight\n  state.containerWidth = layout.width !== null ? layout.width : 100\n  state.margin = layout.margin !== undefined ? layout.margin.map(Number) : [10, 10]\n  state.maxRows = layout.maxRows\n\n  if (isNull(props.isDraggable)) {\n    state.draggable = layout.isDraggable\n  } else {\n    state.draggable = props.isDraggable\n  }\n  if (isNull(props.isResizable)) {\n    state.resizable = layout.isResizable\n  } else {\n    state.resizable = props.isResizable\n  }\n  if (isNull(props.isBounded)) {\n    state.bounded = layout.isBounded\n  } else {\n    state.bounded = props.isBounded\n  }\n  state.transformScale = layout.transformScale\n  state.useCssTransforms = layout.useCssTransforms\n  state.useStyleCursor = layout.useStyleCursor\n\n  watchEffect(() => {\n    innerX = props.x\n    innerY = props.y\n    innerH = props.h\n    innerW = props.w\n    nextTickOnce(createStyle)\n  })\n\n  emitter.on('updateWidth', updateWidthHandler)\n  emitter.on('compact', compactHandler)\n  emitter.on('setDraggable', setDraggableHandler)\n  emitter.on('setResizable', setResizableHandler)\n  emitter.on('setBounded', setBoundedHandler)\n  emitter.on('setTransformScale', setTransformScaleHandler)\n  emitter.on('setRowHeight', setRowHeightHandler)\n  emitter.on('setMaxRows', setMaxRowsHandler)\n  emitter.on('directionchange', directionchangeHandler)\n  emitter.on('setColNum', setColNum)\n})\n\nonBeforeUnmount(() => {\n  emitter.off('updateWidth', updateWidthHandler)\n  emitter.off('compact', compactHandler)\n  emitter.off('setDraggable', setDraggableHandler)\n  emitter.off('setResizable', setResizableHandler)\n  emitter.off('setBounded', setBoundedHandler)\n  emitter.off('setTransformScale', setTransformScaleHandler)\n  emitter.off('setRowHeight', setRowHeightHandler)\n  emitter.off('setMaxRows', setMaxRowsHandler)\n  emitter.off('directionchange', directionchangeHandler)\n  emitter.off('setColNum', setColNum)\n\n  if (interactObj.value) {\n    interactObj.value.unset() // destroy interact intance\n    interactObj.value = null\n  }\n\n  layout.decreaseItem(instance)\n})\n\ndefineExpose({ state, wrapper })\n\nconst isAndroid = navigator.userAgent.toLowerCase().includes('android')\n\nconst resizableAndNotStatic = computed(() => state.resizable && !props.static)\nconst renderRtl = computed(() => (layout.isMirrored ? !state.rtl : state.rtl))\nconst draggableOrResizableAndNotStatic = computed(() => {\n  return (state.draggable || state.resizable) && !props.static\n})\n\nconst nh = useNameHelper('item')\n\nconst className = computed(() => {\n  return {\n    [nh.b()]: true,\n    [nh.bm('resizable')]: resizableAndNotStatic.value,\n    [nh.bm('static')]: props.static,\n    [nh.bm('resizing')]: state.isResizing,\n    [nh.bm('dragging')]: state.isDragging,\n    [nh.bm('transform')]: state.useCssTransforms,\n    [nh.bm('rtl')]: renderRtl.value,\n    [nh.bm('no-touch')]: isAndroid && draggableOrResizableAndNotStatic.value\n  }\n})\nconst resizerClass = computed(() => {\n  // return renderRtl.value ? 'vue-resizable-handle vue-rtl-resizable-handle' : 'vue-resizable-handle'\n  return [nh.be('resizer'), renderRtl.value && nh.bem('resizer', 'rtl')].filter(Boolean)\n})\n\nwatch(\n  () => props.isDraggable,\n  value => {\n    state.draggable = value\n  }\n)\nwatch(\n  () => props.static,\n  () => {\n    nextTickOnce(tryMakeDraggable)\n    nextTickOnce(tryMakeResizable)\n  }\n)\nwatch(\n  () => state.draggable,\n  () => {\n    nextTickOnce(tryMakeDraggable)\n  }\n)\nwatch(\n  () => props.isResizable,\n  value => {\n    state.resizable = value\n  }\n)\nwatch(\n  () => props.isBounded,\n  value => {\n    state.bounded = value\n  }\n)\nwatch(\n  () => state.resizable,\n  () => {\n    nextTickOnce(tryMakeResizable)\n  }\n)\nwatch(\n  () => state.rowHeight,\n  () => {\n    nextTickOnce(createStyle)\n    nextTickOnce(emitContainerResized)\n  }\n)\nwatch([() => state.cols, () => state.containerWidth], () => {\n  nextTickOnce(tryMakeResizable)\n  nextTickOnce(createStyle)\n  nextTickOnce(emitContainerResized)\n})\nwatch([() => props.minH, () => props.maxH, () => props.minW, () => props.maxW], () => {\n  nextTickOnce(tryMakeResizable)\n})\nwatch(renderRtl, () => {\n  nextTickOnce(tryMakeResizable)\n  nextTickOnce(createStyle)\n})\nwatch([() => layout.margin, () => layout.margin[0], () => layout.margin[1]], () => {\n  const margin = layout.margin\n\n  if (!margin || (margin[0] === state.margin[0] && margin[1] === state.margin[1])) {\n    return\n  }\n\n  state.margin = margin.map(Number)\n  nextTickOnce(createStyle)\n  nextTickOnce(emitContainerResized)\n})\n\nfunction createStyle() {\n  if (props.x + props.w > state.cols) {\n    innerX = 0\n    innerW = props.w > state.cols ? state.cols : props.w\n  } else {\n    innerX = props.x\n    innerW = props.w\n  }\n\n  const pos = calcPosition(innerX, innerY, innerW, innerH)\n\n  if (state.isDragging) {\n    pos.top = state.dragging.top\n    // Add rtl support\n    if (renderRtl.value) {\n      pos.right = state.dragging.left\n    } else {\n      pos.left = state.dragging.left\n    }\n  }\n  if (state.isResizing) {\n    pos.width = state.resizing.width\n    pos.height = state.resizing.height\n  }\n\n  let style\n  // CSS Transforms support (default)\n  if (state.useCssTransforms) {\n    // Add rtl support\n    if (renderRtl.value) {\n      style = setTransformRtl(pos.top, pos.right!, pos.width, pos.height)\n    } else {\n      style = setTransform(pos.top, pos.left!, pos.width, pos.height)\n    }\n  } else {\n    // top,left (slow)\n    // Add rtl support\n    if (renderRtl.value) {\n      style = setTopRight(pos.top, pos.right!, pos.width, pos.height)\n    } else {\n      style = setTopLeft(pos.top, pos.left!, pos.width, pos.height)\n    }\n  }\n\n  state.style = style\n}\n\nfunction emitContainerResized() {\n  // this.style has width and height with trailing 'px'. The\n  // resized event is without them\n  const styleProps: Record<string, string> = {}\n  for (const prop of ['width', 'height']) {\n    const val = state.style[prop]\n    const matches = val.match(/^(\\d+)px$/)\n    if (!matches) {\n      return\n    }\n    styleProps[prop] = matches[1]\n  }\n  emit('container-resized', props.i, props.h, props.w, styleProps.height, styleProps.width)\n}\n\nfunction handleResize(event: MouseEvent) {\n  if (props.static) return\n\n  const type = event.type\n  if (\n    (type === 'resizestart' && state.isResizing) ||\n    (type !== 'resizestart' && !state.isResizing)\n  ) {\n    return\n  }\n\n  const position = getControlPosition(event)\n  // Get the current drag point from the event. This is used as the offset.\n  if (isNull(position)) return // not possible but satisfies flow\n\n  const { x, y } = position\n  const newSize = { width: 0, height: 0 }\n  let pos\n  switch (type) {\n    case 'resizestart': {\n      tryMakeResizable()\n      previousW = innerW\n      previousH = innerH\n      pos = calcPosition(innerX, innerY, innerW, innerH)\n      newSize.width = pos.width\n      newSize.height = pos.height\n      state.resizing = newSize\n      state.isResizing = true\n      break\n    }\n    case 'resizemove': {\n      const coreEvent = createCoreData(lastW, lastH, x, y)\n      if (renderRtl.value) {\n        newSize.width = state.resizing.width - coreEvent.deltaX / state.transformScale\n      } else {\n        newSize.width = state.resizing.width + coreEvent.deltaX / state.transformScale\n      }\n      newSize.height = state.resizing.height + coreEvent.deltaY / state.transformScale\n      state.resizing = newSize\n      break\n    }\n    case 'resizeend': {\n      pos = calcPosition(innerX, innerY, innerW, innerH)\n      newSize.width = pos.width\n      newSize.height = pos.height\n\n      state.resizing = { width: -1, height: -1 }\n      state.isResizing = false\n      break\n    }\n  }\n\n  // Get new WH\n  pos = calcWH(newSize.height, newSize.width)\n  if (pos.w < props.minW) {\n    pos.w = props.minW\n  }\n  if (pos.w > props.maxW) {\n    pos.w = props.maxW\n  }\n  if (pos.h < props.minH) {\n    pos.h = props.minH\n  }\n  if (pos.h > props.maxH) {\n    pos.h = props.maxH\n  }\n\n  if (pos.h < 1) {\n    pos.h = 1\n  }\n  if (pos.w < 1) {\n    pos.w = 1\n  }\n\n  lastW = x\n  lastH = y\n\n  if (innerW !== pos.w || innerH !== pos.h) {\n    emit('resize', props.i, pos.h, pos.w, newSize.height, newSize.width)\n  }\n  if (event.type === 'resizeend' && (previousW !== innerW || previousH !== innerH)) {\n    emit('resized', props.i, pos.h, pos.w, newSize.height, newSize.width)\n  }\n  emitter.emit('resizeEvent', event.type, props.i, innerX, innerY, pos.h, pos.w)\n}\n\nfunction handleDrag(event: MouseEvent) {\n  if (props.static || state.isResizing) return\n\n  const type = event.type\n  if ((type === 'dragstart' && state.isDragging) || (type !== 'dragstart' && !state.isDragging)) {\n    return\n  }\n\n  const position = getControlPosition(event)\n\n  // Get the current drag point from the event. This is used as the offset.\n  if (isNull(position)) return // not possible but satisfies flow\n  const { x, y } = position\n  const target = event.target as HTMLElement\n\n  if (!target.offsetParent) return\n\n  // let shouldUpdate = false;\n  const newPosition = { top: 0, left: 0 }\n  switch (type) {\n    case 'dragstart': {\n      previousX = innerX\n      previousY = innerY\n\n      const parentRect = target.offsetParent.getBoundingClientRect()\n      const clientRect = target.getBoundingClientRect()\n\n      const cLeft = clientRect.left / state.transformScale\n      const pLeft = parentRect.left / state.transformScale\n      const cRight = clientRect.right / state.transformScale\n      const pRight = parentRect.right / state.transformScale\n      const cTop = clientRect.top / state.transformScale\n      const pTop = parentRect.top / state.transformScale\n\n      if (renderRtl.value) {\n        newPosition.left = (cRight - pRight) * -1\n      } else {\n        newPosition.left = cLeft - pLeft\n      }\n      newPosition.top = cTop - pTop\n      state.dragging = newPosition\n      state.isDragging = true\n      break\n    }\n    case 'dragmove': {\n      const coreEvent = createCoreData(lastX, lastY, x, y)\n      // Add rtl support\n      if (renderRtl.value) {\n        newPosition.left = state.dragging.left - coreEvent.deltaX / state.transformScale\n      } else {\n        newPosition.left = state.dragging.left + coreEvent.deltaX / state.transformScale\n      }\n      newPosition.top = state.dragging.top + coreEvent.deltaY / state.transformScale\n      if (state.bounded) {\n        const bottomBoundary =\n          target.offsetParent.clientHeight -\n          calcGridItemWHPx(props.h, state.rowHeight, state.margin[1])\n        newPosition.top = clamp(newPosition.top, 0, bottomBoundary)\n        const colWidth = calcColWidth()\n        const rightBoundary =\n          state.containerWidth - calcGridItemWHPx(props.w, colWidth, state.margin[0])\n        newPosition.left = clamp(newPosition.left, 0, rightBoundary)\n      }\n\n      state.dragging = newPosition\n      break\n    }\n    case 'dragend': {\n      const parentRect = target.offsetParent.getBoundingClientRect()\n      const clientRect = target.getBoundingClientRect()\n\n      const cLeft = clientRect.left / state.transformScale\n      const pLeft = parentRect.left / state.transformScale\n      const cRight = clientRect.right / state.transformScale\n      const pRight = parentRect.right / state.transformScale\n      const cTop = clientRect.top / state.transformScale\n      const pTop = parentRect.top / state.transformScale\n\n      // Add rtl support\n      if (renderRtl.value) {\n        newPosition.left = (cRight - pRight) * -1\n      } else {\n        newPosition.left = cLeft - pLeft\n      }\n      newPosition.top = cTop - pTop\n      state.dragging = { top: -1, left: -1 }\n      state.isDragging = false\n      break\n    }\n  }\n\n  // Get new XY\n  let pos\n  if (renderRtl.value) {\n    pos = calcXY(newPosition.top, newPosition.left)\n  } else {\n    pos = calcXY(newPosition.top, newPosition.left)\n  }\n\n  lastX = x\n  lastY = y\n\n  if (innerX !== pos.x || innerY !== pos.y) {\n    emit('move', props.i, pos.x, pos.y)\n  }\n  if (event.type === 'dragend' && (previousX !== innerX || previousY !== innerY)) {\n    emit('moved', props.i, pos.x, pos.y)\n  }\n  emitter.emit('dragEvent', event.type, props.i, pos.x, pos.y, innerH, innerW)\n}\n\nfunction calcPosition(x: number, y: number, w: number, h: number) {\n  const colWidth = calcColWidth()\n  // add rtl support\n  let out\n  if (renderRtl.value) {\n    out = {\n      right: Math.round(colWidth * x + (x + 1) * state.margin[0]),\n      top: Math.round(state.rowHeight * y + (y + 1) * state.margin[1]),\n      // 0 * Infinity === NaN, which causes problems with resize constraints;\n      // Fix this if it occurs.\n      // Note we do it here rather than later because Math.round(Infinity) causes depot\n      width: w === Infinity ? w : Math.round(colWidth * w + Math.max(0, w - 1) * state.margin[0]),\n      height:\n        h === Infinity ? h : Math.round(state.rowHeight * h + Math.max(0, h - 1) * state.margin[1])\n    }\n  } else {\n    out = {\n      left: Math.round(colWidth * x + (x + 1) * state.margin[0]),\n      top: Math.round(state.rowHeight * y + (y + 1) * state.margin[1]),\n      // 0 * Infinity === NaN, which causes problems with resize constraints;\n      // Fix this if it occurs.\n      // Note we do it here rather than later because Math.round(Infinity) causes depot\n      width: w === Infinity ? w : Math.round(colWidth * w + Math.max(0, w - 1) * state.margin[0]),\n      height:\n        h === Infinity ? h : Math.round(state.rowHeight * h + Math.max(0, h - 1) * state.margin[1])\n    }\n  }\n\n  return out\n}\n\n/**\n * Translate x and y coordinates from pixels to grid units.\n * @param top  Top position (relative to parent) in pixels.\n * @param left Left position (relative to parent) in pixels.\n * @return x and y in grid units.\n */\n// TODO check if this function needs change in order to support rtl.\nfunction calcXY(top: number, left: number) {\n  const colWidth = calcColWidth()\n\n  // left = colWidth * x + margin * (x + 1)\n  // l = cx + m(x+1)\n  // l = cx + mx + m\n  // l - m = cx + mx\n  // l - m = x(c + m)\n  // (l - m) / (c + m) = x\n  // x = (left - margin) / (coldWidth + margin)\n  let x = Math.round((left - state.margin[0]) / (colWidth + state.margin[0]))\n  let y = Math.round((top - state.margin[1]) / (state.rowHeight + state.margin[1]))\n\n  // Capping\n  x = Math.max(Math.min(x, state.cols - innerW), 0)\n  y = Math.max(Math.min(y, state.maxRows - innerH), 0)\n\n  return { x, y }\n}\n\nfunction calcColWidth() {\n  return (state.containerWidth - state.margin[0] * (state.cols + 1)) / state.cols\n}\n\nfunction calcGridItemWHPx(gridUnits: number, colOrRowSize: number, marginPx: number) {\n  // 0 * Infinity === NaN, which causes problems with resize constraints\n  if (!Number.isFinite(gridUnits)) return gridUnits\n  return Math.round(colOrRowSize * gridUnits + Math.max(0, gridUnits - 1) * marginPx)\n}\n\nfunction clamp(num: number, lowerBound: number, upperBound: number) {\n  return Math.max(Math.min(num, upperBound), lowerBound)\n}\n\n/**\n * Given a height and width in pixel values, calculate grid units.\n * @param height Height in pixels.\n * @param width  Width in pixels.\n * @param autoSizeFlag  function autoSize identifier.\n * @return w, h as grid units.\n */\nfunction calcWH(height: number, width: number, autoSizeFlag = false) {\n  const colWidth = calcColWidth()\n\n  // width = colWidth * w - (margin * (w - 1))\n  // ...\n  // w = (width + margin) / (colWidth + margin)\n  let w = Math.round((width + state.margin[0]) / (colWidth + state.margin[0]))\n  let h = 0\n  if (!autoSizeFlag) {\n    h = Math.round((height + state.margin[1]) / (state.rowHeight + state.margin[1]))\n  } else {\n    h = Math.ceil((height + state.margin[1]) / (state.rowHeight + state.margin[1]))\n  }\n\n  // Capping\n  w = Math.max(Math.min(w, state.cols - innerX), 0)\n  h = Math.max(Math.min(h, state.maxRows - innerY), 0)\n  return { w, h }\n}\n\nfunction updateWidth(width: number, colNum?: number) {\n  state.containerWidth = width\n  if (colNum !== undefined && colNum !== null) {\n    state.cols = colNum\n  }\n}\n\nfunction compact() {\n  createStyle()\n}\n\nfunction tryInteract() {\n  if (!interactObj.value && wrapper.value) {\n    interactObj.value = interact(wrapper.value)\n    if (!state.useStyleCursor) {\n      interactObj.value.styleCursor(false)\n    }\n  }\n}\n\nconst throttleDrag = throttle(handleDrag)\n\nfunction tryMakeDraggable() {\n  tryInteract()\n\n  if (!interactObj.value) return\n\n  if (state.draggable && !props.static) {\n    const opts = {\n      ignoreFrom: props.dragIgnoreFrom,\n      allowFrom: props.dragAllowFrom,\n      ...props.dragOption\n    }\n    interactObj.value.draggable(opts)\n\n    if (!dragEventSet) {\n      dragEventSet = true\n      interactObj.value.on('dragstart dragmove dragend', event => {\n        event.type === 'dragmove' ? throttleDrag(event) : handleDrag(event)\n      })\n    }\n  } else {\n    interactObj.value.draggable({ enabled: false })\n  }\n}\n\nconst throttleResize = throttle(handleResize)\n\nfunction tryMakeResizable() {\n  tryInteract()\n\n  if (!interactObj.value) return\n\n  if (state.resizable && !props.static) {\n    const maximum = calcPosition(0, 0, props.maxW, props.maxH)\n    const minimum = calcPosition(0, 0, props.minW, props.minH)\n\n    const opts: Record<string, any> = {\n      edges: {\n        left: false,\n        right: `.${resizerClass.value[0]}`,\n        bottom: `.${resizerClass.value[0]}`,\n        top: false\n      },\n      ignoreFrom: props.resizeIgnoreFrom,\n      restrictSize: {\n        min: {\n          height: minimum.height * state.transformScale,\n          width: minimum.width * state.transformScale\n        },\n        max: {\n          height: maximum.height * state.transformScale,\n          width: maximum.width * state.transformScale\n        }\n      },\n      ...props.resizeOption\n    }\n\n    if (props.preserveAspectRatio) {\n      opts.modifiers = [interact.modifiers.aspectRatio({ ratio: 'preserve' })]\n    }\n\n    interactObj.value.resizable(opts)\n    if (!resizeEventSet) {\n      resizeEventSet = true\n      interactObj.value.on('resizestart resizemove resizeend', event => {\n        event.type === 'resizemove' ? throttleResize(event) : handleResize(event)\n      })\n    }\n  } else {\n    interactObj.value.resizable({ enabled: false })\n  }\n}\n</script>\n\n<template>\n  <section ref=\"wrapper\" :class=\"className\" :style=\"state.style\">\n    <slot></slot>\n    <span v-if=\"resizableAndNotStatic\" :class=\"resizerClass\"></span>\n  </section>\n</template>\n", "const y = typeof window < \"u\";\nvar At;\nconst gn = y && ((At = window == null ? void 0 : window.navigator) == null ? void 0 : At.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent), te = Object.prototype.toString, ee = Object.prototype.hasOwnProperty;\nfunction B(t, e) {\n  return te.call(t) === `[object ${e}]`;\n}\nfunction pn(t, e) {\n  return ee.call(t, e);\n}\nfunction w(t) {\n  return t != null;\n}\nfunction ne(t) {\n  return t == null;\n}\nfunction mn(t) {\n  return typeof t == \"number\";\n}\nfunction re(t) {\n  return Number.isNaN(t);\n}\nfunction bn(t) {\n  return typeof t == \"string\";\n}\nfunction yn(t) {\n  return typeof t == \"boolean\";\n}\nfunction Mn(t) {\n  return t === !0;\n}\nfunction Sn(t) {\n  return t === !1;\n}\nfunction wn(t) {\n  return typeof t == \"symbol\";\n}\nfunction En(t) {\n  return typeof t == \"bigint\";\n}\nfunction Nn(t) {\n  return Array.isArray(t);\n}\nfunction Y(t) {\n  return B(t, \"Object\");\n}\nfunction An(t) {\n  return !!t && typeof t.then == \"function\" && typeof t.catch == \"function\";\n}\nfunction Ft(t) {\n  return typeof t == \"function\";\n}\nfunction Fn(t) {\n  return B(t, \"Set\");\n}\nfunction Tn(t) {\n  return B(t, \"Map\");\n}\nfunction On(t) {\n  return B(t, \"Date\");\n}\nfunction $n(t) {\n  return B(t, \"RegExp\");\n}\nfunction Rn(t) {\n  return Array.isArray(t) || typeof t == \"string\" ? t.length === 0 : t instanceof Map || t instanceof Set ? t.size === 0 : Y(t) ? Object.keys(t).length === 0 : typeof t == \"number\" ? re(t) : ne(t);\n}\nfunction _n(t, e = !1) {\n  return !e && !y ? !1 : !!(t && \"nodeType\" in t);\n}\nfunction W(t) {\n  return w(t) && typeof t[Symbol.iterator] == \"function\";\n}\nfunction ot() {\n}\nfunction oe() {\n  return !0;\n}\nfunction kn() {\n  return !1;\n}\nfunction Cn(t, e = 1, n = 1) {\n  const r = [];\n  for (let o = 0; o < t; ++o)\n    r.push(e + o * n);\n  return r;\n}\nfunction ie(t) {\n  return Object.prototype.toString.call(t).slice(8, -1);\n}\nfunction xn(t = 16) {\n  const e = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\", n = e.length;\n  let r = \"\";\n  for (; t--; )\n    r += e.charAt(Math.floor(Math.random() * n));\n  return r;\n}\nasync function Dn(t, e = {}) {\n  if (t.length) {\n    for (const [n, r] of t)\n      if (typeof n == \"function\" ? n() : n)\n        return typeof e.beforeMatchAny == \"function\" && await e.beforeMatchAny(), await r(), typeof e.afterMatchAny == \"function\" && await e.afterMatchAny(), !0;\n  }\n  return !1;\n}\nasync function In(t) {\n  if (!y)\n    return !1;\n  try {\n    return await navigator.clipboard.writeText(t), !0;\n  } catch {\n    let e = !1;\n    const n = document.createElement(\"textarea\"), r = document.activeElement;\n    n.value = t, n.setAttribute(\"readonly\", \"\"), n.style.contain = \"strict\", n.style.position = \"absolute\", n.style.height = \"0\", n.style.fontSize = \"12pt\";\n    const o = document.getSelection(), i = o ? o.rangeCount > 0 && o.getRangeAt(0) : null;\n    return document.body.appendChild(n), n.select(), n.selectionStart = 0, n.selectionEnd = t.length, e = document.execCommand(\"copy\"), document.body.removeChild(n), i && (o.removeAllRanges(), o.addRange(i)), r && r.focus(), e;\n  }\n}\nconst se = \"[-\\\\+]?\\\\d+%?\", ce = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\", F = `(?:${ce})|(?:${se})`, ae = `[\\\\s|\\\\(]+(${F})[,|\\\\s]+(${F})[,|\\\\s]+(${F})\\\\s*\\\\)?`, U = `[\\\\s|\\\\(]+(${F})[,|\\\\s]+(${F})[,|\\\\s]+(${F})[,|\\\\s]+(${F})\\\\s*\\\\)?`, Tt = new RegExp(`rgb${ae}`), Ot = new RegExp(`rgba${U}`), $t = new RegExp(`hsl${U}`), Rt = new RegExp(`hsla${U}`), _t = new RegExp(`hsv${U}`), kt = new RegExp(`hsva${U}`), Ct = /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/, xt = /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/, Dt = /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/, It = /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/, G = Object.freeze({\n  aliceblue: \"f0f8ff\",\n  antiquewhite: \"faebd7\",\n  aqua: \"0ff\",\n  aquamarine: \"7fffd4\",\n  azure: \"f0ffff\",\n  beige: \"f5f5dc\",\n  bisque: \"ffe4c4\",\n  black: \"000\",\n  blanchedalmond: \"ffebcd\",\n  blue: \"00f\",\n  blueviolet: \"8a2be2\",\n  brown: \"a52a2a\",\n  burlywood: \"deb887\",\n  burntsienna: \"ea7e5d\",\n  cadetblue: \"5f9ea0\",\n  chartreuse: \"7fff00\",\n  chocolate: \"d2691e\",\n  coral: \"ff7f50\",\n  cornflowerblue: \"6495ed\",\n  cornsilk: \"fff8dc\",\n  crimson: \"dc143c\",\n  cyan: \"0ff\",\n  darkblue: \"00008b\",\n  darkcyan: \"008b8b\",\n  darkgoldenrod: \"b8860b\",\n  darkgray: \"a9a9a9\",\n  darkgreen: \"006400\",\n  darkgrey: \"a9a9a9\",\n  darkkhaki: \"bdb76b\",\n  darkmagenta: \"8b008b\",\n  darkolivegreen: \"556b2f\",\n  darkorange: \"ff8c00\",\n  darkorchid: \"9932cc\",\n  darkred: \"8b0000\",\n  darksalmon: \"e9967a\",\n  darkseagreen: \"8fbc8f\",\n  darkslateblue: \"483d8b\",\n  darkslategray: \"2f4f4f\",\n  darkslategrey: \"2f4f4f\",\n  darkturquoise: \"00ced1\",\n  darkviolet: \"9400d3\",\n  deeppink: \"ff1493\",\n  deepskyblue: \"00bfff\",\n  dimgray: \"696969\",\n  dimgrey: \"696969\",\n  dodgerblue: \"1e90ff\",\n  firebrick: \"b22222\",\n  floralwhite: \"fffaf0\",\n  forestgreen: \"228b22\",\n  fuchsia: \"f0f\",\n  gainsboro: \"dcdcdc\",\n  ghostwhite: \"f8f8ff\",\n  gold: \"ffd700\",\n  goldenrod: \"daa520\",\n  gray: \"808080\",\n  green: \"008000\",\n  greenyellow: \"adff2f\",\n  grey: \"808080\",\n  honeydew: \"f0fff0\",\n  hotpink: \"ff69b4\",\n  indianred: \"cd5c5c\",\n  indigo: \"4b0082\",\n  ivory: \"fffff0\",\n  khaki: \"f0e68c\",\n  lavender: \"e6e6fa\",\n  lavenderblush: \"fff0f5\",\n  lawngreen: \"7cfc00\",\n  lemonchiffon: \"fffacd\",\n  lightblue: \"add8e6\",\n  lightcoral: \"f08080\",\n  lightcyan: \"e0ffff\",\n  lightgoldenrodyellow: \"fafad2\",\n  lightgray: \"d3d3d3\",\n  lightgreen: \"90ee90\",\n  lightgrey: \"d3d3d3\",\n  lightpink: \"ffb6c1\",\n  lightsalmon: \"ffa07a\",\n  lightseagreen: \"20b2aa\",\n  lightskyblue: \"87cefa\",\n  lightslategray: \"789\",\n  lightslategrey: \"789\",\n  lightsteelblue: \"b0c4de\",\n  lightyellow: \"ffffe0\",\n  lime: \"0f0\",\n  limegreen: \"32cd32\",\n  linen: \"faf0e6\",\n  magenta: \"f0f\",\n  maroon: \"800000\",\n  mediumaquamarine: \"66cdaa\",\n  mediumblue: \"0000cd\",\n  mediumorchid: \"ba55d3\",\n  mediumpurple: \"9370db\",\n  mediumseagreen: \"3cb371\",\n  mediumslateblue: \"7b68ee\",\n  mediumspringgreen: \"00fa9a\",\n  mediumturquoise: \"48d1cc\",\n  mediumvioletred: \"c71585\",\n  midnightblue: \"191970\",\n  mintcream: \"f5fffa\",\n  mistyrose: \"ffe4e1\",\n  moccasin: \"ffe4b5\",\n  navajowhite: \"ffdead\",\n  navy: \"000080\",\n  oldlace: \"fdf5e6\",\n  olive: \"808000\",\n  olivedrab: \"6b8e23\",\n  orange: \"ffa500\",\n  orangered: \"ff4500\",\n  orchid: \"da70d6\",\n  palegoldenrod: \"eee8aa\",\n  palegreen: \"98fb98\",\n  paleturquoise: \"afeeee\",\n  palevioletred: \"db7093\",\n  papayawhip: \"ffefd5\",\n  peachpuff: \"ffdab9\",\n  peru: \"cd853f\",\n  pink: \"ffc0cb\",\n  plum: \"dda0dd\",\n  powderblue: \"b0e0e6\",\n  purple: \"800080\",\n  rebeccapurple: \"663399\",\n  red: \"f00\",\n  rosybrown: \"bc8f8f\",\n  royalblue: \"4169e1\",\n  saddlebrown: \"8b4513\",\n  salmon: \"fa8072\",\n  sandybrown: \"f4a460\",\n  seagreen: \"2e8b57\",\n  seashell: \"fff5ee\",\n  sienna: \"a0522d\",\n  silver: \"c0c0c0\",\n  skyblue: \"87ceeb\",\n  slateblue: \"6a5acd\",\n  slategray: \"708090\",\n  slategrey: \"708090\",\n  snow: \"fffafa\",\n  springgreen: \"00ff7f\",\n  steelblue: \"4682b4\",\n  tan: \"d2b48c\",\n  teal: \"008080\",\n  thistle: \"d8bfd8\",\n  tomato: \"ff6347\",\n  turquoise: \"40e0d0\",\n  violet: \"ee82ee\",\n  wheat: \"f5deb3\",\n  white: \"fff\",\n  whitesmoke: \"f5f5f5\",\n  yellow: \"ff0\",\n  yellowgreen: \"9acd32\"\n}), fe = Object.freeze(new Set(Object.keys(G)));\nfunction Ln(t) {\n  return t = String(t).trim().toLowerCase(), t ? t === \"transparent\" || G[t] ? !0 : t === \"transparent\" || fe.has(t) || Tt.test(t) || Ot.test(t) || $t.test(t) || Rt.test(t) || _t.test(t) || kt.test(t) || Ct.test(t) || xt.test(t) || Dt.test(t) || It.test(t) : !1;\n}\nfunction ue(t) {\n  if (t = t.toString().trim().toLowerCase(), t === \"transparent\")\n    return { r: 0, g: 0, b: 0, a: 0, format: \"name\", toString: M };\n  let e = !1;\n  G[t] && (t = G[t], e = !0);\n  let n;\n  if (n = Tt.exec(t)) {\n    const { r, g: o, b: i } = _(n[1], n[2], n[3]);\n    return {\n      r: r * 255,\n      g: o * 255,\n      b: i * 255,\n      format: \"rgb\",\n      toString: M\n    };\n  }\n  if (n = Ot.exec(t)) {\n    const { r, g: o, b: i } = _(n[1], n[2], n[3]);\n    return {\n      r: r * 255,\n      g: o * 255,\n      b: i * 255,\n      a: R(n[4]),\n      format: \"rgba\",\n      toString: M\n    };\n  }\n  if (n = $t.exec(t)) {\n    const { h: r, s: o, l: i } = z(n[0], n[1], n[3]);\n    return { h: r * 360, s: o, l: i, format: \"hsl\", toString: H };\n  }\n  if (n = Rt.exec(t)) {\n    const { h: r, s: o, l: i } = z(n[0], n[1], n[3]);\n    return {\n      h: r * 360,\n      s: o,\n      l: i,\n      a: R(n[4]),\n      format: \"hsla\",\n      toString: H\n    };\n  }\n  if (n = _t.exec(t)) {\n    const { h: r, s: o, v: i } = q(n[0], n[1], n[3]);\n    return { h: r * 360, s: o, v: i, format: \"hsv\", toString: j };\n  }\n  if (n = kt.exec(t)) {\n    const { h: r, s: o, v: i } = q(n[0], n[1], n[3]);\n    return {\n      h: r * 360,\n      s: o,\n      v: i,\n      a: R(n[4]),\n      format: \"hsva\",\n      toString: j\n    };\n  }\n  return (n = Ct.exec(t)) ? {\n    r: parseInt(`${n[1]}${n[1]}`, 16),\n    g: parseInt(`${n[2]}${n[2]}`, 16),\n    b: parseInt(`${n[3]}${n[3]}`, 16),\n    format: e ? \"name\" : \"hex3\",\n    toString: M\n  } : (n = xt.exec(t)) ? {\n    r: parseInt(`${n[1]}${n[1]}`, 16),\n    g: parseInt(`${n[2]}${n[2]}`, 16),\n    b: parseInt(`${n[3]}${n[3]}`, 16),\n    a: pt(`${n[4]}${n[4]}`),\n    format: e ? \"name\" : \"hex4\",\n    toString: M\n  } : (n = Dt.exec(t)) ? {\n    r: parseInt(n[1], 16),\n    g: parseInt(n[2], 16),\n    b: parseInt(n[3], 16),\n    format: e ? \"name\" : \"hex6\",\n    toString: M\n  } : (n = It.exec(t)) ? {\n    r: parseInt(n[1], 16),\n    g: parseInt(n[2], 16),\n    b: parseInt(n[3], 16),\n    a: pt(n[4]),\n    format: e ? \"name\" : \"hex8\",\n    toString: M\n  } : null;\n}\nfunction Hn(t) {\n  const { a: e, ...n } = T(t);\n  delete n.format;\n  const r = Ht(n.r, n.g, n.b), o = Pt(n.r, n.g, n.b), i = it(n.r, n.g, n.b), s = st(n.r, n.g, n.b, e);\n  return {\n    rgb: n,\n    hsl: r,\n    hsv: o,\n    hex: i,\n    alpha: e,\n    rgba: { ...n, a: e, format: \"rgba\" },\n    hsla: { ...r, a: e, format: \"hsla\" },\n    hsva: { ...o, a: e, format: \"hsva\" },\n    hex8: s,\n    gray: Ut(n),\n    origin: t\n  };\n}\nfunction T(t) {\n  let e = { r: 0, g: 0, b: 0 }, n = 1, r;\n  return typeof t == \"string\" ? r = ue(t) : r = t, r !== null && typeof r == \"object\" && (\"l\" in r ? e = Lt(r.h, r.s, r.l) : \"v\" in r && (e = de(r.h, r.s, r.v)), \"a\" in r && (n = R(r.a ?? 1), Number.isNaN(n) && (n = 1)), e = r), { ...e, a: n, format: \"rgba\", toString: M };\n}\nfunction z(t, e, n) {\n  return {\n    h: S(t, 0, 360) / 360,\n    s: S(I(e) ? L(e) : e, 0, 1),\n    l: S(I(n) ? L(n) : n, 0, 1)\n  };\n}\nfunction _(t, e, n) {\n  return {\n    r: S(t, 0, 255) / 255,\n    g: S(e, 0, 255) / 255,\n    b: S(n, 0, 255) / 255\n  };\n}\nfunction q(t, e, n) {\n  return {\n    h: S(t, 0, 360) / 360,\n    s: S(I(e) ? L(e) : e, 0, 1),\n    v: S(I(n) ? L(n) : n, 0, 1)\n  };\n}\nfunction R(t) {\n  return S(I(t) ? L(t) : t, 0, 1);\n}\nfunction Lt(t, e, n) {\n  let r, o, i;\n  if ({ h: t, s: e, l: n } = z(t, e, n), e === 0)\n    r = o = i = n;\n  else {\n    const s = n < 0.5 ? 1 * (1 + e) : n + e - n * e, c = 2 * n - s;\n    r = tt(c, s, t + 1 / 3), o = tt(c, s, t), i = tt(c, s, t - 1 / 3);\n  }\n  return r *= 255, o *= 255, i *= 255, { r, g: o, b: i, toString: M };\n}\nfunction Ht(t, e, n) {\n  ({ r: t, g: e, b: n } = _(t, e, n));\n  const r = Math.max(t, e, n), o = Math.min(t, e, n);\n  let i, s;\n  const c = (r + o) / 2;\n  if (r === o)\n    i = s = 0;\n  else {\n    const a = r - o;\n    switch (s = c > 0.5 ? a / (2 - r - o) : a / (r + o), r) {\n      case t: {\n        i = (e - n) / a + (e < n ? 6 : 0);\n        break;\n      }\n      case e: {\n        i = (n - t) / a + 2;\n        break;\n      }\n      case n: {\n        i = (t - e) / a + 4;\n        break;\n      }\n      default:\n        i = 0;\n    }\n    i *= 60;\n  }\n  return { h: i, s, l: c, toString: H };\n}\nfunction le(t, e, n) {\n  ({ h: t, s: e, l: n } = z(t, e, n));\n  const r = 0.5 * (2 * n + e * (1 - Math.abs(2 * n - 1)));\n  return e = 2 * (r - n) / r, { h: t * 360, s: e, v: r, toString: j };\n}\nfunction Pn(t, e, n) {\n  ({ h: t, s: e, v: n } = q(t, e, n));\n  const r = 0.5 * n * (2 - e);\n  return e = n * e / (1 - Math.abs(2 * r - 1)), { h: t * 360, s: e, l: r, toString: H };\n}\nfunction de(t, e, n) {\n  ({ h: t, s: e, v: n } = q(t, e, n)), t *= 6;\n  const r = Math.floor(t), o = t - r, i = n * (1 - e), s = n * (1 - o * e), c = n * (1 - (1 - o) * e), a = r % 6;\n  let f = [n, s, i, i, c, n][a], u = [c, n, n, s, i, i][a], d = [i, i, c, n, n, s][a];\n  return f *= 255, u *= 255, d *= 255, { r: f, g: u, b: d, toString: M };\n}\nfunction Pt(t, e, n) {\n  ({ r: t, g: e, b: n } = _(t, e, n));\n  const r = Math.max(t, e, n), o = Math.min(t, e, n);\n  let i;\n  const s = r, c = r - o, a = r === 0 ? 0 : c / r;\n  if (r === o)\n    i = 0;\n  else {\n    switch (r) {\n      case t: {\n        i = (e - n) / c + (e < n ? 6 : 0);\n        break;\n      }\n      case e: {\n        i = (n - t) / c + 2;\n        break;\n      }\n      case n: {\n        i = (t - e) / c + 4;\n        break;\n      }\n      default:\n        i = 0;\n    }\n    i *= 60;\n  }\n  return { h: i, s: a, v: s, toString: j };\n}\nfunction it(t, e, n, r = !1) {\n  ({ r: t, g: e, b: n } = _(t, e, n));\n  const o = [\n    O(Math.round(t * 255).toString(16)),\n    O(Math.round(e * 255).toString(16)),\n    O(Math.round(n * 255).toString(16))\n  ];\n  return r && $(o[0]) && $(o[1]) && $(o[2]) ? o[0].charAt(0) + o[1].charAt(0) + o[2].charAt(0) : \"#\" + o.join(\"\");\n}\nfunction st(t, e, n, r, o = !1) {\n  ({ r: t, g: e, b: n } = _(t, e, n));\n  const i = [\n    O(Math.round(t * 255).toString(16)),\n    O(Math.round(e * 255).toString(16)),\n    O(Math.round(n * 255).toString(16)),\n    O(he(R(r)))\n  ];\n  return o && $(i[0]) && $(i[1]) && $(i[2]) && $(i[3]) ? i[0].charAt(0) + i[1].charAt(0) + i[2].charAt(0) + i[3].charAt(0) : \"#\" + i.join(\"\");\n}\nfunction Bn(t, e, n = 0.5) {\n  if (!t && !e)\n    return { r: 0, g: 0, b: 0, a: 1 };\n  if (!t)\n    return T(e);\n  if (!e)\n    return T(t);\n  const r = T(t), o = T(e), i = S(n, 0, 1), s = i * 2 - 1, c = r.a - o.a, f = ((s * c === -1 ? s : (s + c) / (1 + s * c)) + 1) / 2, u = 1 - f;\n  return {\n    r: Math.round(r.r * f + o.r * u),\n    g: Math.round(r.g * f + o.g * u),\n    b: Math.round(r.b * f + o.b * u),\n    a: Math.round(r.a * i + o.a * (1 - i)),\n    format: \"rgba\",\n    toString: M\n  };\n}\nfunction Un(t, e) {\n  const n = T(t);\n  return n.a = R(e), n;\n}\nfunction Yn(t = !1, e = \"hex\") {\n  const n = Math.round(Math.random() * 255), r = Math.round(Math.random() * 255), o = Math.round(Math.random() * 255);\n  if (e === \"hex\")\n    return t ? st(n, r, o, Math.random()) : it(n, r, o);\n  let i;\n  return e === \"hsl\" ? i = Ht(n, r, o) : e === \"hsv\" ? i = Pt(n, r, o) : i = /* @__PURE__ */ Object.create({ r: n, g: r, b: o, toString: M }), t && (i.a = Math.random()), i.toString();\n}\nfunction Bt(t, e = !1, n = \"hex\") {\n  const r = Math.round(Math.random() * 360), o = Math.round(t === \"hard\" ? 80 + Math.random() * 20 : 20 + Math.random() * 70) / 100, i = Math.round(t === \"hard\" ? 40 + Math.random() * 20 : 80 + Math.random() * 15) / 100;\n  if (n === \"hsl\")\n    return H.bind({ h: r, s: o, l: i })();\n  let s;\n  if (n === \"hex\" || n === \"rgb\") {\n    if (s = Lt(r, o, i), n === \"hex\") {\n      const { r: c, g: a, b: f } = s;\n      return e ? st(c, a, f, Math.random()) : it(c, a, f);\n    }\n  } else\n    n === \"hsv\" && (s = le(r, o, i));\n  return e && (s.a = Math.random()), s.toString();\n}\nfunction Wn(t = !1, e = \"hex\") {\n  return Bt(\"hard\", t, e);\n}\nfunction Gn(t = !1, e = \"hex\") {\n  return Bt(\"soft\", t, e);\n}\nfunction zn(t) {\n  return Ut(T(t));\n}\nfunction O(t) {\n  return t.length === 1 ? `0${t}` : t.toString();\n}\nfunction $(t) {\n  return t.charAt(0) === t.charAt(1);\n}\nfunction he(t) {\n  return Math.round(parseFloat(t) * 255).toString(16);\n}\nfunction pt(t) {\n  return parseInt(t, 16) / 255;\n}\nfunction S(t, e, n) {\n  return Math.max(e, Math.min(n, parseFloat(t)));\n}\nfunction tt(t, e, n) {\n  return n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6 ? t + (e - t) * 6 * n : n < 1 / 2 ? e : n < 2 / 3 ? t + (e - t) * (2 / 3 - n) * 6 : t;\n}\nfunction I(t) {\n  return String(t).trim().includes(\"%\");\n}\nfunction L(t) {\n  const e = parseFloat(t) / 100;\n  return Number.isNaN(e) ? 0 : e;\n}\nfunction M() {\n  return w(this.a) && this.a >= 0 && this.a < 1 ? `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})` : `rgb(${this.r}, ${this.g}, ${this.b})`;\n}\nfunction H() {\n  const t = `${this.s * 100}%`, e = `${this.l * 100}%`;\n  return w(this.a) && this.a >= 0 && this.a < 1 ? `hsla(${this.h}, ${t}, ${e}, ${this.a})` : `hsl(${this.h}, ${t}, ${e})`;\n}\nfunction j() {\n  const t = `${this.s * 100}%`, e = `${this.v * 100}%`;\n  return w(this.a) && this.a >= 0 && this.a < 1 ? `hsva(${this.h}, ${t}, ${e}, ${this.a})` : `hsv(${this.h}, ${t}, ${e})`;\n}\nfunction Ut(t) {\n  return (t.r * 0.2126 + t.g * 0.7152 + t.b * 0.0722) / 255;\n}\nfunction mt(t) {\n  return t & -t;\n}\nfunction qn(t, e = 0) {\n  const n = new Array(t + 1).fill(0);\n  function r(c, a) {\n    if (!(!a || c >= t))\n      for (c += 1; c <= t; )\n        n[c] += a, c += mt(c);\n  }\n  function o(c = t) {\n    if (c <= 0)\n      return 0;\n    c > t && (c = t);\n    let a = c * e;\n    for (; c > 0; )\n      a += n[c], c -= mt(c);\n    return a;\n  }\n  function i(c) {\n    return o(c + 1) - o(c);\n  }\n  function s(c) {\n    let a = 0, f = t;\n    for (; f > a; ) {\n      const u = Math.floor((a + f) / 2), d = o(u);\n      if (d > c) {\n        f = u;\n        continue;\n      } else if (d < c) {\n        if (a === u)\n          return o(a + 1) <= c ? a + 1 : a;\n        a = u;\n      } else\n        return u;\n    }\n    return a;\n  }\n  return { tree: n, add: r, sum: o, get: i, boundIndex: s };\n}\nconst ge = /^\\s*[+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?\\s*$/;\nfunction pe(t, e = !1) {\n  return typeof t == \"number\" ? !Number.isNaN(t) : e ? ge.test(String(t)) : !Number.isNaN(parseFloat(t)) || !Number.isNaN(Number(t));\n}\nfunction me(t) {\n  let e = parseFloat(t);\n  return Number.isNaN(e) && (e = Number(t)), Number.isNaN(e) ? 0 : e;\n}\nfunction be(t, e) {\n  return e <= 0 ? t.toString() : `${t < 0 ? \"-\" : \"\"}${String(Math.abs(Math.round(t))).padStart(e, \"0\")}`;\n}\nfunction N(t) {\n  return be(t, 2);\n}\nfunction E(t) {\n  const e = t.toString().split(/[eE]/), n = (e[0].split(\".\")[1] || \"\").length - +(e[1] || 0);\n  return n > 0 ? n : 0;\n}\nfunction jn(t) {\n  return E(t);\n}\nfunction Kn(t, e = 3, n = \",\") {\n  if (typeof t != \"number\" && (t = parseFloat(t)), Number.isNaN(t))\n    return \"0\";\n  let [r, o] = String(t).split(\".\");\n  const i = new RegExp(`(\\\\d+)(\\\\d{${e}})`);\n  for (; i.test(r); )\n    r = r.replace(i, `$1${n}$2`);\n  return o = o ? `.${o}` : \"\", `${r}${o}`;\n}\nfunction Yt(t, e) {\n  if (e === 0)\n    return Math.round(t);\n  let n = t.toFixed(E(t));\n  const r = n.indexOf(\".\");\n  if (r === -1)\n    return t;\n  const o = n.replace(\".\", \"\").split(\"\"), i = r + e;\n  return o[i] ? (n.charAt(i + 1) === \"5\" ? n = n.substring(0, i + 1) + \"6\" : n = n.substring(0, i + 2), parseFloat(Number(n).toFixed(e))) : t;\n}\nfunction Qn(t, e, n) {\n  return Yt(t * e, n);\n}\nfunction Xn(t, e) {\n  if (e < 0 || e > 1)\n    return Math.round(t);\n  const n = Math.ceil(t);\n  return t + 1 - e >= n ? n : Math.floor(t);\n}\nfunction Zn(t, e, n) {\n  return Math.max(e, Math.min(n, parseFloat(t)));\n}\nfunction Vn(t, e, n = 0) {\n  if (t <= 0 || e <= 1)\n    return [t];\n  n < 1 && (n = 1 / 0);\n  const r = [];\n  let o = 0;\n  for (; t >= e && o < n; )\n    r.push(t % e), t = Math.floor(t / e), ++o;\n  return r.push(t), r.reverse();\n}\nconst bt = Object.freeze([\n  \"B\",\n  \"KB\",\n  \"MB\",\n  \"GB\",\n  \"TB\",\n  \"AUTO\"\n]);\nfunction vn(t, e = \"AUTO\", n = !1, r) {\n  typeof r > \"u\" && (typeof n == \"number\" ? (r = n, n = !1) : r = 2);\n  let o = e.toUpperCase();\n  o = bt.includes(o) ? o : \"AUTO\";\n  let i;\n  switch (o) {\n    case \"AUTO\":\n      i = 0;\n      break;\n    case \"KB\":\n      i = 1;\n      break;\n    case \"MB\":\n      i = 2;\n      break;\n    case \"GB\":\n      i = 3;\n      break;\n    case \"TB\":\n      i = 4;\n      break;\n    default:\n      return t;\n  }\n  let s;\n  if (i)\n    s = t / 1024 ** i;\n  else\n    for (s = t; s > 1024 && !(i > 4); ++i)\n      s = s / 1024;\n  return s = Yt(s, r), n ? `${s}${o === \"AUTO\" ? bt[Math.min(i, 4)] : o}` : s;\n}\nfunction Jn(t, e = 0) {\n  return e === t ? e : (e > t && ([e, t] = [t, e]), Math.random() * (t - e) + e);\n}\nfunction Wt(t, e = 15) {\n  return +parseFloat(Number(t).toPrecision(e));\n}\nfunction K(t) {\n  const e = String(t);\n  if (!e.includes(\"e\"))\n    return Number(e.replace(\".\", \"\"));\n  const n = E(t);\n  return n > 0 ? Wt(Number(t) * 10 ** n) : Number(t);\n}\nfunction Q(t) {\n  return (...e) => {\n    let n = e[0];\n    for (let r = 1, o = e.length; r < o; ++r)\n      n = t(n, e[r]);\n    return n;\n  };\n}\nconst P = Q((t, e) => {\n  const n = K(t), r = K(e), o = E(t) + E(e);\n  return n * r / 10 ** o;\n}), tr = Q((t, e) => {\n  const n = 10 ** Math.max(E(t), E(e));\n  return (P(t, n) + P(e, n)) / n;\n}), er = Q((t, e) => {\n  const n = 10 ** Math.max(E(t), E(e));\n  return (P(t, n) - P(e, n)) / n;\n}), nr = Q((t, e) => {\n  const n = K(t), r = K(e);\n  return P(n / r, Wt(10 ** (E(e) - E(t))));\n}), ye = 1e3, A = 1e3, C = 60, Me = C * A, rr = C * A, X = 60, Gt = X * C, Se = Gt * A, or = Gt * A, zt = 24, we = zt * X, qt = we * C, Ee = qt * A, ir = qt * A, ct = 7, Ne = ct * zt, Ae = Ne * X, jt = Ae * C, Fe = jt * A, sr = jt * A, Kt = 3, Te = 4, Oe = Te * Kt, $e = {\n  y(t, e) {\n    const n = t.getFullYear();\n    return e.length === 4 ? n : n % 1e3 % 100;\n  },\n  M(t, e) {\n    const n = t.getMonth() + 1;\n    return e.length === 2 ? N(n) : n;\n  },\n  d(t, e) {\n    const n = t.getDate();\n    return e.length === 2 ? N(n) : n;\n  },\n  H(t, e) {\n    const n = t.getHours();\n    return e.length === 2 ? N(n) : n;\n  },\n  m(t, e) {\n    const n = t.getMinutes();\n    return e.length === 2 ? N(n) : n;\n  },\n  s(t, e) {\n    const n = t.getSeconds();\n    return e.length === 2 ? N(n) : n;\n  },\n  q(t, e) {\n    const n = Math.ceil((t.getMonth() + 1) / 3);\n    return e.length === 2 ? N(n) : n;\n  }\n}, Re = /[yMdHmsq](\\w)*|./g, _e = /'(.+?)'/g;\nfunction h(t, e = !1) {\n  const n = new Date(t);\n  if (e && Number.isNaN(+n))\n    throw new RangeError(\"Invalid date value\");\n  return typeof t == \"string\" && !t.includes(\":\") && (n.setHours(0), n.setMinutes(0), n.setSeconds(0)), n;\n}\nfunction cr(t, e = \"yyyy-MM-dd HH:mm:ss\") {\n  t = h(t);\n  const n = e.match(Re), r = n == null ? void 0 : n.length;\n  if (!r)\n    return e;\n  let o = 0, i = \"\";\n  for (; o < r; ) {\n    const s = n[o], c = s[0], a = $e[c];\n    a ? i += a(t, s) : i += s, ++o;\n  }\n  return i.replace(_e, \"$1\");\n}\nfunction ar(t) {\n  return t = h(t), `${N(t.getHours())}:${N(t.getMinutes())}:${N(\n    t.getSeconds()\n  )}`;\n}\nfunction rt(t) {\n  return t = h(t), Math.floor(t.getMonth() / 3) + 1;\n}\nconst ke = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\nfunction fr(t) {\n  return ke[t.getDay()];\n}\nfunction Ce(t, e) {\n  return t = h(t), t.setTime(t.getTime() + e), t;\n}\nfunction xe(t, e) {\n  return e *= A, Ce(t, e);\n}\nfunction De(t, e) {\n  return e *= C, xe(t, e);\n}\nfunction Ie(t, e) {\n  return e *= X, De(t, e);\n}\nfunction ur(t, e) {\n  return e *= 12, Ie(t, e);\n}\nfunction at(t, e) {\n  return t = h(t), e = ~~e, t.setDate(t.getDate() + e), t;\n}\nfunction lr(t, e) {\n  return e *= ct, at(t, e);\n}\nfunction ft(t, e) {\n  return t = h(t), e = ~~e, t.setMonth(t.getMonth() + e), t;\n}\nfunction dr(t, e) {\n  return e *= Kt, ft(t, e);\n}\nfunction hr(t, e) {\n  return e *= Oe, ft(t, e);\n}\nfunction gr(t, e = 42, n = 1) {\n  t = h(t);\n  const r = [];\n  for (let o = 0; o < e; ++o)\n    r.push(at(t, o * n));\n  return r;\n}\nfunction pr(t, e = 12, n = 1) {\n  t = h(t);\n  const r = [];\n  for (let o = 0; o < e; ++o)\n    r.push(ft(t, o * n));\n  return r;\n}\nfunction mr(t) {\n  const e = t.getDay() ?? 7;\n  return at(t, -e);\n}\nfunction yt(t) {\n  return t = h(t), t.setMilliseconds(0), t;\n}\nfunction Mt(t) {\n  return t = h(t), t.setSeconds(0, 0), t;\n}\nfunction St(t) {\n  return t = h(t), t.setMinutes(0, 0, 0), t;\n}\nfunction wt(t) {\n  return t = h(t), t.setHours(0, 0, 0, 0), t;\n}\nfunction br(t) {\n  return t = h(t), t.setHours(23, 59, 59, 999), t;\n}\nfunction Et(t, e = 0) {\n  e = e % 7, e < 0 && (e += 7), t = h(t);\n  const n = t.getDay(), r = (n < e ? 7 : 0) + n - e;\n  return t.setDate(t.getDate() - r), t.setHours(0, 0, 0, 0), t;\n}\nfunction Le(t) {\n  return t % 4 === 0 && t % 100 !== 0 || t % 400 === 0;\n}\nfunction yr(t, e = 1) {\n  t = h(t);\n  const n = t.getFullYear(), r = t.getMonth() + 1, o = t.getDate();\n  let i;\n  return r < 7 ? r !== 2 ? i = 30 + r % 2 : Le(n) ? i = 29 : i = 28 : i = 31 - r % 2, e = e % i, e < 0 && (e += i), o < e && t.setMonth(r - 1), t.setDate(e), t.setHours(0, 0, 0, 0), t;\n}\nfunction Mr(t) {\n  t = h(t);\n  const e = rt(t);\n  return t.setDate(1), t.setHours(0, 0, 0, 0), t.setMonth((e - 1) * 3), t;\n}\nfunction Sr(t, e = 0) {\n  e = e % 11, e < 0 && (e += 11), t = h(t);\n  const n = t.getMonth(), r = (n < e ? 11 : 0) + n - e;\n  return t.setMonth(t.getMonth() - r), t.setDate(1), t.setHours(0, 0, 0, 0), t;\n}\nfunction ut(t, e) {\n  return t = h(t), e = h(e), e.getTime() - t.getTime();\n}\nfunction He(t, e) {\n  const n = ut(t, e) / ye;\n  return n > 0 ? Math.floor(n) : Math.ceil(n);\n}\nfunction Pe(t, e) {\n  const n = ut(t, e) / Me;\n  return n > 0 ? Math.floor(n) : Math.ceil(n);\n}\nfunction Be(t, e) {\n  const n = ut(t, e) / Se;\n  return n > 0 ? Math.floor(n) : Math.ceil(n);\n}\nfunction Ue(t, e) {\n  return t = wt(t), e = wt(e), (e.getTime() - t.getTime()) / Ee;\n}\nfunction wr(t, e, n = 0) {\n  return t = Et(t, n), e = Et(e, n), (e.getTime() - t.getTime()) / Fe;\n}\nfunction Ye(t, e) {\n  t = h(t), e = h(e);\n  const n = e.getFullYear() - t.getFullYear(), r = e.getMonth() - t.getMonth();\n  return n * 12 + r;\n}\nfunction Er(t, e) {\n  t = h(t), e = h(e);\n  const n = e.getFullYear() - t.getFullYear(), r = rt(e) - rt(t);\n  return n * 4 + r;\n}\nfunction We(t, e) {\n  return t = h(t), e = h(e), e.getFullYear() - t.getFullYear();\n}\nfunction Ge(t, e) {\n  t = h(t), e = h(e);\n  const n = t.getTime() - e.getTime();\n  return n < 0 ? -1 : n > 0 ? 1 : n;\n}\nfunction k(t, e) {\n  return -Ge(t, e);\n}\nfunction Nr(t, e) {\n  return t = yt(t), e = yt(e), He(t, e);\n}\nfunction Ar(t, e) {\n  return t = Mt(t), e = Mt(e), Pe(t, e);\n}\nfunction Fr(t, e) {\n  return t = St(t), e = St(e), Be(t, e);\n}\nfunction ze(t, e) {\n  const n = k(t, e), r = Math.abs(Ue(t, e));\n  t = h(t), t.setDate(t.getDate() + n * r);\n  const o = k(t, e) === -n;\n  return n * (r - (o ? 1 : 0));\n}\nfunction Tr(t, e) {\n  const n = ze(t, e) / ct;\n  return n > 0 ? Math.floor(n) : Math.ceil(n);\n}\nfunction qe(t, e) {\n  const n = k(t, e), r = Math.abs(Ye(t, e));\n  t = h(t), t.setMonth(t.getMonth() + n * r);\n  const o = k(t, e) === -n;\n  return n * (r - (o ? 1 : 0));\n}\nfunction Or(t, e) {\n  const n = qe(t, e) / 3;\n  return n > 0 ? Math.floor(n) : Math.ceil(n);\n}\nfunction $r(t, e) {\n  const n = k(t, e), r = Math.abs(We(t, e));\n  t = h(t), t.setFullYear(t.getFullYear() + n * r);\n  const o = k(t, e) === -n;\n  return n * (r - (o ? 1 : 0));\n}\nfunction je(t, e = {}) {\n  if (t == null || typeof t != \"object\")\n    return t;\n  const { cloneObject: n = ot } = e, r = {}, o = [\n    {\n      parent: r,\n      prop: \"root\",\n      data: t\n    }\n  ], i = /* @__PURE__ */ new WeakMap(), s = [], c = [];\n  for (; o.length; ) {\n    const { parent: a, prop: f, data: u } = o.pop();\n    if (!a)\n      continue;\n    const d = ie(u);\n    if (d === \"Date\") {\n      a[f] = new Date(u);\n      continue;\n    }\n    if (d !== \"Array\") {\n      const l = n(d, u);\n      if (l != null) {\n        a[f] = l;\n        continue;\n      }\n    }\n    const g = a[f] = d === \"Array\" || d === \"Set\" || d === \"Map\" ? [] : {};\n    if (d === \"Set\" || d === \"Map\") {\n      let l = 0;\n      if (d === \"Set\") {\n        for (const p of u)\n          i.has(p) ? g[l] = i.get(p) : p !== null && typeof p == \"object\" ? o.push({\n            parent: g,\n            prop: l,\n            data: p\n          }) : g[l] = p, ++l;\n        s.push({ parent: a, prop: f });\n      } else {\n        for (const p of u) {\n          const b = [];\n          l = 0;\n          for (const m of p)\n            i.has(m) ? b[l] = i.get(m) : m !== null && typeof m == \"object\" ? o.push({\n              parent: b,\n              prop: l,\n              data: m\n            }) : b[l] = m, ++l;\n          g.push(b);\n        }\n        c.push({ parent: a, prop: f });\n      }\n    } else\n      for (const l of Object.keys(u)) {\n        const p = u[l];\n        i.has(p) ? g[l] = i.get(p) : p !== null && typeof p == \"object\" ? o.push({\n          parent: g,\n          prop: l,\n          data: p\n        }) : g[l] = p;\n      }\n    i.set(u, g);\n  }\n  for (const { parent: a, prop: f } of s)\n    a[f] = new Set(a[f]);\n  for (const { parent: a, prop: f } of c)\n    a[f] = new Map(a[f]);\n  return r.root;\n}\nconst Ke = \"This object was destroyed, do not use it anywhere\", Qe = () => !0;\nfunction Rr(t, e = Ke) {\n  const n = () => {\n    throw new Error(e);\n  };\n  Object.keys(t).forEach((r) => {\n    typeof t[r] == \"function\" ? t[r] = n.bind(t) : t[r] = null;\n  }), Object.getOwnPropertyNames(t.constructor.prototype).forEach((r) => {\n    r !== \"constructor\" && typeof t[r] == \"function\" && (t[r] = n.bind(t));\n  }), t.isDestroyed = Qe;\n}\nconst Xe = y && (\"ontouchstart\" in window || Ze() > 0), _r = Xe ? \"pointerdown\" : \"click\";\nfunction Ze() {\n  return typeof navigator < \"u\" && (navigator.maxTouchPoints || navigator.msMaxTouchPoints) || 0;\n}\nfunction kr(t, e, n = window.Event) {\n  const { type: r, bubbles: o = !1, cancelable: i = !1, ...s } = e;\n  if (!w(r) || r === \"\")\n    return !1;\n  let c;\n  return w(n) ? c = new n(r, { bubbles: o, cancelable: i }) : (c = document.createEvent(\"HTMLEvents\"), c.initEvent(r, o, i)), Object.assign(c, s), t.dispatchEvent(c);\n}\nconst Ve = [\n  \"button\",\n  \"[href]:not(.disabled)\",\n  \"input\",\n  \"select\",\n  \"textarea\",\n  \"[tabindex]\",\n  \"[contenteditable]\"\n].map((t) => `${t}:not(:disabled):not([disabled])`).join(\", \");\nfunction Z(t) {\n  return !!t && t.nodeType === 1;\n}\nfunction ve(t) {\n  return Z(t) ? t : document.body;\n}\nfunction Je(t, e) {\n  return !y || !t ? [] : Array.from(ve(e).querySelectorAll(t));\n}\nfunction Cr(t) {\n  if (!y)\n    return !1;\n  const e = document.activeElement;\n  return !Z(t) || !e ? !1 : t === e || Qt(e, t);\n}\nfunction Qt(t, e) {\n  if (!t || !e)\n    return !1;\n  const n = e.__transferElement;\n  return e.contains(t) || !!n && (n === t || n.contains(t));\n}\nfunction tn(t) {\n  if (!y || !Z(t) || !t.parentNode || !Qt(t, document.body) || t.style.display === \"none\")\n    return !0;\n  const e = t.getBoundingClientRect();\n  return !(e && e.width > 0 && e.height > 0);\n}\nfunction en(t) {\n  return !tn(t);\n}\nfunction nn(t) {\n  return !Z(t) || t.hasAttribute(\"disabled\") && t.getAttribute(\"disabled\") !== \"false\" || t.disabled;\n}\nfunction xr(t, e = !1) {\n  const n = e ? () => !1 : nn;\n  return Je(Ve, t).filter(\n    (r) => en(r) && r.tabIndex > -1 && !n(r)\n  );\n}\nfunction rn(t) {\n  if (!y || !t)\n    return 0;\n  const e = getComputedStyle(t);\n  return parseFloat(e.paddingLeft) + parseFloat(e.paddingRight) || 0;\n}\nfunction Dr(t) {\n  if (!y || !t)\n    return 0;\n  const e = getComputedStyle(t);\n  return parseFloat(e.paddingTop) + parseFloat(e.paddingBottom) || 0;\n}\nfunction Ir(t) {\n  if (!y || !t)\n    return 0;\n  const e = getComputedStyle(t);\n  return parseFloat(e.marginLeft) + parseFloat(e.marginRight) || 0;\n}\nfunction Lr(t) {\n  if (!y || !t)\n    return 0;\n  const e = getComputedStyle(t);\n  return parseFloat(e.marginTop) + parseFloat(e.marginBottom) || 0;\n}\nfunction Hr(t) {\n  if (!y || !t)\n    return 0;\n  const e = getComputedStyle(t);\n  return parseFloat(e.borderLeftWidth) + parseFloat(e.borderRightWidth) || 0;\n}\nfunction Pr(t) {\n  if (!y || !t)\n    return 0;\n  const e = getComputedStyle(t);\n  return parseFloat(e.borderTopWidth) + parseFloat(e.borderBottomWidth) || 0;\n}\nfunction Br(t) {\n  if (!y || !t)\n    return 0;\n  const e = document.createRange();\n  e.setStart(t, 0), e.setEnd(t, t.childNodes.length);\n  const n = e.getBoundingClientRect().width, r = rn(t);\n  return n + r;\n}\nfunction Ur(t) {\n  return pe(t, !0) ? `${me(t)}px` : String(t).trim();\n}\nconst on = /[\"'&<>]/;\nfunction Yr(t) {\n  const e = \"\" + t, n = on.exec(e);\n  if (!n)\n    return e;\n  let r = \"\", o, i, s = 0;\n  for (i = n.index; i < e.length; i++) {\n    switch (e.charCodeAt(i)) {\n      case 34:\n        o = \"&quot;\";\n        break;\n      case 38:\n        o = \"&amp;\";\n        break;\n      case 39:\n        o = \"&#39;\";\n        break;\n      case 60:\n        o = \"&lt;\";\n        break;\n      case 62:\n        o = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    s !== i && (r += e.substring(s, i)), s = i + 1, r += o;\n  }\n  return s !== i ? r + e.substring(s, i) : r;\n}\nfunction Wr() {\n  const t = /* @__PURE__ */ new Map();\n  return {\n    on(e, n) {\n      const r = t.get(e);\n      (r == null ? void 0 : r.add(n)) || t.set(e, /* @__PURE__ */ new Set([n]));\n    },\n    off(e, n) {\n      const r = t.get(e);\n      r && r.delete(n);\n    },\n    clear(e) {\n      const n = t.get(e);\n      n && n.clear();\n    },\n    clearAll() {\n      t.clear();\n    },\n    emit(e, ...n) {\n      const r = t.get(e);\n      r && r.forEach((o) => {\n        o(...n);\n      });\n    }\n  };\n}\nfunction lt(t, e, n) {\n  t && !e.has(t) && (n(t), e.add(t));\n}\nconst sn = /* @__PURE__ */ new Set();\nfunction Gr(t, e = console.info) {\n  lt(t, sn, e);\n}\nconst cn = /* @__PURE__ */ new Set();\nfunction zr(t, e = console.warn) {\n  lt(t, cn, e);\n}\nconst an = /* @__PURE__ */ new Set();\nfunction qr(t, e = console.warn) {\n  lt(t, an, e);\n}\nconst dt = y ? requestAnimationFrame : (t) => {\n  setTimeout(t, 16);\n};\nfunction jr(t, e = 16) {\n  if (typeof t != \"function\")\n    return ot;\n  const n = (...i) => {\n    t(...i);\n  };\n  if (e <= 0)\n    return Xt(n);\n  let r = 0, o;\n  return function(...i) {\n    const s = Date.now(), c = s - r;\n    clearTimeout(o), c >= e ? (r = s, n(...i)) : o = setTimeout(\n      () => {\n        r = Date.now(), n(...i);\n      },\n      Math.max(0, e - c)\n    );\n  };\n}\nfunction Kr(t, e = 100) {\n  if (typeof t != \"function\")\n    return ot;\n  const n = (...o) => {\n    t(...o);\n  };\n  if (e <= 0)\n    return Xt(n);\n  let r;\n  return function(...o) {\n    clearTimeout(r), r = setTimeout(() => {\n      n(...o);\n    }, e);\n  };\n}\nfunction Xt(t) {\n  if (typeof t != \"function\")\n    return t;\n  let e = !1, n, r;\n  return function(...o) {\n    return n = o, e || (e = !0, r = Promise.resolve().then(() => (e = !1, r = void 0, t(...n)))), r;\n  };\n}\nfunction Qr(t) {\n  if (typeof t != \"function\")\n    return t;\n  let e = !1, n, r;\n  return function(...o) {\n    return n = o, e || (e = !0, r = new Promise(\n      (i) => dt(() => {\n        e = !1, r = void 0, i(t(...n));\n      })\n    )), r;\n  };\n}\nconst x = /* @__PURE__ */ new Set(), Zt = /* @__PURE__ */ new WeakMap();\nfunction fn() {\n  x.forEach((t) => {\n    t(...Zt.get(t));\n  }), x.clear();\n}\nfunction Xr(t, ...e) {\n  if (typeof t != \"function\")\n    return t;\n  Zt.set(t, e), !x.has(t) && (x.add(t), x.size === 1 && Promise.resolve().then(fn));\n}\nconst D = /* @__PURE__ */ new Set(), Vt = /* @__PURE__ */ new WeakMap();\nfunction un() {\n  D.forEach((t) => {\n    t(...Vt.get(t));\n  }), D.clear();\n}\nfunction Zr(t, ...e) {\n  if (typeof t != \"function\")\n    return t;\n  Vt.set(t, e), !D.has(t) && (D.add(t), D.size === 1 && dt(un));\n}\nasync function Vr(t, e, n) {\n  const r = [], o = [];\n  for (const i of e) {\n    const s = Promise.resolve().then(() => n(i, e));\n    if (r.push(s), t <= e.length) {\n      const c = s.then(() => o.splice(o.indexOf(c), 1));\n      o.push(c), o.length >= t && await Promise.race(o);\n    }\n  }\n  return Promise.all(r);\n}\nlet et = null;\nfunction vr() {\n  if (!y)\n    return !0;\n  if (et === null) {\n    const t = document.createElement(\"div\");\n    t.style.display = \"flex\", t.style.flexDirection = \"column\", t.style.rowGap = \"1px\", t.appendChild(document.createElement(\"div\")), t.appendChild(document.createElement(\"div\")), document.body.appendChild(t), et = t.scrollHeight === 1, document.body.removeChild(t);\n  }\n  return et;\n}\nlet nt = null;\nfunction Jr() {\n  return y ? (nt === null && (nt = \"loading\" in document.createElement(\"img\")), nt) : !0;\n}\nfunction to(t) {\n  return Array.isArray(t) ? t : [t];\n}\nfunction eo(t, ...e) {\n  return Ft(t) ? t(...e) : t;\n}\nfunction no(t) {\n  return t.replace(/[\\\\/]+/g, \"/\");\n}\nfunction ro(t) {\n  return t[t.length - 1];\n}\nfunction oo(t, e, n = (o) => o, r = !1) {\n  const o = r ? /* @__PURE__ */ new Map() : {};\n  if (!w(e))\n    return o;\n  const i = r ? (c, a) => o.set(c, a) : (c, a) => o[c] = a, s = Ft(e) ? e : (c) => c[e];\n  return t.forEach((c) => {\n    const a = s(c);\n    w(a) && i(a, n(c));\n  }), o;\n}\nfunction io(t, e, n = !1) {\n  let r = -1;\n  return n || typeof e != \"function\" ? r = t.findIndex((o) => o === e) : r = t.findIndex(e), ~r ? t.splice(r, 1)[0] : null;\n}\nfunction so(t, e = []) {\n  (typeof e == \"string\" || typeof e == \"function\") && (e = [e]);\n  const n = e.length, r = {};\n  for (const o of t) {\n    let i;\n    for (let s = 0; s < n; ++s) {\n      const c = s === n - 1, a = e[s], f = typeof a == \"function\" ? a(o) : o[a];\n      i ? (i[f] || (i[f] = c ? [] : {}), i = i[f]) : (r[f] || (r[f] = c ? [] : {}), i = r[f]);\n    }\n    i.push(o);\n  }\n  return r;\n}\nfunction co(t, e = {}) {\n  const {\n    keyField: n = \"id\",\n    childField: r = \"children\",\n    parentField: o = \"parent\",\n    rootId: i = null\n  } = e, s = w(i) && i !== \"\", c = [], a = /* @__PURE__ */ new Map();\n  for (let f = 0, u = t.length; f < u; ++f) {\n    const d = t[f], g = d[n];\n    if (!(s ? g === i : !w(g)))\n      if (a.has(g) ? d[r] = a.get(g) : (d[r] = [], a.set(g, d[r])), d[o] && (!s || d[o] !== i)) {\n        const l = d[o];\n        a.has(l) || a.set(l, []), a.get(l).push(d);\n      } else\n        c.push(d);\n  }\n  return c;\n}\nfunction ao(t, e = {}) {\n  const {\n    keyField: n = \"id\",\n    childField: r = \"children\",\n    parentField: o = \"parent\",\n    rootId: i = null,\n    depthFirst: s = !1,\n    injectId: c = !0,\n    buildId: a = (m) => m,\n    filter: f = oe,\n    cascaded: u = !1,\n    forceInject: d = !1\n  } = e;\n  let g = 1;\n  const l = w(i) && i !== \"\", p = [], b = [...t];\n  for (; b.length; ) {\n    const m = b.shift(), V = m[r], v = Array.isArray(V) && V.length ? V : [];\n    c && (d || !m[n]) && (m[n] = a(g++));\n    const vt = m[n];\n    c && o && (l ? m[o] === i : !m[o]) && (m[o] = i);\n    const ht = f(m);\n    if (ht && p.push(m), ht || !u) {\n      for (let J = 0, Jt = v.length; J < Jt; ++J) {\n        const gt = v[J];\n        c && o && (gt[o] = vt), !s && b.push(gt);\n      }\n      s && b.unshift(...v);\n    }\n  }\n  return p;\n}\nfunction fo(t, e, n = {}) {\n  const { childField: r = \"children\", depthFirst: o = !1 } = n, i = [...t.map((s) => ({ item: s, depth: 0, parent: null }))];\n  for (; i.length; ) {\n    const { item: s, depth: c, parent: a } = i.shift(), f = s[r];\n    e(s, c, a), W(f) && i[o ? \"unshift\" : \"push\"](\n      ...Array.from(f).map((u) => ({ item: u, depth: c + 1, parent: s }))\n    );\n  }\n}\nfunction uo(t, e, n = {}) {\n  const { childField: r = \"children\", depthFirst: o = !1, clearChildren: i = !0 } = n, s = [], c = [...t.map((a) => ({ item: a, depth: 0, parent: null, result: s }))];\n  for (; c.length; ) {\n    const { item: a, depth: f, parent: u, result: d } = c.shift(), g = a[r], l = e(a, f, u) ?? {};\n    i && (l[r] = []), d.push(l), W(g) && Array.from(g).length && (l[r] = [], c[o ? \"unshift\" : \"push\"](\n      ...Array.from(g).map((b) => ({\n        item: b,\n        depth: f + 1,\n        parent: a,\n        result: l[r]\n      }))\n    ));\n  }\n  return s;\n}\nfunction lo(t, e, n = {}) {\n  const {\n    childField: r = \"children\",\n    leafOnly: o = !1,\n    isLeaf: i = (c) => !W(c[r])\n  } = n, s = (c, a, f) => c.map((u) => ({ ...u })).filter((u) => {\n    const d = u[r], g = i(u), l = W(d) && Array.from(d);\n    if (o && !g) {\n      if (l && l.length) {\n        const b = s(l, a + 1, u);\n        return u[r] = b, !!b.length;\n      }\n      return !1;\n    }\n    const p = e(u, a, f);\n    if (g)\n      return p;\n    if (!o && p)\n      return !0;\n    if (l && l.length) {\n      const b = s(l, a + 1, u);\n      return u[r] = b, !!b.length;\n    }\n    return p;\n  });\n  return s(t, 0, null);\n}\nconst Nt = (t, e) => Number.isNaN(Number(t) - Number(e)) ? String(t).localeCompare(e) : t - e;\nfunction ho(t, e) {\n  if (!t.sort || Y(e) && !e.key || !e.length)\n    return t;\n  const n = Array.from(t);\n  Array.isArray(e) || (e = [e]);\n  const r = e.map(\n    (o) => typeof o == \"string\" ? {\n      key: o,\n      method: Nt,\n      type: \"asc\"\n    } : o\n  ).map((o) => (typeof o.accessor != \"function\" && (o.accessor = (i) => i[o.key]), typeof o.method != \"function\" && (o.method = Nt), o.params = Array.isArray(o.params) ? o.params : [], o));\n  return n.sort((o, i) => {\n    let s = 0;\n    for (const c of r) {\n      const { method: a, type: f, accessor: u, params: d } = c, g = f === \"desc\", l = a(u(o, ...d), u(i, ...d));\n      if (s = g ? -l : l, s)\n        break;\n    }\n    return s;\n  }), n;\n}\nfunction go(t, e, n = !0) {\n  t = n ? je(t) : t;\n  const r = [\n    {\n      source: t,\n      target: e\n    }\n  ];\n  for (; r.length; ) {\n    const { source: o, target: i } = r.pop();\n    Object.keys(i).forEach((s) => {\n      Y(i[s]) ? (Y(o[s]) || (o[s] = {}), r.push({\n        source: o[s],\n        target: i[s]\n      })) : Array.isArray(i[s]) ? (Array.isArray(o[s]) || (o[s] = []), r.push({\n        source: o[s],\n        target: i[s]\n      })) : o[s] = i[s];\n    });\n  }\n  return t;\n}\nfunction po(t) {\n  t = Array.from(t);\n  let e = !1;\n  const n = () => {\n    var r;\n    e || ((r = t.shift()) == null || r(), t.length && dt(n));\n  };\n  return n(), () => e = !0;\n}\nfunction ln(t) {\n  const e = t.match(/[A-Z]+/);\n  return e && e[0] === t;\n}\nconst dn = /\\B([A-Z])(?=[^A-Z_-])/g;\nfunction mo(t) {\n  return t.replace(dn, \"-$1\").toLowerCase();\n}\nfunction hn(t) {\n  return t = t.trim().replace(/\\s+/g, \"-\"), t = t.replace(/-+(\\w)/g, (e, n) => n ? n.toUpperCase() : \"\"), (t.charAt(0).toLocaleUpperCase() + t.slice(1)).replace(\n    /[^\\w]/g,\n    \"\"\n  );\n}\nfunction bo(t) {\n  const e = hn(t);\n  return ln(e) ? e.toLocaleLowerCase() : e.charAt(0).toLowerCase() + e.slice(1);\n}\nexport {\n  _r as CLICK_TYPE,\n  fe as COLOR_NAMES,\n  zt as DAY_ON_HOURS,\n  ir as DAY_ON_MILLISECONDS,\n  Ee as DAY_ON_MILLS,\n  we as DAY_ON_MINUTES,\n  qt as DAY_ON_SECONDS,\n  Ct as HEX_REG_3,\n  xt as HEX_REG_4,\n  Dt as HEX_REG_6,\n  It as HEX_REG_8,\n  or as HOUR_ON_MILLISECONDS,\n  Se as HOUR_ON_MILLS,\n  X as HOUR_ON_MINUTES,\n  Gt as HOUR_ON_SECONDS,\n  Rt as HSLA_REG,\n  $t as HSL_REG,\n  kt as HSVA_REG,\n  _t as HSV_REG,\n  rr as MINUTE_ON_MILLISECONDS,\n  Me as MINUTE_ON_MILLS,\n  C as MINUTE_ON_SECONDS,\n  G as NAMED_COLORS,\n  Kt as QUARTER_ON_MONTHS,\n  Ot as RGBA_REG,\n  Tt as RGB_REG,\n  A as SECOND_ON_MILLISECONDS,\n  ye as SECOND_ON_MILLS,\n  Xe as USE_TOUCH,\n  ct as WEEK_ON_DAYS,\n  Ne as WEEK_ON_HOURS,\n  sr as WEEK_ON_MILLISECONDS,\n  Fe as WEEK_ON_MILLS,\n  Ae as WEEK_ON_MINUTES,\n  jt as WEEK_ON_SECONDS,\n  Oe as YEAR_ON_MONTHS,\n  Te as YEAR_ON_QUARTERS,\n  at as addDays,\n  ur as addHalfDays,\n  Ie as addHours,\n  Ce as addMilliseconds,\n  De as addMinutes,\n  ft as addMonths,\n  dr as addQuarters,\n  xe as addSeconds,\n  lr as addWeeks,\n  hr as addYears,\n  Un as adjustAlpha,\n  Zn as boundRange,\n  co as buildTree,\n  eo as callIfFunc,\n  Ge as compareAsc,\n  k as compareDesc,\n  Qt as contains,\n  qn as createBITree,\n  Wr as createEventEmitter,\n  Kr as debounce,\n  Qr as debounceFrame,\n  Xt as debounceMinor,\n  Dn as decide,\n  E as decimalLength,\n  je as deepClone,\n  Rr as destroyObject,\n  Ue as differenceDays,\n  ze as differenceFullDays,\n  Fr as differenceFullHours,\n  Ar as differenceFullMinutes,\n  qe as differenceFullMonths,\n  Or as differenceFullQuarters,\n  Nr as differenceFullSeconds,\n  Tr as differenceFullWeeks,\n  $r as differenceFullYears,\n  Be as differenceHours,\n  ut as differenceMilliseconds,\n  Pe as differenceMinutes,\n  Ye as differenceMonths,\n  Er as differenceQuarters,\n  He as differenceSeconds,\n  wr as differenceWeeks,\n  We as differenceYears,\n  jn as digitLength,\n  kr as dispatchEvent,\n  nr as divide,\n  N as doubleDigits,\n  br as endOfDay,\n  to as ensureArray,\n  qr as errorOnce,\n  Yr as escapeHtml,\n  lo as filterTree,\n  ao as flatTree,\n  cr as format,\n  vn as formatByteSize,\n  fr as getChineseWeek,\n  ro as getLast,\n  mr as getLastSunday,\n  rt as getQuarter,\n  Br as getRangeWidth,\n  ar as getTime,\n  ie as getType,\n  Hr as getXBorder,\n  Ir as getXMargin,\n  rn as getXPadding,\n  Pr as getYBorder,\n  Lr as getYMargin,\n  Dr as getYPadding,\n  so as groupByProps,\n  pn as has,\n  le as hslToHsv,\n  Lt as hslToRgb,\n  Pn as hsvToHsl,\n  de as hsvToRgb,\n  Gr as infoOnce,\n  B as is,\n  Nn as isArray,\n  En as isBigInt,\n  yn as isBoolean,\n  y as isClient,\n  Ln as isColor,\n  On as isDate,\n  w as isDefined,\n  nn as isDisabled,\n  _n as isElement,\n  Rn as isEmpty,\n  Sn as isFalse,\n  Cr as isFocusIn,\n  Ft as isFunction,\n  tn as isHidden,\n  gn as isIOS,\n  W as isIterable,\n  Le as isLeapYear,\n  Tn as isMap,\n  re as isNaN,\n  ne as isNull,\n  mn as isNumber,\n  Y as isObject,\n  An as isPromise,\n  $n as isRegExp,\n  Fn as isSet,\n  bn as isString,\n  wn as isSymbol,\n  Mn as isTrue,\n  pe as isValidNumber,\n  en as isVisible,\n  Vn as leaveNumber,\n  oo as listToMap,\n  uo as mapTree,\n  go as mergeObjects,\n  er as minus,\n  Bn as mixColor,\n  Qn as multipleFixed,\n  Zr as nextFrameOnce,\n  Xr as nextTickOnce,\n  ot as noop,\n  R as normalizeAlpha,\n  z as normalizeHsl,\n  q as normalizeHsv,\n  no as normalizePath,\n  _ as normalizeRgb,\n  ge as numberRE,\n  be as padStartZeros,\n  Hn as parseColor,\n  T as parseColorToRgba,\n  ue as parseStringColor,\n  tr as plus,\n  Je as queryAll,\n  xr as queryTabables,\n  dt as raf,\n  Jn as random,\n  Yn as randomColor,\n  Wn as randomHardColor,\n  Bt as randomPreferColor,\n  Gn as randomSoftColor,\n  xn as randomString,\n  Cn as range,\n  gr as rangeDate,\n  pr as rangeMonth,\n  io as removeArrayItem,\n  it as rgbToHex,\n  Ht as rgbToHsl,\n  Pt as rgbToHsv,\n  st as rgbaToHex,\n  Xn as round,\n  Vr as runParallel,\n  po as runQueueFrame,\n  Kn as segmentNumber,\n  ho as sortByProps,\n  wt as startOfDay,\n  St as startOfHour,\n  Mt as startOfMinute,\n  yr as startOfMonth,\n  Mr as startOfQuarter,\n  yt as startOfSecond,\n  Et as startOfWeek,\n  Sr as startOfYear,\n  vr as supportFlexGap,\n  Jr as supportImgLoading,\n  jr as throttle,\n  P as times,\n  bo as toCamelCase,\n  hn as toCapitalCase,\n  Ur as toCssSize,\n  h as toDate,\n  kn as toFalse,\n  Yt as toFixed,\n  zn as toGrayScale,\n  mo as toKebabCase,\n  me as toNumber,\n  Wt as toPrecision,\n  oe as toTrue,\n  oo as transformListToMap,\n  co as transformTree,\n  fo as walkTree,\n  zr as warnOnce,\n  In as writeClipboard\n};\n//# sourceMappingURL=index.mjs.map\n", "import { getCurrentScope, onScopeDispose, unref, watch } from 'vue'\n\nimport { noop } from '@vexip-ui/utils'\n\nimport type { MaybeRef } from 'vue'\n\nexport function useListener<E = Event>(\n  target: MaybeRef<EventTarget | null | undefined>,\n  event: string,\n  listener: (event: E) => any,\n  options?: AddEventListenerOptions | boolean\n) {\n  if (!target) {\n    return noop\n  }\n\n  let remove = noop\n\n  const stopWatch = watch(\n    () => unref(target),\n    el => {\n      remove()\n\n      if (!el) {\n        return\n      }\n\n      el.addEventListener(event, listener as any, options)\n\n      remove = () => {\n        el.removeEventListener(event, listener as any, options)\n        remove = noop\n      }\n    },\n    { immediate: true, flush: 'post' }\n  )\n\n  const stop = () => {\n    stopWatch()\n    remove()\n  }\n\n  getCurrentScope() && onScopeDispose(stop)\n\n  return stop\n}\n", "import { getCurrentScope, onScopeDispose, ref, unref, watch } from 'vue'\n\nimport { CLICK_TYPE, dispatchEvent, isClient, noop } from '@vexip-ui/utils'\nimport { useListener } from './listener'\n\nimport type { Ref } from 'vue'\nimport type { TransferNode } from '@vexip-ui/utils'\n\nexport const CLICK_OUTSIDE = 'clickoutside'\n\nconst elements = new Set<TransferNode>()\n\nif (isClient) {\n  document.addEventListener(\n    CLICK_TYPE,\n    (event: Event) => {\n      const target = event.target as Node | null\n      const path = event.composedPath && event.composedPath()\n\n      elements.forEach(el => {\n        if (\n          el !== target &&\n          (path ? !path.includes(el) : !el.contains(target)) &&\n          (!el.__transferElement ||\n            (el.__transferElement !== target && !el.__transferElement.contains(target)))\n        ) {\n          dispatchEvent(el, { type: CLICK_OUTSIDE })\n        }\n      })\n    },\n    true\n  )\n}\n\n/**\n * 创建一个可以添加 clickoutside 事件的元素 Ref\n *\n * @param handler 事件的回调方法\n * @param target 需要处理的元素 ref，可不传\n */\nexport function useClickOutside(\n  handler: () => void,\n  target: Ref<HTMLElement | null | undefined> = ref(null)\n) {\n  let remove = noop\n\n  const stopWatch = watch(\n    () => unref(target),\n    el => {\n      remove()\n\n      if (!el) {\n        return\n      }\n\n      elements.add(el)\n\n      remove = () => {\n        elements.delete(el)\n        remove = noop\n      }\n    },\n    { immediate: true, flush: 'post' }\n  )\n\n  const stop = () => {\n    stopWatch()\n    remove()\n  }\n\n  getCurrentScope() && onScopeDispose(stop)\n  useListener(target, CLICK_OUTSIDE, handler)\n\n  return target\n}\n", "import { nextTick, onBeforeUnmount, onMounted, ref } from 'vue'\n\nimport { noop } from '@vexip-ui/utils'\n\nimport type { Ref } from 'vue'\n\n/**\n * 创建一个观察了最近的上级元素 display 变化的元素 Ref\n *\n * @param displayInit 元素初次显示后执行的回调\n * @returns 观察了 display 变化的元素 Ref\n */\nexport function useDisplay(\n  displayInit = noop,\n  element: Ref<HTMLElement | null | undefined> = ref(null)\n) {\n  let observer: MutationObserver | null\n\n  onMounted(() => {\n    nextTick(() => {\n      const hiddenParentNode = queryOutsideHiddenElement(element.value)\n\n      if (hiddenParentNode) {\n        observer = new MutationObserver(() => {\n          if (hiddenParentNode.style.display !== 'none') {\n            if (typeof displayInit === 'function') {\n              displayInit()\n            }\n\n            observer?.disconnect()\n            observer = null\n          }\n        })\n\n        observer.observe(hiddenParentNode, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          attributeFilter: ['style']\n        })\n      } else {\n        typeof displayInit === 'function' && displayInit()\n      }\n    })\n  })\n\n  onBeforeUnmount(() => {\n    observer?.disconnect()\n    observer = null\n  })\n\n  return element\n}\n\nexport function queryOutsideHiddenElement(el?: Element | null) {\n  if (el) {\n    let parentElement = el.parentElement\n\n    while (parentElement && parentElement !== document.body) {\n      if (parentElement.style.display === 'none') {\n        return parentElement\n      }\n\n      parentElement = parentElement.parentElement\n    }\n  }\n\n  return null\n}\n\nexport function isHiddenElement(el?: HTMLElement | null) {\n  if (el?.style.display !== 'none') {\n    return !!queryOutsideHiddenElement(el)\n  }\n\n  return true\n}\n", "import {\n  Comment,\n  Fragment,\n  createTextVNode,\n  isVNode,\n  readonly,\n  ref,\n  renderSlot,\n  unref,\n  watch\n} from 'vue'\n\nimport { ensureArray, isClient, noop } from '@vexip-ui/utils'\n\nimport type {\n  ComponentPublicInstance,\n  MaybeRef,\n  Slots,\n  VNode,\n  VNodeChild,\n  VNodeNormalizedChildren\n} from 'vue'\nimport type { MaybeElement, MaybeInstance } from './types'\n\nexport function createSlotRender(\n  slots: Slots,\n  names: string[]\n): ((params?: any) => VNodeChild) | null\nexport function createSlotRender(\n  slots: Slots,\n  names: string[],\n  fallback: (params?: any) => VNodeChild\n): (params?: any) => VNodeChild\nexport function createSlotRender(\n  slots: Slots,\n  names: string[],\n  fallback?: (params?: any) => VNodeChild\n) {\n  for (const name of names) {\n    if (slots[name]) {\n      return (params: any) =>\n        renderSlot(slots, name, params, () => {\n          const vnodes = fallback?.(params)\n\n          return vnodes ? ensureArray(vnodes) : []\n        })\n    }\n  }\n\n  return fallback || null\n}\n\nexport function flatVNodes(children: VNodeNormalizedChildren) {\n  const result: VNode[] = []\n  const loop = Array.isArray(children) ? [...children] : []\n\n  while (loop.length) {\n    const vnode = loop.shift()!\n\n    if (vnode === null) continue\n\n    if (Array.isArray(vnode)) {\n      loop.unshift(...vnode)\n    }\n\n    if (\n      typeof vnode !== 'string' &&\n      typeof vnode !== 'number' &&\n      (!isVNode(vnode) || vnode.type === Comment)\n    ) {\n      continue\n    }\n\n    if (typeof vnode === 'string' || typeof vnode === 'number') {\n      result.push(createTextVNode(String(vnode)))\n    } else if (vnode.type === Fragment && Array.isArray(vnode.children)) {\n      loop.unshift(vnode.children)\n    } else {\n      result.push(vnode)\n    }\n  }\n\n  return result\n}\n\nexport function unrefElement<T extends string | MaybeInstance = string | MaybeInstance>(\n  ref: MaybeRef<T>\n): T extends string | ComponentPublicInstance ? MaybeElement : T {\n  const plain = unref(ref)\n\n  if (typeof plain === 'string') {\n    return isClient ? document.querySelector(plain) : (null as any)\n  }\n\n  return (plain as ComponentPublicInstance)?.$el ?? plain\n}\n\nexport function proxyExposed<T>(vnode: VNode): T {\n  return new Proxy({} as any, {\n    get(_, key) {\n      if (!vnode.component) return undefined\n\n      return (\n        (vnode.component.proxy as any)?.[key] ??\n        (vnode.component.exposeProxy as any)?.[key] ??\n        (vnode.component.exposed as any)?.[key]\n      )\n    }\n  }) as T\n}\n\nexport function watchPauseable(...args: Parameters<typeof watch>) {\n  const active = ref(true)\n  const handle = args[1] || noop\n\n  function pause() {\n    active.value = false\n  }\n\n  function resume() {\n    active.value = true\n  }\n\n  const stop = watch(\n    args[0],\n    (...callbackArgs) =>\n      new Promise<void>((resolve, reject) => {\n        if (active.value) {\n          Promise.resolve(handle(...callbackArgs))\n            .then(resolve)\n            .catch(reject)\n        }\n      }),\n    args[2]\n  )\n\n  return { active: readonly(active), pause, resume, stop }\n}\n", "import { computed, getCurrentScope, isRef, onScopeDispose, ref, watch } from 'vue'\n\nimport { isClient, noop } from '@vexip-ui/utils'\nimport { unrefElement } from './shared/utils'\n\nimport type { ComputedRef, MaybeRef, Ref } from 'vue'\nimport type { MaybeInstance } from './shared/types'\n\nexport interface UseFullScreenResult {\n  target: Ref<MaybeInstance>,\n  supported: boolean,\n  full: ComputedRef<boolean>,\n  enter: (force?: boolean) => Promise<boolean>,\n  exit: (force?: boolean) => Promise<boolean>,\n  toggle: (force?: boolean) => Promise<boolean>\n}\n\ntype PropertiesMap = [\n  'requestFullscreen',\n  'exitFullscreen',\n  'fullscreenElement',\n  'fullscreenEnabled',\n  'fullscreenchange',\n  'fullscreenerror'\n]\n\nconst functionsMap = [\n  [\n    'requestFullscreen',\n    'exitFullscreen',\n    'fullscreenElement',\n    'fullscreenEnabled',\n    'fullscreenchange',\n    'fullscreenerror'\n  ],\n  // New WebKit\n  [\n    'webkitRequestFullscreen',\n    'webkitExitFullscreen',\n    'webkitFullscreenElement',\n    'webkitFullscreenEnabled',\n    'webkitfullscreenchange',\n    'webkitfullscreenerror'\n  ],\n  // Old WebKit\n  [\n    'webkitRequestFullScreen',\n    'webkitCancelFullScreen',\n    'webkitCurrentFullScreenElement',\n    'webkitCancelFullScreen',\n    'webkitfullscreenchange',\n    'webkitfullscreenerror'\n  ],\n  [\n    'mozRequestFullScreen',\n    'mozCancelFullScreen',\n    'mozFullScreenElement',\n    'mozFullScreenEnabled',\n    'mozfullscreenchange',\n    'mozfullscreenerror'\n  ],\n  [\n    'msRequestFullscreen',\n    'msExitFullscreen',\n    'msFullscreenElement',\n    'msFullscreenEnabled',\n    'MSFullscreenChange',\n    'MSFullscreenError'\n  ]\n] as PropertiesMap[]\n\nlet map!: PropertiesMap\n\nif (isClient) {\n  for (const m of functionsMap) {\n    if (m[1] in document) {\n      map = m\n      break\n    }\n  }\n}\n\nconst supported = !!map\nconst notSupportedResult = {\n  supported,\n  full: computed(() => false),\n  enter: noop,\n  exit: noop,\n  toggle: noop\n}\n\nconst states = new Set<Ref<boolean>>()\nconst subscriptions = new WeakMap<Element, Ref<boolean>>()\n\nif (isClient && map) {\n  const ELEMENT = map[2]\n  const EVENT = map[4]\n\n  document.addEventListener(\n    EVENT,\n    () => {\n      debugger\n      states.forEach(state => {\n        state.value = false\n      })\n\n      if (document[ELEMENT]) {\n        const full = subscriptions.get(document[ELEMENT])\n\n        if (full) {\n          full.value = true\n        }\n      }\n    },\n    false\n  )\n}\n\nexport function useFullScreen(target: MaybeRef<MaybeInstance> = ref(null)): UseFullScreenResult {\n  const targetRef = computed({\n    get: () => unrefElement(target),\n    set: el => {\n      if (isRef(target)) {\n        target.value = el\n      }\n    }\n  })\n\n  if (!isClient || !supported) {\n    return { ...notSupportedResult, target: targetRef }\n  }\n\n  const [REQUEST, EXIT, ELEMENT] = map\n  const full = ref(false)\n\n  watch(\n    () => unrefElement(target),\n    (el, old) => {\n      old && subscriptions.delete(old)\n      el && subscriptions.set(el, full)\n    },\n    { immediate: true, flush: 'post' }\n  )\n\n  states.add(full)\n\n  if (getCurrentScope()) {\n    onScopeDispose(exit)\n  }\n\n  async function enter(force = false) {\n    await exit()\n\n    const el = unrefElement(target)\n\n    if (el) {\n      if (force || !document[ELEMENT]) {\n        debugger\n        await el[REQUEST]()\n        full.value = true\n\n        return document[ELEMENT] === el\n      }\n    }\n\n    return false\n  }\n\n  async function exit(force = false) {\n    const el = unrefElement(target)\n\n    if (force || (document[ELEMENT] && document[ELEMENT] === el)) {\n      debugger\n      await document[EXIT]()\n      full.value = false\n\n      return document[ELEMENT] !== el\n    }\n\n    return false\n  }\n\n  async function toggle(force = false) {\n    return full.value ? await exit(force) : await enter(force)\n  }\n\n  return {\n    supported,\n    target: targetRef,\n    full: computed(() => full.value),\n    enter,\n    exit,\n    toggle\n  }\n}\n", "import { ref } from 'vue'\n\nimport { useListener } from './listener'\n\nimport type { Ref } from 'vue'\n\nexport function useHover(wrapper: Ref<HTMLElement | null | undefined> = ref(null)) {\n  const isHover = ref(false)\n\n  useListener(wrapper, 'mouseenter', enterWrapper)\n  useListener(wrapper, 'mouseleave', leaveWrapper)\n\n  function enterWrapper() {\n    isHover.value = true\n  }\n\n  function leaveWrapper() {\n    isHover.value = false\n  }\n\n  return { wrapper, isHover }\n}\n", "import { getCurrentScope, onScopeDispose, ref, unref, watch } from 'vue'\n\nimport { ensureArray, isClient, noop, toNumber } from '@vexip-ui/utils'\n\nimport type { Ref } from 'vue'\n\nexport type IntersectionHandler = (entry: IntersectionObserverEntry) => any\nexport type UseIntersectionOptions = IntersectionObserverInit & {\n  /**\n   * 元素交叉状态变化时的回调方法\n   */\n  handler: IntersectionHandler,\n  /**\n   * 作用的目标元素的 Ref\n   */\n  target?: Ref<HTMLElement | null | undefined>\n}\n\nconst observerCache = new WeakMap<\n  Element | Document,\n  Map<\n    string,\n    Map<\n      string,\n      { ob: IntersectionObserver, count: number, handlers: WeakMap<Element, IntersectionHandler> }\n    >\n  >\n>()\n\nconst spaceRE = /\\s+/g\nconst unitRE = /(px|%)$/\n\nexport function useIntersection(options: UseIntersectionOptions) {\n  const target = options.target || ref(null)\n\n  if (!isClient) {\n    return { target, disconnect: noop }\n  }\n\n  const { handler } = options\n\n  let root = options.root ?? document\n\n  const threshold = ensureArray(options.threshold || 0).join() || '0'\n  const margin = normalizeMargin(options.rootMargin)\n\n  if (!observerCache.has(root)) {\n    observerCache.set(root, new Map())\n  }\n\n  const thresholdCache = observerCache.get(root)!\n\n  if (!thresholdCache.has(threshold)) {\n    thresholdCache.set(threshold, new Map())\n  }\n\n  const marginCache = thresholdCache.get(threshold)!\n\n  if (!marginCache.has(margin)) {\n    marginCache.set(margin, {\n      ob: new IntersectionObserver(handleIntersect, { ...options, rootMargin: margin }),\n      count: 0,\n      handlers: new WeakMap<Element, IntersectionHandler>()\n    })\n  }\n\n  let state = marginCache.get(margin)\n  let { ob: observer, handlers } = state!\n\n  let remove = noop\n\n  const stopWatch = watch(\n    () => unref(target),\n    el => {\n      remove()\n\n      if (!el || !observer) {\n        return\n      }\n\n      handlers.set(el, handler)\n      observer.observe(el)\n      state && state.count++\n\n      remove = () => {\n        observer.unobserve(el)\n        handlers.delete(el)\n        state && state.count--\n        remove = noop\n      }\n    },\n    { immediate: true, flush: 'post' }\n  )\n\n  getCurrentScope() && onScopeDispose(disconnect)\n\n  function normalizeMargin(margin?: string) {\n    if (!margin || !margin.trim()) return '_'\n\n    const parts = margin.trim().split(spaceRE, 4)\n    parts.length = 4\n\n    for (let i = 0; i < 4; ++i) {\n      const part = parts[i]\n\n      parts[i] = unitRE.test(part) ? part : `${toNumber(part)}px`\n    }\n\n    return parts.join(' ')\n  }\n\n  function handleIntersect(entries: IntersectionObserverEntry[]) {\n    for (let i = 0, len = entries.length; i < len; ++i) {\n      const entry = entries[i]\n      const handler = handlers.get(entry.target)\n\n      if (typeof handler === 'function') {\n        handler(entry)\n      }\n    }\n  }\n\n  function disconnect() {\n    stopWatch()\n    remove()\n\n    if (!state) return\n\n    if (state.count <= 0) {\n      marginCache.delete(margin)\n\n      if (!marginCache.size) {\n        thresholdCache.delete(threshold)\n\n        if (!thresholdCache.size) {\n          observerCache.delete(root)\n        }\n      }\n    }\n\n    state = undefined\n    observer = undefined!\n    handlers = undefined!\n    root = undefined!\n  }\n\n  return { target, disconnect }\n}\n", "import { customRef } from 'vue'\n\nexport function useManualRef() {\n  const updateSet = new Set<() => void>()\n\n  function manualRef<T>(value: T) {\n    return customRef<T>((track, trigger) => {\n      let origin = value\n\n      const update = () => {\n        if (value !== origin) {\n          origin = value\n          trigger()\n        }\n      }\n\n      return {\n        // eslint-disable-next-line no-sequences\n        get: () => (track(), value),\n        set: newValue => {\n          if (newValue === value) return\n\n          value = newValue\n          updateSet.add(update)\n        }\n      }\n    })\n  }\n\n  function triggerUpdate() {\n    for (const trigger of updateSet) {\n      trigger()\n    }\n\n    updateSet.clear()\n  }\n\n  return { updateSet, manualRef, triggerUpdate }\n}\n", "import { computed, reactive, ref, unref } from 'vue'\n\nimport { noop } from '@vexip-ui/utils'\nimport { useListener } from './listener'\n\nimport type { Ref } from 'vue'\n\nexport type ModifierState = Readonly<\n  Omit<Record<string, boolean>, 'activeKeys'> & {\n    activeKeys: Set<string>,\n    resetAll: () => void\n  }\n>\n\nexport interface UseModifierOptions {\n  /**\n   * 作用的目标元素的 Ref\n   */\n  target?: Ref<HTMLElement | null | undefined>,\n  /**\n   * 配置键名的别名，会与默认别名动态合并\n   */\n  aliasMap?: Record<string, string>,\n  /**\n   * 是否在目标元素失去焦点时重置修饰符\n   *\n   * @default true\n   */\n  autoReset?: boolean,\n  /**\n   * 事件的 capture 选项\n   *\n   * @default false\n   */\n  capture?: boolean,\n  /**\n   * 事件的 passive 选项\n   *\n   * @default true\n   */\n  passive?: boolean,\n  /**\n   * 键按下的事件回调函数\n   */\n  onKeyDown?: (event: KeyboardEvent, modifier: ModifierState) => void,\n  /**\n   * 键抬起的时间回调函数\n   */\n  onKeyUp?: (event: KeyboardEvent, modifier: ModifierState) => void\n}\n\nconst defaultAliasMap: Record<string, string> = {\n  ctrl: 'control',\n  command: 'meta',\n  cmd: 'meta',\n  option: 'alt',\n  up: 'arrowup',\n  down: 'arrowdown',\n  left: 'arrowleft',\n  right: 'arrowright'\n}\n\nconst separatorRE = /[+_-]/\nconst splitRE = /[+_-]/g\n\nconst internalProps = ['activeKeys', 'resetAll']\n\nexport function useModifier(options: UseModifierOptions = {}) {\n  const {\n    autoReset = true,\n    capture = false,\n    passive = true,\n    onKeyDown = noop,\n    onKeyUp = noop\n  } = options\n\n  const target = options.target || ref(null)\n  const aliasMap = { ...defaultAliasMap, ...(options.aliasMap || {}) }\n  const activeKeys = reactive(new Set<string>())\n  const metaDeps = new Set<string>()\n  const modifier: Record<string, any> = reactive({ activeKeys, resetAll })\n\n  function setModifier(key: string, value: boolean) {\n    if (key in modifier) {\n      modifier[key] = value\n    }\n  }\n\n  function updateModifier(event: KeyboardEvent, value: boolean) {\n    const key = event.key?.toLocaleLowerCase()\n    const code = event.code?.toLocaleLowerCase()\n    const keys = [code, key].filter(Boolean)\n\n    for (const key of keys) {\n      activeKeys[value ? 'add' : 'delete'](key)\n      setModifier(key, value)\n    }\n\n    if (!value && key === 'meta') {\n      for (const key of metaDeps) {\n        activeKeys.delete(key)\n        setModifier(key, false)\n      }\n\n      metaDeps.clear()\n    } else if (\n      value &&\n      typeof event.getModifierState === 'function' &&\n      event.getModifierState('Meta')\n    ) {\n      for (const key of [...activeKeys, ...keys]) {\n        metaDeps.add(key)\n      }\n    }\n  }\n\n  function resetAll() {\n    Object.keys(modifier).forEach(key => {\n      modifier[key] = false\n    })\n\n    modifier.activeKeys = activeKeys\n    modifier.resetAll = resetAll\n  }\n\n  const modifierProxy = new Proxy(modifier, {\n    get(target, prop, receiver) {\n      if (typeof prop !== 'string' || internalProps.includes(prop)) {\n        return Reflect.get(target, prop, receiver)\n      }\n\n      prop = prop.toLocaleLowerCase()\n\n      if (prop in aliasMap) {\n        prop = aliasMap[prop]\n      }\n\n      if (!(prop in modifier)) {\n        if (separatorRE.test(prop)) {\n          const keys = prop.split(splitRE).map(key => key.trim())\n\n          modifier[prop] = computed(() => keys.every(key => unref(modifierProxy[key])))\n        } else {\n          modifier[prop] = ref(activeKeys.has(prop))\n        }\n      }\n\n      return unref(Reflect.get(target, prop, receiver))\n    }\n  })\n\n  useListener(\n    target,\n    'keydown',\n    (event: KeyboardEvent) => {\n      updateModifier(event, true)\n      onKeyDown(event, modifierProxy)\n    },\n    { capture, passive }\n  )\n  useListener(\n    target,\n    'keyup',\n    (event: KeyboardEvent) => {\n      updateModifier(event, false)\n      onKeyUp(event, modifierProxy)\n    },\n    { capture, passive }\n  )\n\n  if (autoReset) {\n    useListener(target, 'blur', resetAll, { capture, passive })\n  }\n\n  return { target, modifier: modifierProxy as ModifierState }\n}\n", "import { nextTick, onBeforeUnmount, onMounted, readonly, ref } from 'vue'\n\nexport function useMounted(wait?: 'tick' | 'frame') {\n  const isMounted = ref(false)\n\n  const mount = () => (isMounted.value = true)\n\n  onMounted(() => {\n    if (wait === 'tick') {\n      nextTick(mount)\n    } else if (wait === 'frame') {\n      requestAnimationFrame(mount)\n    } else {\n      mount()\n    }\n  })\n\n  onBeforeUnmount(() => {\n    isMounted.value = false\n  })\n\n  return { isMounted: readonly(isMounted) }\n}\n", "import { computed, isRef, ref } from 'vue'\n\nimport { throttle } from '@vexip-ui/utils'\nimport { useListener } from './listener'\n\nimport type { MaybeRef, Ref } from 'vue'\n\nexport interface MovingState {\n  xStart: number,\n  yStart: number,\n  xEnd: number,\n  yEnd: number,\n  clientX: number,\n  clientY: number,\n  deltaX: number,\n  deltaY: number,\n  lazy: boolean,\n  [custom: string]: unknown\n}\n\nexport interface UseMovingOptions {\n  /**\n   * 作用的目标元素的 Ref\n   */\n  target?: Ref<HTMLElement | null | undefined>,\n  /**\n   * 横向位置的初始值\n   */\n  x?: MaybeRef<number>,\n  /**\n   * 纵向位置的初始值\n   */\n  y?: MaybeRef<number>,\n  /**\n   * 为否为懒加载，开启后会在 End 事件再更新位置状态\n   */\n  lazy?: MaybeRef<boolean>,\n  /**\n   * 事件的 capture 选项\n   *\n   * @default true\n   */\n  capture?: boolean,\n  /**\n   * 是否阻止 MouseDown 事件冒泡和默认行为\n   *\n   * @default true\n   */\n  stopMouse?: boolean,\n  /**\n   * 是否阻止 TouchStart 事件冒泡和默认行为\n   *\n   * @default true\n   */\n  stopTouch?: boolean,\n  /**\n   * 移动开始时的回调函数，返回 false 可以阻止本次移动\n   */\n  onStart?: (state: MovingState, event: PointerEvent) => any,\n  /**\n   * 移动中的回调函数\n   */\n  onMove?: (state: MovingState, event: PointerEvent) => void,\n  /**\n   * 移动结束时的回调函数\n   */\n  onEnd?: (state: MovingState, event: PointerEvent) => void\n}\n\nfunction disableEvent<E extends Event>(event: E) {\n  if (event.cancelable) {\n    event.stopPropagation()\n    event.preventDefault()\n  }\n}\n\nexport function useMoving(options: UseMovingOptions) {\n  const target = options.target || ref(null)\n  const x = isRef(options.x) ? options.x : ref(0)\n  const y = isRef(options.y) ? options.y : ref(0)\n  const lazy = isRef(options.lazy) ? options.lazy : ref(false)\n\n  const { capture = true, stopMouse = true, stopTouch = true } = options\n\n  const moving = ref(false)\n  const internalState: MovingState = {\n    xStart: 0,\n    yStart: 0,\n    xEnd: 0,\n    yEnd: 0,\n    clientX: 0,\n    clientY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    lazy: false\n  }\n\n  let current = 0\n  let record = 0\n\n  const throttleMove = throttle((event: PointerEvent) => {\n    if (record < current) return\n\n    updateState(event)\n\n    if (!internalState.lazy) {\n      x.value = internalState.xEnd\n      y.value = internalState.yEnd\n    }\n\n    options.onMove?.(internalState, event)\n  })\n\n  function start(event: PointerEvent) {\n    Object.assign(internalState, {\n      xStart: x.value,\n      yStart: y.value,\n      xEnd: x.value,\n      yEnd: y.value,\n      clientX: event.clientX,\n      clientY: event.clientY,\n      lazy: lazy.value\n    })\n\n    if (options.onStart?.(internalState, event) === false) {\n      return\n    }\n\n    document.addEventListener('pointermove', move, { capture })\n    document.addEventListener('pointerup', end, { capture })\n\n    record = current\n    moving.value = true\n  }\n\n  function move(event: PointerEvent) {\n    disableEvent(event)\n    throttleMove(event)\n  }\n\n  function end(event: PointerEvent) {\n    document.removeEventListener('pointermove', move, { capture })\n    document.removeEventListener('pointerup', end, { capture })\n\n    updateState(event)\n\n    if (internalState.lazy) {\n      x.value = internalState.xEnd\n      y.value = internalState.yEnd\n    }\n\n    moving.value = false\n    ++current\n\n    options.onEnd?.(internalState, event)\n  }\n\n  function updateState(event: PointerEvent) {\n    const { clientX, clientY } = event\n    const { xStart, yStart, clientX: clientXStart, clientY: clientYStart } = internalState\n    const deltaX = clientX - clientXStart\n    const deltaY = clientY - clientYStart\n\n    internalState.deltaX = deltaX\n    internalState.deltaY = deltaY\n    internalState.xEnd = xStart + deltaX\n    internalState.yEnd = yStart + deltaY\n  }\n\n  useListener(target, 'pointerdown', start, { capture })\n\n  stopMouse && useListener(target, 'mousedown', disableEvent, { capture })\n  stopTouch && useListener(target, 'touchstart', disableEvent, { capture })\n\n  return {\n    target,\n    moving: computed(() => moving.value),\n    x,\n    y,\n    lazy\n  }\n}\n", "import { onBeforeUnmount, ref } from 'vue'\n\nimport { throttle } from '@vexip-ui/utils'\n\nimport type { Ref } from 'vue'\n\nexport interface UsePointerOption {\n  /**\n   * 横向位置的初始值\n   */\n  x?: number,\n  /**\n   * 纵向位置的初始值\n   */\n  y?: number,\n  /**\n   * 是否手动停止，默认情况下会在组件的 BeforeUnmount 生命周期注销\n   *\n   * @default false\n   */\n  manualStop?: boolean\n}\n\ninterface PointerState {\n  x: Ref<number>,\n  y: Ref<number>\n}\n\nconst registered = new Set<PointerState>()\nconst record = new Map<'x' | 'y', number>()\n\nrecord.set('x', 0)\nrecord.set('y', 0)\n\nfunction handler(event: PointerEvent) {\n  const { pageX, pageY } = event\n\n  record.set('x', pageX)\n  record.set('y', pageY)\n\n  registered.forEach(state => {\n    state.x.value = pageX\n    state.y.value = pageY\n  })\n}\n\nconst throttleHandler = throttle(handler)\n\nfunction register(state: PointerState) {\n  if (!registered.size && window) {\n    record.set('x', 0)\n    record.set('y', 0)\n    window.addEventListener('pointermove', throttleHandler, { passive: true })\n  }\n\n  registered.add(state)\n}\n\nfunction unregister(state: PointerState) {\n  registered.delete(state)\n\n  if (!registered.size && window) {\n    window.removeEventListener('pointermove', throttleHandler)\n  }\n}\n\nexport function usePointer(options: UsePointerOption = {}) {\n  const x = ref(options.x ?? record.get('x')!)\n  const y = ref(options.y ?? record.get('y')!)\n\n  const state = { x, y }\n\n  register(state)\n\n  if (!options.manualStop) {\n    onBeforeUnmount(() => {\n      unregister(state)\n    })\n  }\n\n  return { ...state, unregister: () => unregister(state) }\n}\n", "const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n", "import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n", "function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n", "import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n", "var resizeObservers = [];\nexport { resizeObservers };\n", "import { resizeObservers } from '../utils/resizeObservers';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n", "import { resizeObservers } from '../utils/resizeObservers';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n", "var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n", "var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n", "export var freeze = function (obj) { return Object.freeze(obj); };\n", "import { freeze } from './utils/freeze';\nvar ResizeObserverSize = (function () {\n    function ResizeObserverSize(inlineSize, blockSize) {\n        this.inlineSize = inlineSize;\n        this.blockSize = blockSize;\n        freeze(this);\n    }\n    return ResizeObserverSize;\n}());\nexport { ResizeObserverSize };\n", "import { freeze } from './utils/freeze';\nvar DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return freeze(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n", "var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a;\n    if (obj instanceof Element) {\n        return true;\n    }\n    var scope = (_a = obj === null || obj === void 0 ? void 0 : obj.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isElement, isReplacedElement };\n", "export var global = typeof window !== 'undefined' ? window : {};\n", "import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n", "import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nimport { freeze } from './utils/freeze';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = freeze([boxes.borderBoxSize]);\n        this.contentBoxSize = freeze([boxes.contentBoxSize]);\n        this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n", "import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n", "import { resizeObservers } from '../utils/resizeObservers';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n", "import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n", "import { hasActiveObservations } from '../algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from '../algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from '../algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from '../algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from '../algorithms/gatherActiveObservationsAtDepth';\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nexport { process };\n", "var trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\".concat(toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\nexport { queueMicroTask };\n", "import { queueMicroTask } from './queueMicroTask';\nvar queueResizeObserver = function (cb) {\n    queueMicroTask(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\nexport { queueResizeObserver };\n", "import { process } from './process';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        queueResizeObserver(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nexport { scheduler, updateCount };\n", "import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n", "var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n", "import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && resizeObservers.push(detail);\n            detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n            updateCount(1);\n            scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            updateCount(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController };\n", "import { ResizeObserverController } from './ResizeObserverController';\nimport { isElement } from './utils/element';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\nexport { ResizeObserver };\n", "import { isClient } from '@vexip-ui/utils'\nimport { ResizeObserver } from '@juggle/resize-observer'\n\nexport type ResizeHandler = (entry: ResizeObserverEntry) => any\n\nconst handlerMap = new WeakMap<Element, ResizeHandler>()\n\nfunction handleResize(entries: ResizeObserverEntry[]) {\n  for (let i = 0, len = entries.length; i < len; ++i) {\n    const entry = entries[i]\n    const handler = handlerMap.get(entry.target)\n\n    if (typeof handler === 'function') {\n      handler(entry)\n    }\n  }\n}\n\nconst resizeObserver = new (isClient ? window.ResizeObserver || ResizeObserver : ResizeObserver)(\n  handleResize\n)\n\nexport function observeResize(el: Element, handler: ResizeHandler) {\n  handlerMap.set(el, handler)\n  resizeObserver.observe(el)\n}\n\nexport function unobserveResize(el: Element) {\n  if (handlerMap.has(el)) {\n    resizeObserver.unobserve(el)\n    handlerMap.delete(el)\n  }\n}\n\nexport function useResize() {\n  return {\n    observeResize,\n    unobserveResize\n  }\n}\n", "import { computed, ref } from 'vue'\n\nimport { isClient } from '@vexip-ui/utils'\nimport { observeResize } from './resize'\n\nimport type { Ref } from 'vue'\n\nconst rtl = ref(false)\nconst computedRtl: Ref<boolean> = computed(() => rtl.value)\n\nconst elId = '__rtl_observer__'\n\nexport function useRtl() {\n  if (isClient && !document.querySelector(`#${elId}`)) {\n    initObserver()\n  }\n\n  return { isRtl: computedRtl }\n}\n\nfunction initObserver() {\n  if (!isClient) return\n\n  const style = document.createElement('style')\n  const content = `#${elId} { width: 1px } html.rtl #${elId}, html[dir='rtl'] #${elId} { width: 2px }`\n\n  style.textContent = content\n  document.head.appendChild(style)\n\n  const observer = document.createElement('div')\n\n  observer.id = elId\n  observer.role = 'none'\n  observer.style.cssText =\n    'position: fixed; top -10px; left: -10px; height: 1px; visibility: hidden;'\n\n  observeResize(observer, () => {\n    if (!isClient) return\n\n    rtl.value =\n      document.documentElement.classList.contains('rtl') ||\n      document.documentElement.getAttribute('dir') === 'rtl'\n  })\n\n  document.body.appendChild(observer)\n}\n", "import { onMounted, ref, shallowRef, unref, watch, watchEffect } from 'vue'\n\nimport {\n  arrow,\n  autoUpdate,\n  computePosition,\n  flip,\n  hide,\n  offset,\n  platform,\n  shift\n} from '@floating-ui/dom'\nimport { useRtl } from './rtl'\nimport { isClient } from '@vexip-ui/utils'\n\nimport type { MaybeRef, Ref } from 'vue'\nimport type {\n  ComputePositionConfig,\n  Middleware,\n  OffsetOptions,\n  Placement,\n  ShiftOptions,\n  VirtualElement\n} from '@floating-ui/dom'\nimport type { TransferNode } from '@vexip-ui/utils'\n\nexport interface UsePopperOptions {\n  /**\n   * popper 元素出现的位置\n   */\n  placement: MaybeRef<Placement>,\n  /**\n   * popper 元素需要迁移至的目标选择器，为 true 时会迁移至 body\n   */\n  transfer?: MaybeRef<boolean | string>,\n  /**\n   * 设置是否为从右向左的阅读方向\n   */\n  isRtl?: MaybeRef<boolean>,\n  /**\n   * 包围元素，用于判断 clickoutside 事件\n   *\n   * 即使 popper 元素迁移至 wrapper 元素外部，点击 popper 元素时仍认为处于 wrapper 元素内部\n   */\n  wrapper?: Ref<HTMLElement | null | undefined>,\n  /**\n   * 设置 popper 元素为否需要 drop，此时 transform-origin 会自动调整\n   */\n  isDrop?: MaybeRef<boolean>,\n  /**\n   * 参考元素，popper 元素的位置计算依据\n   */\n  reference?: Ref<HTMLElement | VirtualElement | null | undefined>,\n  /**\n   * popper 元素\n   */\n  popper?: Ref<HTMLElement | null | undefined>,\n  /**\n   * arrow 元素\n   */\n  arrow?: Ref<HTMLElement | null | undefined>,\n  /**\n   * popper 元素的偏移量，可传入一个回调函数\n   */\n  offset?: MaybeRef<number[] | OffsetOptions>,\n  /**\n   * popper 元素是否限制在窗口内\n   */\n  shift?: MaybeRef<boolean | ShiftOptions>,\n  /**\n   * 设置是否自动更新 popper 元素\n   *\n   * @default false\n   */\n  autoUpdate?: boolean\n}\n\nexport type { Placement, VirtualElement }\n\nexport const placementWhileList = Object.freeze<Placement[]>([\n  'top',\n  'top-start',\n  'top-end',\n  'bottom',\n  'bottom-start',\n  'bottom-end',\n  'left',\n  'left-start',\n  'left-end',\n  'right',\n  'right-start',\n  'right-end'\n])\n\nexport function usePopper(initOptions: UsePopperOptions) {\n  const { transfer, wrapper, isDrop = false } = initOptions\n\n  const reference: Ref<HTMLElement | null | undefined> =\n    (initOptions.reference as any) ?? shallowRef(null)\n  const popper: Ref<HTMLElement | null | undefined> = initOptions.popper ?? shallowRef(null)\n  const arrowRef: Ref<HTMLElement | null | undefined> = initOptions.arrow ?? shallowRef(null)\n\n  const placement = ref(unref(initOptions.placement))\n  const transferTo = ref('')\n  const isRtl = initOptions.isRtl ?? useRtl().isRtl\n\n  if (wrapper) {\n    watchEffect(() => {\n      const wrapperEl = unref(wrapper)\n      const popperEl = unref(popper)\n\n      if (wrapperEl) {\n        (wrapperEl as TransferNode).__transferElement = popperEl\n      }\n    })\n  }\n\n  if (transfer != null) {\n    watch(\n      () => unref(transfer),\n      value => {\n        setTransferTo(value)\n        updatePopper()\n      }\n    )\n\n    setTransferTo(unref(transfer))\n  }\n\n  onMounted(() => {\n    requestAnimationFrame(() => {\n      watchEffect(updatePopperInternal)\n    })\n  })\n\n  let cleanup: (() => void) | undefined\n\n  async function updatePopperInternal() {\n    if (!isClient) return\n\n    cleanup?.()\n\n    const referenceEl = unref(reference)\n    const popperEl = unref(popper)\n\n    if (!referenceEl || !popperEl) return\n\n    const arrowEl = unref(arrowRef)\n\n    const middleware: Middleware[] = [flip()]\n\n    if (isDrop) {\n      middleware.push({\n        name: 'origin',\n        fn({ placement, elements }) {\n          const origin = setPopperDropOrigin(placement)\n\n          if (origin) {\n            elements.floating.style.transformOrigin = origin\n          }\n\n          return {}\n        }\n      })\n    }\n\n    if (initOptions.offset) {\n      let offsetOptions = unref(initOptions.offset)\n\n      if (Array.isArray(offsetOptions)) {\n        offsetOptions = {\n          mainAxis: offsetOptions[1],\n          crossAxis: offsetOptions[0]\n        }\n      }\n\n      middleware.push(offset(offsetOptions))\n    }\n\n    if (initOptions.shift) {\n      let shiftOptions = unref(initOptions.shift)\n\n      if (typeof shiftOptions === 'boolean') {\n        shiftOptions = {}\n      }\n\n      middleware.push(shift(shiftOptions))\n    }\n\n    if (arrowEl) {\n      middleware.push(arrow({ element: arrowEl }))\n    }\n\n    middleware.push(hide({ strategy: 'escaped' }))\n\n    const rtl = unref(isRtl) || false\n    const options: ComputePositionConfig = {\n      middleware,\n      placement: unref(initOptions.placement),\n      platform: {\n        ...platform,\n        isRTL: async () => rtl\n      }\n    }\n\n    const update = async () => {\n      const {\n        x,\n        y,\n        placement: activePlacement,\n        strategy,\n        middlewareData\n      } = await computePosition(referenceEl, popperEl, options)\n\n      if (unref(reference) !== referenceEl) {\n        if (unref(popper) === popperEl) {\n          Object.assign(popperEl.style, {\n            position: '',\n            top: '',\n            left: ''\n          })\n        }\n\n        return\n      }\n\n      const style: Partial<CSSStyleDeclaration> = {\n        position: strategy,\n        top: `${y}px`,\n        left: `${x}px`\n      }\n\n      // if (middlewareData.hide?.escaped) {\n      //   style.visibility = 'hidden'\n      // } else {\n      //   style.visibility = ''\n      // }\n\n      if (arrowEl) {\n        if (middlewareData.arrow) {\n          const { x, y } = middlewareData.arrow\n\n          Object.assign(arrowEl.style, {\n            top: y != null ? `${y}px` : '',\n            left: x != null ? `${x}px` : ''\n          })\n        } else {\n          Object.assign(arrowEl.style, { top: '', left: '' })\n        }\n      }\n\n      Object.assign(popperEl.style, style)\n      popperEl.dataset.popperPlacement = activePlacement\n      placement.value = activePlacement\n    }\n\n    if (initOptions.autoUpdate) {\n      cleanup = autoUpdate(referenceEl, popperEl, update)\n    }\n\n    await update()\n  }\n\n  const updatePopper = () => {\n    return new Promise<void>(resolve => {\n      requestAnimationFrame(() => {\n        updatePopperInternal().then(resolve)\n      })\n    })\n  }\n\n  function setTransferTo(value: boolean | string) {\n    transferTo.value = typeof value === 'boolean' ? (value ? 'body' : '') : value\n  }\n\n  // function normalizePlacement(placement: Placement, rtl: boolean) {\n  //   if (!rtl) return placement\n\n  //   let [start, end] = placement.split('-')\n\n  //   if (start === 'left' || start === 'right') {\n  //     start = start === 'left' ? 'right' : 'left'\n  //   } else {\n  //     if (!end) return placement\n\n  //     end = end === 'start' ? 'end' : 'start'\n  //   }\n\n  //   return `${start}-${end}` as Placement\n  // }\n\n  function setPopperDropOrigin(placement: Placement) {\n    if (placement !== 'left' && placement !== 'right') {\n      const [start, end] = placement.split('-')\n\n      return start === 'bottom' || (start !== 'top' && end === 'start')\n        ? 'center top'\n        : 'center bottom'\n    }\n  }\n\n  return {\n    wrapper,\n    reference,\n    popper,\n    placement,\n    transferTo,\n    updatePopper\n  }\n}\n", "import { reactive, ref, watch } from 'vue'\n\nimport { isClient } from '@vexip-ui/utils'\nimport { observeResize } from './resize'\n\nimport type { Ref } from 'vue'\nimport type { MaybeElement } from './shared/types'\n\nexport interface InitThemeOptions {\n  name: string,\n  rootClass?: string,\n  varsClass?: string\n}\n\nconst styleId = '__theme_style__'\nconst elClass = '__theme_observer__'\n\nconst elCache = new WeakMap<Element, Element>()\n\nexport function useTheme(wrapper?: MaybeElement) {\n  const theme = ref<string>()\n\n  if (isClient) {\n    wrapper = wrapper || document.body\n\n    let observer = elCache.get(wrapper)\n\n    if (!observer) {\n      observer = createObserver(theme)!\n      wrapper.appendChild(observer)\n      elCache.set(wrapper, observer)\n    }\n  }\n\n  return { theme }\n}\n\nconst activeThemes = reactive(new Map<string, string[]>())\nconst themeWidths = new Map<number, string>()\n\nwatch(activeThemes, () => {\n  if (!isClient) return\n\n  themeWidths.clear()\n\n  const prevStyle = document.head.querySelector(`#${styleId}`)\n\n  if (prevStyle) {\n    document.head.removeChild(prevStyle)\n  }\n\n  const style = document.createElement('style')\n\n  let content = `.${elClass} { width: 1px }`\n  let width = 1\n\n  for (const [name, [rootClass, varsClass]] of activeThemes.entries()) {\n    content += ` html.${rootClass} .${elClass}, .${varsClass} .${elClass} { width: ${++width}px }`\n    themeWidths.set(width, name)\n  }\n\n  style.textContent = content\n  style.id = styleId\n  document.head.appendChild(style)\n})\n\nexport function addActiveThemes(themes: (string | InitThemeOptions)[]) {\n  for (const theme of themes) {\n    const {\n      name,\n      rootClass = name,\n      varsClass = `vxp-theme-vars-${rootClass}`\n    } = typeof theme === 'string' ? ({ name: theme } as InitThemeOptions) : theme\n\n    activeThemes.set(name, [rootClass, varsClass])\n  }\n}\n\nexport function setActiveThemes(themes: (string | InitThemeOptions)[]) {\n  activeThemes.clear()\n  addActiveThemes(themes)\n}\n\nlet idCount = 0\n\nfunction getElId() {\n  return `__theme_observer_${idCount++}__`\n}\n\nfunction createObserver(theme: Ref<string | undefined>) {\n  if (!isClient) return\n\n  const observer = document.createElement('div')\n\n  observer.id = getElId()\n  observer.className = elClass\n  observer.role = 'none'\n  observer.style.cssText =\n    'position: fixed; top -10px; left: -10px; height: 1px; visibility: hidden;'\n\n  observeResize(observer, entry => {\n    if (!isClient) return\n\n    const width = entry.borderBoxSize?.[0].inlineSize ?? entry.contentRect.width\n\n    theme.value = themeWidths.get(width)\n  })\n\n  return observer\n}\n", "import { onScopeDispose } from 'vue'\n\n/**\n * 获取用于记录 `setTimeout` 返回值的对象，记录的定时器会在作用域消除时自动清理\n */\nexport function useSetTimeout() {\n  const timer: Record<string, any> = {}\n\n  onScopeDispose(() => {\n    Object.keys(timer).forEach(key => {\n      clearTimeout(timer[key])\n    })\n  })\n\n  return { timer }\n}\n\n/**\n * 获取用于记录 `setInterval` 返回值的对象，记录的定时器会在作用域消除时自动清理\n */\nexport function useSetInterval() {\n  const timer: Record<string, any> = {}\n\n  onScopeDispose(() => {\n    Object.keys(timer).forEach(key => {\n      clearInterval(timer[key])\n    })\n  })\n\n  return { timer }\n}\n\n/**\n * 获取用于记录 `requestAnimationFrame` 返回值的对象，记录的定时器会在作用域消除时自动清理\n */\nexport function useRaf() {\n  const timer: Record<string, any> = {}\n\n  onScopeDispose(() => {\n    Object.keys(timer).forEach(key => {\n      cancelAnimationFrame(timer[key])\n    })\n  })\n\n  return { timer }\n}\n\n/**\n * 获取三个分别用于记录 `setTimeout`、`setInterval` 和 `requestAnimationFrame` 返回值的对象\n *\n * 记录在这些对象上的定时器将会在作用域消除时自动清理\n */\nexport function useTimerRecord() {\n  const { timer: timeout } = useSetTimeout()\n  const { timer: interval } = useSetInterval()\n  const { timer: raf } = useRaf()\n\n  return { timeout, interval, raf }\n}\n", "import type { Ref } from 'vue'\n\nexport function useTriggerHandler(trigger: Ref<string>, currentVisible: Ref<boolean>, delay = 100) {\n  let timer: ReturnType<typeof setTimeout>\n\n  function handleTriggerEnter() {\n    if (trigger.value === 'hover') {\n      clearTimeout(timer)\n\n      timer = setTimeout(() => {\n        currentVisible.value = true\n      }, delay)\n    }\n  }\n\n  function handleTriggerLeave() {\n    if (trigger.value === 'hover') {\n      clearTimeout(timer)\n\n      timer = setTimeout(() => {\n        currentVisible.value = false\n      }, delay)\n    }\n  }\n\n  function handleTriggerClick() {\n    if (trigger.value === 'click') {\n      currentVisible.value = !currentVisible.value\n    }\n  }\n\n  return {\n    handleTriggerEnter,\n    handleTriggerLeave,\n    handleTriggerClick\n  }\n}\n", "import { computed, onScopeDispose, ref, unref, watch } from 'vue'\n\nimport { createBITree, isDefined, nextFrameOnce, noop } from '@vexip-ui/utils'\nimport { isHiddenElement } from './display'\nimport { observeResize, unobserveResize } from './resize'\n\nimport type { MaybeRef } from 'vue'\n\ntype Key = number | string | symbol\ntype Data = Record<string, any>\ntype Behavior = ScrollToOptions['behavior']\n\nexport interface VirtualOptions<T extends Data> {\n  /**\n   * 虚拟滚动的元素\n   */\n  items: MaybeRef<T[]>,\n  /**\n   * 设置元素的最小高度\n   */\n  itemSize: MaybeRef<number>,\n  /**\n   * 设置元素是否为固定高度，固定高度时不处理 resize\n   */\n  itemFixed: MaybeRef<boolean>,\n  /**\n   * 元素的主键\n   */\n  idKey: MaybeRef<keyof T>,\n  /**\n   * 默认停留在的元素的主键，未实现\n   */\n  defaultKeyAt?: Key,\n  /**\n   * 设置前后的缓冲元素的个数\n   */\n  bufferSize?: MaybeRef<number>,\n  /**\n   * 虚拟滚动的包围元素\n   */\n  wrapper?: MaybeRef<HTMLElement | null | undefined>,\n  /**\n   * 是否自动观察 wrapper 缩放\n   *\n   * @default true\n   */\n  autoResize?: boolean\n}\n\nexport function useVirtual<T extends Data = Data>(options: VirtualOptions<T>) {\n  const {\n    items,\n    itemSize,\n    itemFixed,\n    idKey,\n    defaultKeyAt,\n    bufferSize = ref(5),\n    wrapper = ref(null),\n    autoResize = true\n  } = options\n\n  const indexMap = computed(() => {\n    const itemList = unref(items)\n    const length = itemList.length\n    const keyField = unref(idKey)\n    const map = new Map<Key, number>()\n\n    for (let i = 0; i < length; ++i) {\n      map.set(itemList[i][keyField], i)\n    }\n\n    return map\n  })\n  const visibleHeight = ref(0)\n  const heightDiffMap = new Map<Key, number>()\n  const heightTree = computed(() => {\n    const itemList = unref(items)\n    const length = itemList.length\n    const keyField = unref(idKey)\n    const tree = createBITree(length, unref(itemSize))\n\n    for (let i = 0; i < length; ++i) {\n      const key = itemList[i][keyField]\n      const heightDiff = heightDiffMap.get(key)\n\n      if (heightDiff) {\n        tree.add(i, heightDiff)\n      }\n    }\n\n    return tree\n  })\n  const treeUpdateDep = ref(0)\n  const scrollOffset = ref(0)\n  const startIndex = computed(() => {\n    return Math.max(\n      heightTree.value.boundIndex(scrollOffset.value) - Math.max(unref(bufferSize), 0),\n      0\n    )\n  })\n  const visibleItems = computed(() => {\n    if (!visibleHeight.value || visibleHeight.value < 0) return []\n\n    const unrefItems = unref(items)\n    const endIndex = Math.min(\n      heightTree.value.boundIndex(scrollOffset.value + visibleHeight.value) +\n        1 +\n        Math.max(unref(bufferSize), 0),\n      unrefItems.length\n    )\n\n    return unrefItems.slice(startIndex.value, endIndex)\n  })\n  const listStyle = computed(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    treeUpdateDep.value\n\n    const height = heightTree.value.sum()\n    const fixed = unref(itemFixed)\n\n    return {\n      height: fixed ? `${height}px` : undefined,\n      minHeight: fixed ? undefined : `${height}px`,\n      boxSizing: 'content-box'\n    } as const\n  })\n  const itemsStyle = computed(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    treeUpdateDep.value\n\n    return {\n      transform: `translate3d(0, ${heightTree.value.sum(startIndex.value)}px, 0)`\n    }\n  })\n\n  if (autoResize) {\n    let unobserve = noop\n\n    const stopWatch = watch(\n      () => unref(wrapper),\n      el => {\n        unobserve()\n\n        if (!el) return\n\n        observeResize(el, handleResize)\n\n        unobserve = () => {\n          unobserveResize(el)\n          unobserve = noop\n        }\n\n        if (isDefined(defaultKeyAt)) {\n          scrollToKey(defaultKeyAt)\n        }\n      },\n      { immediate: true, flush: 'post' }\n    )\n\n    onScopeDispose(() => {\n      stopWatch()\n      unobserve()\n    })\n  }\n\n  function syncScrollOffset() {\n    const wrapperEl = unref(wrapper)\n\n    if (wrapperEl) {\n      scrollOffset.value = wrapperEl.scrollTop\n    }\n  }\n\n  function handleScroll() {\n    nextFrameOnce(syncScrollOffset)\n  }\n\n  function handleResize(entry: ResizeObserverEntry) {\n    if (\n      isHiddenElement(entry.target as HTMLElement) ||\n      entry.contentRect.height === visibleHeight.value\n    ) {\n      return\n    }\n\n    visibleHeight.value = entry.contentRect.height\n  }\n\n  function handleItemResize(key: Key, entry: ResizeObserverEntry) {\n    if (unref(itemFixed)) return\n\n    const index = indexMap.value.get(key)!\n    const tree = heightTree.value\n    const prevHeight = tree.get(index)\n    const height = entry.borderBoxSize?.[0]?.blockSize ?? entry.contentRect.height\n\n    if (height === prevHeight) return\n\n    if (isHiddenElement(entry.target as HTMLElement)) {\n      if (prevHeight) {\n        tree.add(index, -prevHeight)\n        treeUpdateDep.value++\n      }\n\n      return\n    }\n\n    const diff = height - unref(itemSize)\n    const delta = height - prevHeight\n\n    if (diff) {\n      heightDiffMap.set(key, diff)\n    } else {\n      heightDiffMap.delete(key)\n    }\n\n    if (!delta) return\n\n    tree.add(index, delta)\n    treeUpdateDep.value++\n\n    const wrapperEl = unref(wrapper)\n\n    if (wrapperEl) {\n      const prevTop = tree.sum(index)\n\n      if (wrapperEl.scrollTop > prevTop) {\n        wrapperEl.scrollBy(0, delta)\n      }\n\n      scrollOffset.value = wrapperEl.scrollTop\n    }\n  }\n\n  function scrollTo(top: number, behavior?: Behavior) {\n    const wrapperEl = unref(wrapper)\n\n    if (wrapperEl) {\n      wrapperEl.scrollTo({\n        behavior,\n        top,\n        left: 0\n      })\n    }\n  }\n\n  function scrollBy(delta: number, behavior?: Behavior) {\n    const wrapperEl = unref(wrapper)\n\n    if (wrapperEl) {\n      wrapperEl.scrollBy({\n        behavior,\n        top: delta,\n        left: 0\n      })\n    }\n  }\n\n  function scrollToKey(key: Key, behavior?: Behavior) {\n    const index = indexMap.value.get(key)\n\n    if (index != null) {\n      scrollToIndex(index, behavior)\n    }\n  }\n\n  function scrollToIndex(index: number, behavior?: Behavior) {\n    const wrapperEl = unref(wrapper)\n\n    if (wrapperEl) {\n      wrapperEl.scrollTo({\n        behavior,\n        top: heightTree.value.sum(index),\n        left: 0\n      })\n    }\n  }\n\n  function ensureIndexInView(index: number, behavior?: Behavior) {\n    const wrapperEl = unref(wrapper)\n\n    if (!wrapperEl) return\n\n    const tree = heightTree.value\n    const viewTop = wrapperEl.scrollTop\n    const top = tree.sum(index)\n\n    if (top < viewTop) {\n      scrollToIndex(index, behavior)\n      return\n    }\n\n    const viewHeight = wrapperEl.offsetHeight\n    const viewBottom = viewTop + viewHeight\n    const bottom = tree.sum(index + 1)\n\n    if (bottom > viewBottom) {\n      scrollTo(bottom - viewHeight, behavior)\n    }\n  }\n\n  function ensureKeyInView(key: Key, behavior?: Behavior) {\n    const index = indexMap.value.get(key)\n\n    if (index != null) {\n      ensureIndexInView(index, behavior)\n    }\n  }\n\n  return {\n    wrapper,\n    indexMap,\n    heightTree,\n    startIndex,\n    scrollOffset,\n    visibleItems,\n    listStyle,\n    itemsStyle,\n    handleScroll,\n    handleResize,\n    handleItemResize,\n    scrollTo,\n    scrollBy,\n    scrollToKey,\n    scrollToIndex,\n    ensureIndexInView,\n    ensureKeyInView\n  }\n}\n", "<script setup lang=\"ts\">\nimport {\n  ref,\n  reactive,\n  toRefs,\n  watch,\n  provide,\n  onBeforeMount,\n  onMounted,\n  onBeforeUnmount,\n  nextTick\n} from 'vue'\nimport GridItem from './grid-item.vue'\nimport { useResize } from '@vexip-ui/hooks'\nimport { createEventEmitter, isNull, debounce } from '@vexip-ui/utils'\nimport {\n  LAYOUT_KEY,\n  EMITTER_KEY,\n  bottom,\n  compact,\n  getLayoutItem,\n  moveElement,\n  validateLayout,\n  cloneLayout,\n  getAllCollisions\n} from '../helpers/common'\nimport {\n  getBreakpointFromWidth,\n  getColsFromBreakpoint,\n  findOrGenerateResponsiveLayout\n} from '../helpers/responsive'\n\nimport type { PropType } from 'vue'\nimport type {\n  Layout,\n  Breakpoint,\n  Breakpoints,\n  ResponsiveLayout,\n  LayoutInstance\n} from '../helpers/types'\n\nconst props = defineProps({\n  autoSize: {\n    type: Boolean,\n    default: true\n  },\n  colNum: {\n    type: Number,\n    default: 12\n  },\n  rowHeight: {\n    type: Number,\n    default: 150\n  },\n  maxRows: {\n    type: Number,\n    default: Infinity\n  },\n  margin: {\n    type: Array as PropType<number[]>,\n    default: () => [10, 10]\n  },\n  isDraggable: {\n    type: Boolean,\n    default: true\n  },\n  isResizable: {\n    type: Boolean,\n    default: true\n  },\n  isMirrored: {\n    type: Boolean,\n    default: false\n  },\n  isBounded: {\n    type: Boolean,\n    default: false\n  },\n  useCssTransforms: {\n    type: Boolean,\n    default: true\n  },\n  verticalCompact: {\n    type: Boolean,\n    default: true\n  },\n  restoreOnDrag: {\n    type: Boolean,\n    default: false\n  },\n  layout: {\n    type: Array as PropType<Layout>,\n    required: true\n  },\n  responsive: {\n    type: Boolean,\n    default: false\n  },\n  responsiveLayouts: {\n    type: Object as PropType<Partial<ResponsiveLayout>>,\n    default: () => ({})\n  },\n  transformScale: {\n    type: Number,\n    default: 1\n  },\n  breakpoints: {\n    type: Object as PropType<Breakpoints>,\n    default: () => ({ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 })\n  },\n  cols: {\n    type: Object as PropType<Breakpoints>,\n    default: () => ({ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 })\n  },\n  preventCollision: {\n    type: Boolean,\n    default: false\n  },\n  useStyleCursor: {\n    type: Boolean,\n    default: true\n  }\n})\n\nconst emit = defineEmits([\n  'layout-before-mount',\n  'layout-mounted',\n  'layout-updated',\n  'breakpoint-changed',\n  'update:layout',\n  'layout-ready'\n])\n\nconst state = reactive({\n  width: -1,\n  mergedStyle: {},\n  lastLayoutLength: 0,\n  isDragging: false,\n  placeholder: {\n    x: 0,\n    y: 0,\n    w: 0,\n    h: 0,\n    i: '' as number | string\n  },\n  layouts: {} as Record<Breakpoint, Layout>, // array to store all layouts from different breakpoints\n  lastBreakpoint: null as Breakpoint | null, // store last active breakpoint\n  originalLayout: null! as Layout // store original Layout\n})\n\nconst itemInstances = new Map<number | string, any>()\n\nconst currentLayout = ref(props.layout)\nconst wrapper = ref<HTMLElement>()\n\nconst { observeResize, unobserveResize } = useResize()\nconst emitter = createEventEmitter()\n\nemitter.on('resizeEvent', resizeEventHandler)\nemitter.on('dragEvent', dragEventHandler)\n\nonBeforeMount(() => {\n  emit('layout-before-mount', currentLayout.value)\n})\n\nonMounted(() => {\n  emit('layout-mounted', currentLayout.value)\n\n  nextTick(() => {\n    validateLayout(currentLayout.value)\n\n    state.originalLayout = currentLayout.value\n\n    nextTick(() => {\n      initResponsiveFeatures()\n      wrapper.value && observeResize(wrapper.value, debounce(onWindowResize, 16))\n      compact(currentLayout.value, props.verticalCompact)\n      emit('layout-updated', currentLayout.value)\n      updateHeight()\n      onWindowResize()\n    })\n  })\n})\n\nonBeforeUnmount(() => {\n  emitter.clearAll()\n  wrapper.value && unobserveResize(wrapper.value)\n})\n\nfunction resizeEventHandler(\n  eventType: string,\n  i: number | string,\n  x: number,\n  y: number,\n  h: number,\n  w: number\n) {\n  resizeEvent(eventType, i, x, y, h, w)\n}\n\nfunction dragEventHandler(\n  eventType: string,\n  i: number | string,\n  x: number,\n  y: number,\n  h: number,\n  w: number\n) {\n  dragEvent(eventType, i, x, y, h, w)\n}\n\nwatch(\n  () => state.width,\n  (newVal, oldVal) => {\n    nextTick(() => {\n      emitter.emit('updateWidth', newVal)\n      if (oldVal === null) {\n        /*\n        If oldVal == null is when the width has never been\n        set before. That only occurs when mounting is\n        finished, and onWindowResize has been called and\n        this.width has been changed the first time after it\n        got set to null in the constructor. It is now time\n        to issue layout-ready events as the GridItems have\n        their sizes configured properly.\n\n        The reason for emitting the layout-ready events on\n        the next tick is to allow for the newly-emitted\n        updateWidth event (above) to have reached the\n        children GridItem-s and had their effect, so we're\n        sure that they have the final size before we emit\n        layout-ready (for this GridLayout) and\n        item-layout-ready (for the GridItem-s).\n\n        This way any client event handlers can reliably\n        investigate stable sizes of GridItem-s.\n      */\n        nextTick(() => {\n          emit('layout-ready', currentLayout.value)\n        })\n      }\n      updateHeight()\n    })\n  }\n)\nwatch(\n  () => [props.layout, props.layout.length],\n  () => {\n    currentLayout.value = props.layout\n    layoutUpdate()\n  }\n)\nwatch(\n  () => props.colNum,\n  val => {\n    emitter.emit('setColNum', val)\n  }\n)\nwatch(\n  () => props.rowHeight,\n  value => {\n    emitter.emit('setRowHeight', value)\n  }\n)\nwatch(\n  () => props.isDraggable,\n  value => {\n    emitter.emit('setDraggable', value)\n  }\n)\nwatch(\n  () => props.isResizable,\n  value => {\n    emitter.emit('setResizable', value)\n  }\n)\nwatch(\n  () => props.isBounded,\n  value => {\n    emitter.emit('setBounded', value)\n  }\n)\nwatch(\n  () => props.transformScale,\n  value => {\n    emitter.emit('setTransformScale', value)\n  }\n)\nwatch(\n  () => props.responsive,\n  value => {\n    if (!value) {\n      emit('update:layout', state.originalLayout)\n      emitter.emit('setColNum', props.colNum)\n    }\n    onWindowResize()\n  }\n)\nwatch(\n  () => props.maxRows,\n  value => {\n    emitter.emit('setMaxRows', value)\n  }\n)\nwatch([() => props.margin, () => props.margin[1]], updateHeight)\n\nprovide(\n  LAYOUT_KEY,\n  reactive({\n    ...toRefs(props),\n    ...toRefs(state),\n    increaseItem,\n    decreaseItem\n  }) as LayoutInstance\n)\nprovide(EMITTER_KEY, emitter)\n\ndefineExpose({ state, getItem, resizeEvent, dragEvent })\n\nfunction increaseItem(item: any) {\n  itemInstances.set(item.i, item)\n}\n\nfunction decreaseItem(item: any) {\n  itemInstances.delete(item.i)\n}\n\nfunction getItem(id: number | string) {\n  return itemInstances.get(id)\n}\n\nfunction layoutUpdate() {\n  if (!isNull(currentLayout.value) && !isNull(state.originalLayout)) {\n    if (currentLayout.value.length !== state.originalLayout.length) {\n      const diff = findDifference(currentLayout.value, state.originalLayout)\n\n      if (diff.length > 0) {\n        if (currentLayout.value.length > state.originalLayout.length) {\n          state.originalLayout = state.originalLayout.concat(diff)\n        } else {\n          const ids = new Set(diff.map(item => item.i))\n          state.originalLayout = state.originalLayout.filter(item => !ids.has(item.i))\n        }\n      }\n\n      state.lastLayoutLength = currentLayout.value.length\n      initResponsiveFeatures()\n    }\n\n    compact(currentLayout.value, props.verticalCompact)\n    emitter.emit('updateWidth', state.width)\n    updateHeight()\n\n    emit('layout-updated', currentLayout.value)\n  }\n}\n\nfunction updateHeight() {\n  state.mergedStyle = {\n    height: containerHeight()\n  }\n}\n\nfunction onWindowResize() {\n  if (wrapper.value) {\n    state.width = wrapper.value.offsetWidth\n  }\n\n  emitter.emit('resizeEvent')\n}\n\nfunction containerHeight() {\n  if (!props.autoSize) return\n\n  const marginY = parseFloat(props.margin[1] as any)\n  const containerHeight = bottom(currentLayout.value) * (props.rowHeight + marginY) + marginY + 'px'\n  return containerHeight\n}\n\nlet positionsBeforeDrag: Record<string, { x: number, y: number }> | undefined\n\nfunction dragEvent(\n  eventName: string,\n  id: number | string,\n  x: number,\n  y: number,\n  h: number,\n  w: number\n) {\n  let l = getLayoutItem(currentLayout.value, id)!\n\n  // GetLayoutItem sometimes returns null object\n  if (isNull(l)) {\n    l = { h: 0, w: 0, x: 0, y: 0, i: '' }\n  }\n\n  if (eventName === 'dragstart' && !props.verticalCompact) {\n    positionsBeforeDrag = currentLayout.value.reduce(\n      (result, { i, x, y }) => ({\n        ...result,\n        [i]: { x, y }\n      }),\n      {}\n    )\n  }\n\n  if (eventName === 'dragmove' || eventName === 'dragstart') {\n    state.placeholder.i = id\n    state.placeholder.x = l.x\n    state.placeholder.y = l.y\n    state.placeholder.w = w\n    state.placeholder.h = h\n\n    nextTick(() => {\n      state.isDragging = true\n    })\n\n    emitter.emit('updateWidth', state.width)\n  } else {\n    nextTick(() => {\n      state.isDragging = false\n    })\n  }\n\n  // Move the element to the dragged location.\n  currentLayout.value = moveElement(currentLayout.value, l, x, y, true, props.preventCollision)\n\n  if (props.restoreOnDrag) {\n    // Do not compact items more than in layout before drag\n    // Set moved item as static to avoid to compact it\n    l.static = true\n    compact(currentLayout.value, props.verticalCompact, positionsBeforeDrag)\n    l.static = false\n  } else {\n    compact(currentLayout.value, props.verticalCompact)\n  }\n\n  // needed because vue can't detect changes on array element properties\n  emitter.emit('compact')\n  updateHeight()\n  if (eventName === 'dragend') {\n    positionsBeforeDrag = undefined\n    emit('layout-updated', currentLayout.value)\n  }\n}\n\nfunction resizeEvent(\n  eventName: string,\n  id: number | string,\n  x: number,\n  y: number,\n  h: number,\n  w: number\n) {\n  let l = getLayoutItem(currentLayout.value, id)!\n  // GetLayoutItem sometimes return null object\n  if (isNull(l)) {\n    l = { h: 0, w: 0, x: 0, y: 0, i: '' }\n  }\n\n  let hasCollisions\n  if (props.preventCollision) {\n    const collisions = getAllCollisions(currentLayout.value, { ...l, w, h }).filter(\n      layoutItem => layoutItem.i !== l.i\n    )\n    hasCollisions = collisions.length > 0\n\n    // If we're colliding, we need adjust the placeholder.\n    if (hasCollisions) {\n      // adjust w && h to maximum allowed space\n      let leastX = Infinity\n      let leastY = Infinity\n      collisions.forEach(layoutItem => {\n        if (layoutItem.x > l.x) leastX = Math.min(leastX, layoutItem.x)\n        if (layoutItem.y > l.y) leastY = Math.min(leastY, layoutItem.y)\n      })\n\n      if (Number.isFinite(leastX)) l.w = leastX - l.x\n      if (Number.isFinite(leastY)) l.h = leastY - l.y\n    }\n  }\n\n  if (!hasCollisions) {\n    // Set new width and height.\n    l.w = w\n    l.h = h\n  }\n\n  if (eventName === 'resizestart' || eventName === 'resizemove') {\n    state.placeholder.i = id\n    state.placeholder.x = x\n    state.placeholder.y = y\n    state.placeholder.w = l.w\n    state.placeholder.h = l.h\n    nextTick(() => {\n      state.isDragging = true\n    })\n    // this.$broadcast(\"updateWidth\", this.width);\n    emitter.emit('updateWidth', state.width)\n  } else {\n    nextTick(() => {\n      state.isDragging = false\n    })\n  }\n\n  if (props.responsive) responsiveGridLayout()\n\n  compact(currentLayout.value, props.verticalCompact)\n  emitter.emit('compact')\n  updateHeight()\n\n  if (eventName === 'resizeend') emit('layout-updated', currentLayout.value)\n}\n\nfunction responsiveGridLayout() {\n  const newBreakpoint = getBreakpointFromWidth(props.breakpoints, state.width)\n  const newCols = getColsFromBreakpoint(newBreakpoint, props.cols)\n\n  // save actual layout in layouts\n  if (!isNull(state.lastBreakpoint) && !state.layouts[state.lastBreakpoint]) {\n    state.layouts[state.lastBreakpoint] = cloneLayout(currentLayout.value)\n  }\n\n  // Find or generate a new layout.\n  const layout = findOrGenerateResponsiveLayout(\n    state.originalLayout,\n    state.layouts,\n    props.breakpoints,\n    newBreakpoint,\n    state.lastBreakpoint!,\n    newCols,\n    props.verticalCompact\n  )\n\n  // Store the new layout.\n  state.layouts[newBreakpoint] = layout\n\n  if (state.lastBreakpoint !== newBreakpoint) {\n    emit('breakpoint-changed', newBreakpoint, layout)\n  }\n\n  // new prop sync\n  emit('update:layout', layout)\n\n  state.lastBreakpoint = newBreakpoint\n  emitter.emit('setColNum', getColsFromBreakpoint(newBreakpoint, props.cols))\n}\n\nfunction initResponsiveFeatures() {\n  // clear layouts\n  state.layouts = Object.assign({} as Record<Breakpoint, Layout>, props.responsiveLayouts)\n}\n\nfunction findDifference(layout: Layout, originalLayout: Layout) {\n  const originalIds = new Set(originalLayout.map(item => item.i))\n  const ids = new Set(layout.map(item => item.i))\n\n  // Find values that are in result1 but not in result2\n  const uniqueResultOne = layout.filter(item => !originalIds.has(item.i))\n\n  // Find values that are in result2 but not in result1\n  const uniqueResultTwo = originalLayout.filter(item => !ids.has(item.i))\n\n  // Combine the two arrays of unique entries#\n  return uniqueResultOne.concat(uniqueResultTwo)\n}\n</script>\n\n<template>\n  <div ref=\"wrapper\" class=\"vgl-layout\" :style=\"state.mergedStyle\">\n    <slot v-if=\"$slots.default\"></slot>\n    <template v-else>\n      <GridItem v-for=\"item in currentLayout\" :key=\"item.i\" v-bind=\"item\">\n        <slot name=\"item\" :item=\"item\"></slot>\n      </GridItem>\n    </template>\n    <GridItem\n      v-show=\"state.isDragging\"\n      class=\"vgl-item--placeholder\"\n      :x=\"state.placeholder.x\"\n      :y=\"state.placeholder.y\"\n      :w=\"state.placeholder.w\"\n      :h=\"state.placeholder.h\"\n      :i=\"state.placeholder.i\"\n    ></GridItem>\n  </div>\n</template>\n", "(function(){\"use strict\";try{if(typeof document<\"u\"){var e=document.createElement(\"style\");e.appendChild(document.createTextNode('.vgl-layout{--vgl-placeholder-bg: red;--vgl-placeholder-opacity: 20%;--vgl-placeholder-z-index: 2;--vgl-item-resizing-z-index: 3;--vgl-item-resizing-opacity: 60%;--vgl-item-dragging-z-index: 3;--vgl-item-dragging-opacity: 100%;--vgl-resizer-size: 10px;--vgl-resizer-border-color: #444;--vgl-resizer-border-width: 2px;position:relative;box-sizing:border-box;transition:height .2s ease}.vgl-item{position:absolute;box-sizing:border-box;transition:.2s ease;transition-property:left,top,right}.vgl-item--placeholder{z-index:var(--vgl-placeholder-z-index, 2);-webkit-user-select:none;-moz-user-select:none;user-select:none;background-color:var(--vgl-placeholder-bg, red);opacity:var(--vgl-placeholder-opacity, 20%);transition-duration:.1s}.vgl-item--no-touch{touch-action:none}.vgl-item--transform{right:auto;left:0;transition-property:transform}.vgl-item--transform.vgl-item--rtl{right:0;left:auto}.vgl-item--resizing{z-index:var(--vgl-item-resizing-z-index, 3);-webkit-user-select:none;-moz-user-select:none;user-select:none;opacity:var(--vgl-item-resizing-opacity, 60%)}.vgl-item--dragging{z-index:var(--vgl-item-dragging-z-index, 3);-webkit-user-select:none;-moz-user-select:none;user-select:none;opacity:var(--vgl-item-dragging-opacity, 100%);transition:none}.vgl-item__resizer{position:absolute;right:0;bottom:0;box-sizing:border-box;width:var(--vgl-resizer-size);height:var(--vgl-resizer-size);cursor:se-resize}.vgl-item__resizer:before{position:absolute;inset:0 3px 3px 0;content:\"\";border:0 solid var(--vgl-resizer-border-color);border-right-width:var(--vgl-resizer-border-width);border-bottom-width:var(--vgl-resizer-border-width)}.vgl-item__resizer--rtl{right:auto;left:0;cursor:sw-resize}.vgl-item__resizer--rtl:before{inset:0 0 3px 3px;border-right-width:0;border-bottom-width:var(--vgl-resizer-border-width);border-left-width:var(--vgl-resizer-border-width)}')),document.head.appendChild(e)}}catch(r){console.error(\"vite-plugin-css-injected-by-js\",r)}})();\nimport \"./style.scss.mjs\";\nimport { default as a } from \"./components/grid-layout.vue.mjs\";\nimport { default as d } from \"./components/grid-item.vue.mjs\";\nexport {\n  d as GridItem,\n  a as GridLayout\n};\n//# sourceMappingURL=index.mjs.map\n"],
  "mappings": "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",
  "names": ["isWindow", "thing", "Window", "realWindow", "win", "init", "window", "el", "document", "createTextNode", "ownerDocument", "wrap", "getWindow", "node", "defaultView", "object", "_typeof", "func", "is", "docFrag", "nodeType", "number", "bool", "string", "element", "_window", "test", "Element", "nodeName", "plainObject", "constructor", "toString", "array", "length", "splice", "beforeMove", "_ref", "interaction", "prepared", "name", "axis", "coords", "cur", "page", "y", "start", "client", "velocity", "x", "move", "_ref2", "iEvent", "opposite", "delta", "drag", "id", "install", "scope", "actions", "Interactable", "defaults", "prototype", "draggable", "map", "methodDict", "listeners", "arg", "interactable", "buttons", "dragOptions", "options", "enabled", "pointerIsDown", "pointerType", "mouseButtons", "action", "lockAxis", "startAxis", "this", "setPerAction", "setOnEvents", "getCursor", "filterEventType", "type", "search", "drag$1", "domObjects", "DocumentFragment", "blank", "SVGElement", "SVGSVGElement", "SVGElementInstance", "HTMLElement", "Event", "Touch", "PointerEvent", "MSPointerEvent", "domObjects$1", "browser", "navigator", "supportsTouch", "DocumentTouch", "supportsPointerEvent", "pointerEnabled", "isIOS", "platform", "isIOS7", "appVersion", "isIe9", "userAgent", "isOperaMobile", "appName", "prefixedMatchesSelector", "pEventTypes", "up", "down", "over", "out", "cancel", "wheelEvent", "browser$1", "nodeContains", "parent", "child", "contains", "parentNode", "closest", "selector", "matchesSelector", "host", "replace", "getParent", "getNodeParents", "limit", "parentParent", "parents", "unshift", "matchesUpTo", "getActualElement", "correspondingUseElement", "getElementClientRect", "clientRect", "getBoundingClientRect", "getClientRects", "left", "right", "top", "bottom", "width", "height", "getElementRect", "relevantWindow", "scroll", "scrollX", "documentElement", "scrollLeft", "scrollY", "scrollTop", "getPath", "path", "push", "trySelector", "value", "querySelector", "extend", "dest", "source", "prop", "getStringOptionResult", "target", "getRect", "resolveRectLike", "functionArgs", "returnValue", "apply", "rectToXY", "rect", "tlbrToXywh", "addEdges", "edges", "getOriginXY", "actionName", "actionOptions", "origin", "normalize", "filter", "arguments", "_typeOrPrefix", "result", "split", "forEach", "t", "_i2", "_listeners2", "l", "prefix", "p", "concat", "trim", "hypot", "Math", "sqrt", "VENDOR_PREFIXES", "pointerExtend", "__set", "_loop", "some", "indexOf", "Object", "defineProperty", "get", "set", "configurable", "copyCoords", "src", "timeStamp", "setZeroCoords", "targetObj", "isNativePointer", "pointer", "dom", "getXY", "xy", "getPageXY", "getPointerId", "pointerId", "identifier", "setCoords", "pointers", "pointerAverage", "getTouchPair", "event", "touches", "changedTouches", "average", "pageX", "pageY", "clientX", "clientY", "screenX", "screenY", "touchBBox", "minX", "min", "minY", "maxX", "max", "maxY", "touchDistance", "deltaSource", "sourceX", "sourceY", "dx", "dy", "touchAngle", "atan2", "PI", "getPointerType", "undefined", "getEventTargets", "composedPath", "domUtils", "currentTarget", "BaseEvent", "_classCallCheck", "immediatePropagationStopped", "propagationStopped", "_interaction", "_createClass", "key", "_proxy", "merge", "item", "from", "findIndex", "i", "find", "DropEvent", "_BaseEvent", "_inherits", "_super", "_createSuper", "dropState", "dragEvent", "_this", "call", "dropzone", "relatedTarget", "prev", "_this2", "rejected", "events", "enter", "stopImmediatePropagation", "activeDrops", "index", "arr", "deactivateEvent", "fire", "fireActivationEvents", "_i6", "_activeDrops$slice2", "slice", "_activeDrops$slice2$_", "getActiveDrops", "dragElement", "draggableElement", "drops", "_interactables$list2", "interactables", "list", "drop", "accept", "_i4", "_dropzone$getAllEleme2", "getAllElements", "dropzoneElement", "_i8", "activeDrop", "getDrop", "pointerEvent", "validDrops", "_i10", "_dropState$activeDrop2", "_dropState$activeDrop3", "isValid", "dropCheck", "dropIndex", "elements", "deepestNodeIndex", "higherNode", "lowerNode", "deepestNodeParents", "currentNode", "deepestNode", "currentNodeParent", "deepestNodeParent", "ancestryStart", "ownerSVGElement", "currentNodeParents", "commonIndex", "lastChild", "previousSibling", "higherIndex", "parseInt", "getComputedStyle", "zIndex", "getDropEvents", "_pointerEvent", "dropEvents", "leave", "activate", "deactivate", "dragLeave", "prevDropzone", "dragEnter", "fireDropEvents", "onEventCreated", "_ref3", "dynamicDrop", "dropResult", "interact", "interactStatic", "usePlugin", "normalized", "normalizeListeners", "corrected", "keys", "reduce", "acc", "prevListeners", "off", "on", "ondrop", "ondropactivate", "ondropdeactivate", "ondragenter", "ondragleave", "ondropmove", "overlap", "checker", "dropElement", "dropped", "dropOverlap", "pointerUtils", "horizontal", "vertical", "dragRect", "cx", "cy", "newValue", "phaselessTypes", "dragenter", "dragleave", "dropactivate", "dropdeactivate", "dropmove", "_ref4", "_ref5", "_ref6", "_ref7", "drop$1", "updateGestureProps", "phase", "starting", "ending", "distance", "box", "scale", "ds", "angle", "da", "gesture", "startDistance", "startAngle", "prevEvent", "Infinity", "isNaN", "before", "gesturable", "gestureOptions", "gesture$1", "checkResizeEdge", "interactableElement", "margin", "abs", "edge", "updateEventAxes", "resizeAxes", "resizeEvent", "resize", "square", "axes", "request", "cursors", "topleft", "bottomright", "topright", "bottomleft", "defaultMargin", "resizable", "preserveAspectRatio", "_rects", "previous", "deltaRect", "invert", "invertible", "current", "_interaction$_rects", "startRect", "swap", "resizeOptions", "resizeEdges", "_latestPointer", "eventTarget", "NaN", "cursorKey", "_ref8", "resize$1", "lastTime", "raf", "callback", "token", "global", "requestAnimationFrame", "cancelAnimationFrame", "vendors", "vendor", "bind", "currTime", "Date", "now", "timeToCall", "setTimeout", "clearTimeout", "autoScroll", "container", "speed", "isScrolling", "prevTime", "stop", "getContainer", "dt", "s", "scrollBy", "prevScroll", "getScroll", "curScroll", "check", "_options$actionName$a", "onInteractionMove", "interacting", "simulation", "innerWidth", "innerHeight", "body", "autoScrollPlugin", "autoscroll", "perAction", "autoScroll$1", "warnOnce", "method", "message", "warned", "console", "warn", "copyAction", "styleCursor", "actionChecker", "InteractableMethods", "getAction", "button", "ignoreFrom", "_backCompatOption", "allowFrom", "validateAction", "testIgnoreAllow", "withinInteractionLimit", "validateMatches", "matches", "matchElements", "len", "match", "matchElement", "matchAction", "getActionInfo", "pushMatches", "forEachMatch", "actionInfo", "manualStart", "prepare", "setInteractionCursor", "maxActions", "maxPerElement", "autoStartMax", "autoStart", "maxInteractions", "activeInteractions", "interactableCount", "elementCount", "_scope$interactions$l2", "interactions", "otherAction", "setCursor", "cursor", "prevCursorElement", "cursorElement", "style", "cursorChecker", "_interacting", "base", "pointerWasMoved", "autoStart$2", "dragAxis", "absX", "absY", "targetOptions", "currentAxis", "getDraggable", "downPointer", "downEvent", "thisAxis", "getHoldDuration", "hold", "delay", "basePlugin", "autoStartHoldTimer", "duplicate", "hold$1", "preventDefault", "onInteractionEvent", "checkAndPreventDefault", "interactablePreventDefault", "setting", "supportsPassive", "doc", "docOptions", "getDocOptions", "passive", "docEvents", "listener", "eventType", "isNonNativeEvent", "substr", "phases", "clone", "Modification", "states", "startOffset", "startDelta", "endResult", "startEdges", "createResult", "pageCoords", "modifierList", "actionModifiers", "modifiers", "methods", "_methods", "m", "prepareStates", "fillArg", "preEnd", "startAll", "setAll", "_this$states2", "state", "skipModifiers", "unmodifiedRect", "unmodifiedEdges", "newResult", "_state$methods", "lastModifierCoords", "shouldDo", "rectUtils", "eventProps", "rectDelta", "prevCoords", "prevRect", "rectChanged", "changed", "curCoords", "startCoords", "curDelta", "_ref3$_i", "coordsSet", "modifiedCoords", "adjustment", "applyToInteraction", "doPreend", "endPosition", "beforeEnd", "modifierArg", "_this$states4", "_modifierList$index", "_ref4$interaction", "modification", "_modification$result", "_i12", "_ref6$_i", "requireEndOnly", "endOnly", "setStart", "other", "makeModifier", "module", "modifier", "_options", "enable", "disable", "_defaults", "addEventModifiers", "modifiersBase", "ret", "setAndApply", "restoreInteractionCoords", "InteractEvent", "ctrlKey", "shiftKey", "altKey", "metaKey", "x0", "y0", "t0", "duration", "clientX0", "clientY0", "swipe", "_assertThisInitialized", "downTime", "getSwipe", "velocityY", "velocityX", "defineProperties", "PointerInfo", "downTarget", "_ProxyValues", "_ProxyMethods", "idCounter", "Interaction", "scopeFire", "_scopeFire", "_ending", "_stopped", "doMove", "signalArg", "_id", "that", "_loop2", "_key", "pointerIndex", "updatePointer", "pointerInfo", "_doPhase", "duplicateMove", "pointerMoveTolerance", "getPointerIndex", "curEventTarget", "end", "removePointer", "endPhaseResult", "curPointer", "_now", "_updateLatestPointer", "_this$interactable", "_createPreparedEvent", "_fireEvent", "beforeAction", "applyPending", "offset", "pending", "addToCoords", "offsetBy", "total", "offset$1", "InertiaState", "active", "isModified", "smoothEnd", "allowResume", "modifierCount", "v0", "te", "targetOffset", "modifiedOffset", "currentOffset", "lambda_v0", "one_ve_v0", "timeout", "getOptions", "velocityClient", "pointerSpeed", "copyFrom", "minSpeed", "endSpeed", "startInertia", "startSmoothEnd", "startVelocity", "lambda", "resistance", "inertiaDur", "log", "onNextFrame", "inertiaTick", "smoothEndTick", "tickFn", "_this3", "startX", "startY", "cpX", "cpY", "endX", "endY", "position", "_this4", "newOffset", "progress", "exp", "_getQBezierValue", "_this5", "smoothEndDuration", "easeOutQuad", "inertia", "inertiastart", "resume", "p1", "p2", "p3", "iT", "b", "c", "d", "inertia$1", "fireUntilImmediateStopped", "Eventable", "types", "eventList", "_listeners$type2", "subListener", "_element", "FakeEvent", "originalEvent", "pExtend", "stopPropagation", "param", "capture", "optionsMatch", "a", "_scope$document", "targets", "delegatedEvents", "documents", "eventsMethods", "add", "remove", "addDelegate", "context", "optionalArg", "_i3", "delegateListener", "delegateUseCapture", "delegates", "delegate", "removeDelegate", "matchFound", "entry", "supportsOptions", "addEventListener", "removeEventListener", "targetIndex", "typeIsEmpty", "typeListeners", "hasOwnProperty", "fakeEvent", "_i5", "createElement", "finder", "methodOrder", "details", "_finder$methodOrder2", "simulationResume", "mouseOrPen", "firstNonActive", "_scope$interactions$l4", "hasPointerId", "_scope$interactions$l6", "hasPointer", "_scope$interactions$l8", "idle", "_scope$interactions$l10", "finder$1", "methodNames", "doOnInteractions", "_pointerUtils$getEven", "prevTouchTime", "_event$changedTouches2", "changedTouch", "searchDetails", "getInteraction", "invalidPointer", "_matches$_i", "new", "onDocSignal", "eventMethodName", "eventMethod", "eventOptions", "_i14", "_docEvents$_i", "releasePointersOnRemovedEls", "_interaction$pointers2", "pointerDown", "pointerMove", "pointerUp", "documentBlur", "_InteractionBase", "_class", "InteractionBase", "destroy", "interactions$1", "OnOffMethod", "defaultContext", "scopeEvents", "_actions", "_context", "_win", "_doc", "_scopeEvents", "onstart", "onmove", "onend", "oninertiastart", "_this$_actions$map$ac", "actionFilter", "_onOff", "Off", "On", "optionName_", "optionName", "optionValue", "updatePerActionListeners", "Array", "querySelectorAll", "targetNode", "testIgnore", "testAllow", "typeArg", "listenerArg", "_listeners$_type2", "actionName_", "methodName", "rectChecker", "delegated", "_delegated$i", "InteractableSet", "selectorMap", "addListeners", "interactablesOnTarget", "addDocument", "isSelector", "inContext", "_this$list2", "Scope", "floor", "random", "isInitialized", "listenerMaps", "getExisting", "globalEvents", "getPointerAverage", "getTouchBBox", "getTouchDistance", "getTouchAngle", "version", "process", "use", "plugin", "isSet", "_type2", "debug", "_this$scope$interacti2", "removeDocument", "_plugins", "onWindowUnload", "_InteractableBase", "_class2", "_get", "_getPrototypeOf", "InteractableBase", "_this$listenerMaps2", "pluginIsInstalled", "pluginIdRoot", "otherId", "getDocIndex", "docIndex", "interact$1", "_global", "globalThis", "fn", "grid", "coordFields", "xField", "yField", "gridFunc", "range", "_grid$limits", "limits", "_grid$offset", "_coordFields$_i", "gridx", "round", "gridy", "snappersPlugin", "snappers", "allSnappers", "createSnapGrid", "aspectRatio", "_state$options", "ratio", "_state$options2", "equalDelta", "linkedEdges", "xIsPrimaryAxis", "sign", "edgeSign", "subModification", "_objectSpread", "initialCoords", "aspectMethod", "setEqualDelta", "setRatio", "correctedRect", "newHeight", "newWidth", "aspectRatio$1", "noop", "rubberband", "getRestrictionRect", "restrict", "elementRect", "restriction", "widthDiff", "heightDiff", "restrict$1", "noInner", "noOuter", "fixRect", "restrictEdges", "inner", "outer", "restrictEdges$1", "_", "restrictRect$1", "noMin", "noMax", "restrictSize$1", "minSize", "maxSize", "snap", "snapOffset", "offsetWithOrigin", "optionsOrigin", "offsetRect", "relativePoints", "offsets", "relativePoint", "relativeX", "relativeY", "snapTarget", "inRange", "snap$1", "snapSize", "targetFields", "relative", "_state$targetFields2", "_state$targetFields2$", "snapSize$1", "all", "restrictRect", "restrictSize", "snapEdges", "spring", "avoid", "transform", "_all", "modifiers$1", "interval", "tapTime", "double", "prevTap", "originX", "originY", "pointerEvents", "clearHold", "timer", "minDuration", "_signalArg$targets2", "holdDuration", "eventable", "collectEventTargets", "tap", "doubletap", "_arg$targets", "props", "_subtractOrigin", "_addOrigin", "_interaction$pointers", "Bn", "endHoldRepeat", "holdIntervalHandle", "clearInterval", "holdRepeat", "holdRepeatInterval", "holdrepeat", "enderTypes", "count", "holdRepeat$1", "__backCompatOption", "interactableTargets", "reflow", "Promise", "promises", "reflowPromise", "runningInteraction", "_reflowPromise", "resolve", "_reflowResolve", "xywh", "then", "reflow$1", "default", "exports", "_unused", "isClient", "_a", "isIOS", "isNull", "value", "noop", "INTEGER_REG", "NUMBER_REG", "NUMBER_UNIT", "COLOR_REG_3", "COLOR_REG_4", "RGB_REG", "RGBA_REG", "HSL_REG", "HSLA_REG", "HSV_REG", "HSVA_REG", "NAMED_COLORS", "COLOR_NAMES", "decimalLength", "number", "eSplit", "len", "SIZE_UNIT_WITH_AUTO", "toPrecision", "number", "precision", "multipleInt", "snum", "dLength", "decimalLength", "createOperation", "operation", "numbers", "result", "i", "len", "times", "number1", "number2", "int1", "int2", "base", "plus", "minus", "divide", "SECOND_ON_MILLISECONDS", "MINUTE_ON_SECONDS", "MINUTE_ON_MILLS", "MINUTE_ON_MILLISECONDS", "HOUR_ON_MINUTES", "HOUR_ON_SECONDS", "HOUR_ON_MILLS", "HOUR_ON_MILLISECONDS", "DAY_ON_HOURS", "DAY_ON_MINUTES", "DAY_ON_SECONDS", "DAY_ON_MILLS", "DAY_ON_MILLISECONDS", "WEEK_ON_DAYS", "WEEK_ON_HOURS", "WEEK_ON_MINUTES", "WEEK_ON_SECONDS", "WEEK_ON_MILLS", "WEEK_ON_MILLISECONDS", "QUARTER_ON_MONTHS", "YEAR_ON_QUARTERS", "YEAR_ON_MONTHS", "USE_TOUCH", "isClient", "getMaxTouchPoints", "getMaxTouchPoints", "TABABLE_SELECTOR", "s", "createEventEmitter", "handlerMap", "type", "handler", "handlers", "payload", "throttle", "method", "interval", "noop", "invoke", "args", "debounceMinor", "lastCall", "timer", "current", "elapsed", "debounce", "delay", "called", "lastArgs", "promise", "tickCallbacks", "tickArgsMap", "flushTickCallbacks", "fn", "nextTickOnce", "method", "args", "LAYOUT_KEY", "EMITTER_KEY", "bottom", "layout", "max", "bottomY", "i", "len", "cloneLayout", "newLayout", "cloneLayoutItem", "layoutItem", "collides", "l1", "l2", "compact", "verticalCompact", "minPositions", "compareWith", "getStatics", "sorted", "sortLayoutItemsByRowCol", "out", "l", "compactItem", "getFirstCollision", "minY", "correctBounds", "bounds", "collidesWith", "getLayoutItem", "id", "getAllCollisions", "moveElement", "x", "y", "isUserAction", "preventCollision", "oldX", "oldY", "movingUp", "collisions", "collision", "moveElementAwayFromCollision", "itemToMove", "fakeItem", "setTransform", "top", "left", "width", "height", "translate", "setTransformRtl", "right", "setTopLeft", "setTopRight", "a", "b", "validateLayout", "contextName", "subProps", "keyArr", "item", "j", "useNameHelper", "block", "namespace", "element", "modifier", "getControlPosition", "e", "offsetXYFromParentOf", "evt", "_a", "offsetParent", "offsetParentRect", "x", "y", "createCoreData", "lastX", "lastY", "isNum", "num", "getBreakpointFromWidth", "breakpoints", "width", "sorted", "sortBreakpoints", "matching", "i", "len", "breakpointName", "getColsFromBreakpoint", "breakpoint", "cols", "findOrGenerateResponsiveLayout", "orgLayout", "layouts", "lastBreakpoint", "verticalCompact", "cloneLayout", "layout", "breakpointsSorted", "breakpointsAbove", "b", "compact", "correctBounds", "a", "currentDir", "hasDocument", "getDocumentDir", "layout", "inject", "LAYOUT_KEY", "emitter", "EMITTER_KEY", "interactObj", "ref", "state", "reactive", "dragEventSet", "resizeEventSet", "lastX", "lastY", "lastW", "lastH", "previousW", "previousH", "previousX", "previousY", "innerX", "props", "innerY", "innerW", "innerH", "wrapper", "instance", "toRef", "calcXY", "updateWidthHandler", "width", "updateWidth", "compactHandler", "compact", "setDraggableHandler", "isDraggable", "isNull", "setResizableHandler", "isResizable", "setBoundedHandler", "isBounded", "setTransformScaleHandler", "transformScale", "setRowHeightHandler", "rowHeight", "setMaxRowsHandler", "maxRows", "directionchangeHandler", "getDocumentDir", "setColNum", "colNum", "onBeforeMount", "onMounted", "getColsFromBreakpoint", "watchEffect", "nextTickOnce", "createStyle", "onBeforeUnmount", "expose", "isAndroid", "resizableAndNotStatic", "computed", "renderRtl", "draggableOrResizableAndNotStatic", "nh", "useNameHelper", "className", "resizerClass", "watch", "value", "tryMakeDraggable", "tryMakeResizable", "emitContainerResized", "margin", "pos", "calcPosition", "style", "setTransformRtl", "setTransform", "setTopRight", "setTopLeft", "styleProps", "prop", "matches", "emit", "handleResize", "event", "type", "position", "getControlPosition", "x", "y", "newSize", "coreEvent", "createCoreData", "calcWH", "handleDrag", "target", "newPosition", "parentRect", "clientRect", "cLeft", "pLeft", "cRight", "pRight", "cTop", "pTop", "bottomBoundary", "calcGridItemWHPx", "clamp", "colWidth", "calcColWidth", "rightBoundary", "w", "h", "out", "top", "left", "gridUnits", "colOrRowSize", "marginPx", "num", "lowerBound", "upperBound", "height", "autoSizeFlag", "tryInteract", "interact", "throttleDrag", "throttle", "opts", "throttleResize", "maximum", "minimum", "y", "At", "w", "t", "ot", "G", "Xe", "y", "Ze", "_r", "kr", "t", "e", "r", "i", "s", "w", "c", "jr", "t", "e", "ot", "i", "Xt", "r", "s", "c", "CLICK_OUTSIDE", "elements", "isClient", "CLICK_TYPE", "event", "target", "path", "el", "dispatchEvent", "functionsMap", "map", "isClient", "m", "supported", "notSupportedResult", "computed", "noop", "states", "subscriptions", "ELEMENT", "EVENT", "state", "full", "registered", "record", "handler", "event", "pageX", "pageY", "state", "throttleHandler", "throttle", "createCoords", "v", "noOffsets", "createCoords", "resizeObservers", "hasActiveObservations", "ro", "hasSkippedObservations", "msg", "deliverResizeLoopError", "event", "ResizeObserverBoxOptions", "freeze", "obj", "ResizeObserverSize", "inlineSize", "blockSize", "DOMRectReadOnly", "x", "y", "width", "height", "_a", "top", "right", "bottom", "left", "rectangle", "isSVG", "target", "isHidden", "_b", "offsetWidth", "offsetHeight", "isElement", "scope", "isReplacedElement", "global", "cache", "scrollRegexp", "verticalRegexp", "IE", "parseDimension", "pixel", "size", "switchSizes", "zeroBoxes", "calculateBoxSizes", "forceRecalculation", "cs", "svg", "removePadding", "canScrollVertically", "canScrollHorizontally", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "borderTop", "borderRight", "borderBottom", "borderLeft", "horizontalPadding", "verticalPadding", "horizontalBorderArea", "verticalBorderArea", "horizontalScrollbarThickness", "verticalScrollbarThickness", "widthReduction", "heightReduction", "contentWidth", "contentHeight", "borderBoxWidth", "borderBoxHeight", "boxes", "calculateBoxSize", "observedBox", "borderBoxSize", "contentBoxSize", "devicePixelContentBoxSize", "ResizeObserverEntry", "calculateDepthForNode", "node", "depth", "parent", "broadcastActiveObservations", "shallowestDepth", "callbacks", "entries", "ot", "entry", "targetDepth", "_i", "callbacks_1", "callback", "gatherActiveObservationsAtDepth", "process", "trigger", "notify", "cb", "queueMicroTask", "toggle_1", "el_1", "config", "queueResizeObserver", "watching", "isWatching", "CATCH_PERIOD", "observerConfig", "events", "time", "timeout", "scheduled", "Scheduler", "_this", "until", "elementsHaveResized", "name", "scheduler", "updateCount", "n", "skipNotifyOnElement", "ResizeObservation", "ResizeObserverDetail", "resizeObserver", "observerMap", "getObservationIndex", "observationTargets", "i", "ResizeObserverController", "detail", "options", "firstObservation", "index", "lastObservation", "ResizeObserver", "handlerMap", "handleResize", "len", "handler", "isClient", "observeResize", "el", "unobserveResize", "useResize", "rtl", "ref", "computedRtl", "computed", "placementWhileList", "styleId", "elClass", "activeThemes", "reactive", "themeWidths", "watch", "isClient", "prevStyle", "styleId", "style", "content", "elClass", "width", "name", "rootClass", "varsClass", "state", "reactive", "itemInstances", "currentLayout", "ref", "props", "wrapper", "observeResize", "unobserveResize", "useResize", "emitter", "createEventEmitter", "resizeEventHandler", "dragEventHandler", "onBeforeMount", "emit", "onMounted", "nextTick", "validateLayout", "initResponsiveFeatures", "debounce", "onWindowResize", "compact", "updateHeight", "onBeforeUnmount", "eventType", "i", "x", "y", "h", "w", "resizeEvent", "dragEvent", "watch", "newVal", "oldVal", "layoutUpdate", "val", "value", "provide", "LAYOUT_KEY", "toRefs", "increaseItem", "decreaseItem", "EMITTER_KEY", "expose", "getItem", "item", "id", "isNull", "diff", "findDifference", "ids", "containerHeight", "marginY", "bottom", "positionsBeforeDrag", "eventName", "l", "getLayoutItem", "result", "moveElement", "hasCollisions", "collisions", "getAllCollisions", "layoutItem", "leastX", "leastY", "responsiveGridLayout", "newBreakpoint", "getBreakpointFromWidth", "newCols", "getColsFromBreakpoint", "cloneLayout", "layout", "findOrGenerateResponsiveLayout", "originalLayout", "originalIds", "uniqueResultOne", "uniqueResultTwo", "e", "r"]
}
